{
	"id": "ec2a7d720f0b5507c5d9727e866f246a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KipProtocol.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ISFT.sol\";\n\ncontract KipProtocol is Ownable, ReentrancyGuard {\n    using Strings for address;\n    using Strings for uint256;\n    using EnumerableMap for EnumerableMap.UintToUintMap;\n    \n    address public priceToken; // 0xa6fb168a1264075946a2f7cb08384f5a7ab2f05b\n    uint256 public commissionRate; // 1000 / 10000\n    uint256 public lastConsumeID;\n    uint256 public sftSlot;\n\n    mapping(uint256 => address) public sft_assets; \n    mapping(address => uint256) public consumer_balance;\n    mapping(address => bool) public service_provider;\n    mapping(address => EnumerableMap.UintToUintMap) private sft_token_profit;\n\n    struct receipt{\n        uint256 reference_id;\n        uint256 profit_per_share;\n    }\n\n    event CommissionRateChanged(uint256 newfee_);\n    event ServiceProviderChanged(address _providerAddress, bool _enabled);\n    event ConsumerBalanceRecharged(address _walletAddress, uint256 amount_);\n    event TokenCreated(address sft_address, uint256 slot_value, uint256 token_amount, uint256 reference_id);\n    event PriceTokenChanged(address token_address);\n    event ConsumeLog(uint256 consume_id, uint256 _amount, receipt[] _receipt);\n\n    constructor(address initialOwner, address price_token, uint256 commission_rate) Ownable(initialOwner) {\n        priceToken = price_token;\n        commissionRate = commission_rate;\n        lastConsumeID = 1;\n        sftSlot = 1;\n    }\n\n    function createToken(address sft_address, uint256 slot_value, uint256 token_amount) public {\n        ISFT sft_entry = ISFT(sft_address);\n        require(sft_entry.owner() == address(this), \"Not a owner\");\n        require(sft_assets[sft_entry._offchainReferenceID()] == address(0), \"Already created\");\n\n        for (uint256 i = 1; i <= token_amount; i++) {\n            sft_entry.mint(sft_entry._ownerAddress(), sftSlot, slot_value);\n        }\n        sft_assets[sft_entry._offchainReferenceID()] = sft_address;\n\n        emit TokenCreated(sft_address, slot_value, token_amount, sft_entry._offchainReferenceID());\n    }\n\n    function consume(address _consumer, uint256 _amount, receipt[] memory _receipt) public {\n        require(service_provider[_msgSender()], \"Not a provider\");\n        require(_amount<=consumer_balance[_consumer], \"Not a enough money\");\n\n        for (uint256 i = 0; i < _receipt.length; i++) {\n\n            address _sft_address = sft_assets[_receipt[i].reference_id];\n            uint256 _profit_per_share = _receipt[i].profit_per_share;\n\n            require(_sft_address != address(0), \"ReferenceID does not exist\");\n\n            ISFT sft_entry = ISFT(_sft_address);\n\n            EnumerableMap.UintToUintMap storage token_profit = sft_token_profit[_sft_address];\n\n            for (uint256 j = 0; j < sft_entry.tokenSupplyInSlot(sftSlot); j++) {\n                uint256 _sft_token_id = sft_entry.tokenInSlotByIndex(sftSlot,j);\n                uint256 _slot_value = sft_entry.balanceOf(_sft_token_id);\n                (bool tokenIsExist, uint256 beforeValue) = token_profit.tryGet(_sft_token_id);\n                uint256 newValue = _slot_value * _profit_per_share;\n                if (tokenIsExist) {\n                    token_profit.set(_sft_token_id, beforeValue + newValue);\n                } else {\n                    token_profit.set(_sft_token_id, newValue);\n                }\n            }\n            \n        }\n\n        emit ConsumeLog(lastConsumeID, _amount,  _receipt);\n\n        lastConsumeID++;\n    }\n\n    function _lastConsumeID() public view returns (uint256) {\n        return lastConsumeID;\n    }\n\n    function recharge(uint256 amount_) public {\n        IERC20 token = IERC20(priceToken);\n        token.transferFrom(_msgSender(), address(this), amount_);\n        consumer_balance[_msgSender()] += amount_;\n        emit ConsumerBalanceRecharged(_msgSender(),amount_);\n    }\n\n    function setCommissionRate(uint256 _newrate) public onlyOwner {\n        commissionRate = _newrate;\n        emit CommissionRateChanged(_newrate);\n    }\n\n    function setPriceToken(address newtoken) public onlyOwner {\n        priceToken = newtoken;\n        emit PriceTokenChanged(newtoken);\n    }\n\n    function setServiceProvider(address _address, bool _enabled) public onlyOwner {\n        service_provider[_address] = _enabled;\n        emit ServiceProviderChanged(_address, _enabled);\n    }\n}\n"
			},
			"contracts/ISFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol\";\r\nimport \"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol\";\r\n\r\ninterface ISFT is IERC3525SlotApprovable, IERC3525SlotEnumerable {\r\n    function mint(address mintTo_, uint256 slot_, uint256 value_) external;\r\n    function mintValue(uint256 tokenId_, uint256 value_) external;\r\n    function _offchainReferenceID() external view returns (uint256);\r\n    function _ownerAddress() external view returns (address);\r\n    function _queryPrice() external view returns (uint256);\r\n    function owner() external view  returns (address);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableMap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableMap.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableMap.js.\n\npragma solidity ^0.8.20;\n\nimport {EnumerableSet} from \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code repetition as possible, we write it in\n    // terms of a generic Map type with bytes32 keys and values. The Map implementation uses private functions,\n    // and user-facing implementations such as `UintToAddressMap` are just wrappers around the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit in bytes32.\n\n    /**\n     * @dev Query for a nonexistent map key.\n     */\n    error EnumerableMapNonexistentKey(bytes32 key);\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 key => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToBytes32Map storage map, bytes32 key, bytes32 value) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        if (value == 0 && !contains(map, key)) {\n            revert EnumerableMapNonexistentKey(key);\n        }\n        return value;\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToBytes32Map storage map) internal view returns (bytes32[] memory) {\n        return map._keys.values();\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToUintMap storage map, uint256 key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToUintMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToAddressMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(AddressToUintMap storage map, address key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(AddressToUintMap storage map) internal view returns (address[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToUintMap storage map, bytes32 key, uint256 value) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToUintMap storage map) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC3525.sol\";\nimport \"./IERC721Enumerable.sol\";\n/**\n * @title ERC-3525 Semi-Fungible Token Standard, optional extension for slot enumeration\n * @dev Interfaces for any contract that wants to support enumeration of slots as well as tokens \n *  with the same slot.\n *  See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0x3b741b9e.\n */\ninterface IERC3525SlotEnumerable is IERC3525, IERC721Enumerable {\n\n    /**\n     * @notice Get the total amount of slots stored by the contract.\n     * @return The total amount of slots\n     */\n    function slotCount() external view returns (uint256);\n\n    /**\n     * @notice Get the slot at the specified index of all slots stored by the contract.\n     * @param _index The index in the slot list\n     * @return The slot at `index` of all slots.\n     */\n    function slotByIndex(uint256 _index) external view returns (uint256);\n\n    /**\n     * @notice Get the total amount of tokens with the same slot.\n     * @param _slot The slot to query token supply for\n     * @return The total amount of tokens with the specified `_slot`\n     */\n    function tokenSupplyInSlot(uint256 _slot) external view returns (uint256);\n\n    /**\n     * @notice Get the token at the specified index of all tokens with the same slot.\n     * @param _slot The slot to query tokens with\n     * @param _index The index in the token list of the slot\n     * @return The token ID at `_index` of all tokens with `_slot`\n     */\n    function tokenInSlotByIndex(uint256 _slot, uint256 _index) external view returns (uint256);\n}\n"
			},
			"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC3525.sol\";\n\n/**\n * @title ERC-3525 Semi-Fungible Token Standard, optional extension for approval of slot level\n * @dev Interfaces for any contract that wants to support approval of slot level, which allows an\n *  operator to manage one's tokens with the same slot.\n *  See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0xb688be58.\n */\ninterface IERC3525SlotApprovable is IERC3525 {\n    /**\n     * @dev MUST emits when an operator is approved or disapproved to manage all of `_owner`'s\n     *  tokens with the same slot.\n     * @param _owner The address whose tokens are approved\n     * @param _slot The slot to approve, all of `_owner`'s tokens with this slot are approved\n     * @param _operator The operator being approved or disapproved\n     * @param _approved Identify if `_operator` is approved or disapproved\n     */\n    event ApprovalForSlot(address indexed _owner, uint256 indexed _slot, address indexed _operator, bool _approved);\n\n    /**\n     * @notice Approve or disapprove an operator to manage all of `_owner`'s tokens with the\n     *  specified slot.\n     * @dev Caller SHOULD be `_owner` or an operator who has been authorized through\n     *  `setApprovalForAll`.\n     *  MUST emit ApprovalSlot event.\n     * @param _owner The address that owns the ERC3525 tokens\n     * @param _slot The slot of tokens being queried approval of\n     * @param _operator The address for whom to query approval\n     * @param _approved Identify if `_operator` would be approved or disapproved\n     */\n    function setApprovalForSlot(\n        address _owner,\n        uint256 _slot,\n        address _operator,\n        bool _approved\n    ) external payable;\n\n    /**\n     * @notice Query if `_operator` is authorized to manage all of `_owner`'s tokens with the\n     *  specified slot.\n     * @param _owner The address that owns the ERC3525 tokens\n     * @param _slot The slot of tokens being queried approval of\n     * @param _operator The address for whom to query approval\n     * @return True if `_operator` is authorized to manage all of `_owner`'s tokens with `_slot`,\n     *  false otherwise.\n     */\n    function isApprovedForSlot(\n        address _owner,\n        uint256 _slot,\n        address _operator\n    ) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *  Note: the ERC-165 identifier for this interface is 0x780e9d63.\n */\ninterface IERC721Enumerable is IERC721 {\n    /** \n     * @notice Count NFTs tracked by this contract\n     * @return A count of valid NFTs tracked by this contract, where each one of\n     *  them has an assigned and queryable owner not equal to the zero address\n     */\n    function totalSupply() external view returns (uint256);\n\n    /** \n     * @notice Enumerate valid NFTs\n     * @dev Throws if `_index` >= `totalSupply()`.\n     * @param _index A counter less than `totalSupply()`\n     * @return The token identifier for the `_index`th NFT,\n     *  (sort order not specified)\n     */\n    function tokenByIndex(uint256 _index) external view returns (uint256);\n\n    /** \n     * @notice Enumerate NFTs assigned to an owner\n     * @dev Throws if `_index` >= `balanceOf(_owner)` or if\n     *  `_owner` is the zero address, representing invalid NFTs.\n     * @param _owner An address where we are interested in NFTs owned by them\n     * @param _index A counter less than `balanceOf(_owner)`\n     * @return The token identifier for the `_index`th NFT assigned to `_owner`,\n     *  (sort order not specified)\n     */\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\n}\n"
			},
			"@solvprotocol/erc-3525/IERC3525.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-3525 Semi-Fungible Token Standard\n * @dev See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0xd5358140.\n */\ninterface IERC3525 is IERC165, IERC721 {\n    /**\n     * @dev MUST emit when value of a token is transferred to another token with the same slot,\n     *  including zero value transfers (_value == 0) as well as transfers when tokens are created\n     *  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n     * @param _fromTokenId The token id to transfer value from\n     * @param _toTokenId The token id to transfer value to\n     * @param _value The transferred value\n     */\n    event TransferValue(uint256 indexed _fromTokenId, uint256 indexed _toTokenId, uint256 _value);\n\n    /**\n     * @dev MUST emits when the approval value of a token is set or changed.\n     * @param _tokenId The token to approve\n     * @param _operator The operator to approve for\n     * @param _value The maximum value that `_operator` is allowed to manage\n     */\n    event ApprovalValue(uint256 indexed _tokenId, address indexed _operator, uint256 _value);\n\n    /**\n     * @dev MUST emit when the slot of a token is set or changed.\n     * @param _tokenId The token of which slot is set or changed\n     * @param _oldSlot The previous slot of the token\n     * @param _newSlot The updated slot of the token\n     */ \n    event SlotChanged(uint256 indexed _tokenId, uint256 indexed _oldSlot, uint256 indexed _newSlot);\n\n    /**\n     * @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n     *  representation of the value of a token can be calculated by dividing it by 1,000,000.\n     *  Considering the compatibility with third-party wallets, this function is defined as\n     *  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n     * @return The number of decimals for value\n     */\n    function valueDecimals() external view returns (uint8);\n\n    /**\n     * @notice Get the value of a token.\n     * @param _tokenId The token for which to query the balance\n     * @return The value of `_tokenId`\n     */\n    function balanceOf(uint256 _tokenId) external view returns (uint256);\n\n    /**\n     * @notice Get the slot of a token.\n     * @param _tokenId The identifier for a token\n     * @return The slot of the token\n     */\n    function slotOf(uint256 _tokenId) external view returns (uint256);\n\n    /**\n     * @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n     * @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n     *  address for `_tokenId`.\n     *  MUST emit ApprovalValue event.\n     * @param _tokenId The token to approve\n     * @param _operator The operator to be approved\n     * @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage\n     */\n    function approve(\n        uint256 _tokenId,\n        address _operator,\n        uint256 _value\n    ) external payable;\n\n    /**\n     * @notice Get the maximum value of a token that an operator is allowed to manage.\n     * @param _tokenId The token for which to query the allowance\n     * @param _operator The address of an operator\n     * @return The current approval value of `_tokenId` that `_operator` is allowed to manage\n     */\n    function allowance(uint256 _tokenId, address _operator) external view returns (uint256);\n\n    /**\n     * @notice Transfer value from a specified token to another specified token with the same slot.\n     * @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n     *  approved the whole `_fromTokenId` or part of it.\n     *  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n     *  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n     *  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n     *  operator.\n     *  MUST emit `TransferValue` event.\n     * @param _fromTokenId The token to transfer value from\n     * @param _toTokenId The token to transfer value to\n     * @param _value The transferred value\n     */\n    function transferFrom(\n        uint256 _fromTokenId,\n        uint256 _toTokenId,\n        uint256 _value\n    ) external payable;\n\n    /**\n     * @notice Transfer value from a specified token to an address. The caller should confirm that\n     *  `_to` is capable of receiving ERC3525 tokens.\n     * @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n     *  the transferred value.\n     *  MUST revert if `_fromTokenId` is zero token id or does not exist.\n     *  MUST revert if `_to` is zero address.\n     *  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n     *  operator.\n     *  MUST emit `Transfer` and `TransferValue` events.\n     * @param _fromTokenId The token to transfer value from\n     * @param _to The address to transfer value to\n     * @param _value The transferred value\n     * @return ID of the new token created for `_to` which receives the transferred value\n     */\n    function transferFrom(\n        uint256 _fromTokenId,\n        address _to,\n        uint256 _value\n    ) external payable returns (uint256);\n}\n"
			},
			"@solvprotocol/erc-3525/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/** \n * @title ERC-721 Non-Fungible Token Standard\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\n */\ninterface IERC721 is IERC165 {\n    /** \n     * @dev This emits when ownership of any NFT changes by any mechanism.\n     *  This event emits when NFTs are created (`from` == 0) and destroyed\n     *  (`to` == 0). Exception: during contract creation, any number of NFTs\n     *  may be created and assigned without emitting Transfer. At the time of\n     *  any transfer, the approved address for that NFT (if any) is reset to none.\n     */\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n\n    /**\n     * @dev This emits when the approved address for an NFT is changed or\n     *  reaffirmed. The zero address indicates there is no approved address.\n     *  When a Transfer event emits, this also indicates that the approved\n     *  address for that NFT (if any) is reset to none.\n     */\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n\n    /**\n     * @dev This emits when an operator is enabled or disabled for an owner.\n     *  The operator can manage all NFTs of the owner.\n     */\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /**\n     * @notice Count all NFTs assigned to an owner\n     * @dev NFTs assigned to the zero address are considered invalid, and this\n     *  function throws for queries about the zero address.\n     * @param _owner An address for whom to query the balance\n     * @return The number of NFTs owned by `_owner`, possibly zero\n     */\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /**\n     * @notice Find the owner of an NFT\n     * @dev NFTs assigned to zero address are considered invalid, and queries\n     *  about them do throw.\n     * @param _tokenId The identifier for an NFT\n     * @return The address of the owner of the NFT\n     */\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT. When transfer is complete, this function\n     *  checks if `_to` is a smart contract (code size > 0). If so, it calls\n     *  `onERC721Received` on `_to` and throws if the return value is not\n     *  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     * @param data Additional data with no specified format, sent in call to `_to`\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata data) external payable;\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev This works identically to the other function with an extra data parameter,\n     *  except this function just sets data to \"\".\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n     *  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n     *  THEY MAY BE PERMANENTLY LOST\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT.\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     */\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Change or reaffirm the approved address for an NFT\n     * @dev The zero address indicates there is no approved address.\n     *  Throws unless `msg.sender` is the current NFT owner, or an authorized\n     *  operator of the current owner.\n     * @param _approved The new approved NFT controller\n     * @param _tokenId The NFT to approve\n     */\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Enable or disable approval for a third party (\"operator\") to manage\n     *  all of `msg.sender`'s assets\n     * @dev Emits the ApprovalForAll event. The contract MUST allow\n     *  multiple operators per owner.\n     * @param _operator Address to add to the set of authorized operators\n     * @param _approved True if the operator is approved, false to revoke approval\n     */\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    /**\n     * @notice Get the approved address for a single NFT\n     * @dev Throws if `_tokenId` is not a valid NFT.\n     * @param _tokenId The NFT to find the approved address for\n     * @return The approved address for this NFT, or the zero address if there is none\n     */\n    function getApproved(uint256 _tokenId) external view returns (address);\n\n    /**\n     * @notice Query if an address is an authorized operator for another address\n     * @param _owner The address that owns the NFTs\n     * @param _operator The address that acts on behalf of the owner\n     * @return True if `_operator` is an approved operator for `_owner`, false otherwise\n     */\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"@solvprotocol/erc-3525/IERC3525.sol",
								"@solvprotocol/erc-3525/IERC721.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
								"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
								"contracts/ISFT.sol",
								"contracts/KipProtocol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"@solvprotocol/erc-3525/IERC3525.sol",
								"@solvprotocol/erc-3525/IERC721.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
								"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
								"contracts/ISFT.sol",
								"contracts/KipProtocol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"@solvprotocol/erc-3525/IERC3525.sol",
								"@solvprotocol/erc-3525/IERC721.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
								"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
								"contracts/ISFT.sol",
								"contracts/KipProtocol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableMap.sol": {
				"EnumerableMap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "EnumerableMapNonexistentKey",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====",
						"errors": {
							"EnumerableMapNonexistentKey(bytes32)": [
								{
									"details": "Query for a nonexistent map key."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":1651:18900  library EnumerableMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":1651:18900  library EnumerableMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfc31e3241eb1581c017ba3d5929b2ed97fab2efd7865c8c617da7ebaac5035b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfc31e3241eb1581c017ba3d5929b2ed97fab2efd7865c8c617da7ebaac5035b64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xC3 0x1E ORIGIN COINBASE 0xEB ISZERO DUP2 0xC0 OR 0xBA RETURNDATASIZE MSIZE 0x29 0xB2 0xED SWAP8 STATICCALL 0xB2 0xEF 0xD7 DUP7 0x5C DUP13 PUSH2 0x7DA7 0xEB 0xAA 0xC5 SUB JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1651:17249:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1651:17249:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfc31e3241eb1581c017ba3d5929b2ed97fab2efd7865c8c617da7ebaac5035b64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xC3 0x1E ORIGIN COINBASE 0xEB ISZERO DUP2 0xC0 OR 0xBA RETURNDATASIZE MSIZE 0x29 0xB2 0xED SWAP8 STATICCALL 0xB2 0xEF 0xD7 DUP7 0x5C DUP13 PUSH2 0x7DA7 0xEB 0xAA 0xC5 SUB JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1651:17249:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"at(struct EnumerableMap.AddressToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"keys(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"keys(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"keys(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"keys(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"keys(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"remove(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"remove(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"set(struct EnumerableMap.AddressToUintMap storage pointer,address,uint256)": "infinite",
								"set(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32)": "infinite",
								"set(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256)": "infinite",
								"set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)": "infinite",
								"set(struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256)": "infinite",
								"tryGet(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"tryGet(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfc31e3241eb1581c017ba3d5929b2ed97fab2efd7865c8c617da7ebaac5035b64736f6c63430008160033",
									".code": [
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"@solvprotocol/erc-3525/IERC3525.sol",
								"@solvprotocol/erc-3525/IERC721.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
								"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
								"contracts/ISFT.sol",
								"contracts/KipProtocol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"EnumerableMapNonexistentKey\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"errors\":{\"EnumerableMapNonexistentKey(bytes32)\":[{\"details\":\"Query for a nonexistent map key.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xa3edd94148e931d8a37353624ea57afa1c679b6fe06b7059ccdc8da78a90c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0041d5bae8c6115c3378532d5b7cfbb1a288780279a3873334e49785b65a1b9d\",\"dweb:/ipfs/QmQTGDrQSZkzRbFZWAhysaeCvKnP7wPh2VSPkN4J323QmZ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ae24e9feda7d7001862fdb3421373c11fe1203d2db13fe83b453f6af27d600d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ae24e9feda7d7001862fdb3421373c11fe1203d2db13fe83b453f6af27d600d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xE2 0x4E SWAP16 0xED 0xA7 0xD7 STOP XOR PUSH3 0xFDB342 SGT PUSH20 0xC11FE1203D2DB13FE83B453F6AF27D600D64736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "1330:11640:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1330:11640:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ae24e9feda7d7001862fdb3421373c11fe1203d2db13fe83b453f6af27d600d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xE2 0x4E SWAP16 0xED 0xA7 0xD7 STOP XOR PUSH3 0xFDB342 SGT PUSH20 0xC11FE1203D2DB13FE83B453F6AF27D600D64736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "1330:11640:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ae24e9feda7d7001862fdb3421373c11fe1203d2db13fe83b453f6af27d600d64736f6c63430008160033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"@solvprotocol/erc-3525/IERC3525.sol",
								"@solvprotocol/erc-3525/IERC721.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
								"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
								"contracts/ISFT.sol",
								"contracts/KipProtocol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solvprotocol/erc-3525/IERC3525.sol": {
				"IERC3525": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xd5358140.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"slotOf(uint256)": "263f3e7e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xd5358140.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solvprotocol/erc-3525/IERC3525.sol\":\"IERC3525\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@solvprotocol/erc-3525/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"@solvprotocol/erc-3525/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solvprotocol/erc-3525/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol": {
				"IERC3525SlotApprovable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForSlot",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForSlot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForSlot",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interfaces for any contract that wants to support approval of slot level, which allows an  operator to manage one's tokens with the same slot.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xb688be58.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalForSlot(address,uint256,address,bool)": {
								"details": "MUST emits when an operator is approved or disapproved to manage all of `_owner`'s  tokens with the same slot.",
								"params": {
									"_approved": "Identify if `_operator` is approved or disapproved",
									"_operator": "The operator being approved or disapproved",
									"_owner": "The address whose tokens are approved",
									"_slot": "The slot to approve, all of `_owner`'s tokens with this slot are approved"
								}
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"isApprovedForSlot(address,uint256,address)": {
								"params": {
									"_operator": "The address for whom to query approval",
									"_owner": "The address that owns the ERC3525 tokens",
									"_slot": "The slot of tokens being queried approval of"
								},
								"returns": {
									"_0": "True if `_operator` is authorized to manage all of `_owner`'s tokens with `_slot`,  false otherwise."
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"setApprovalForSlot(address,uint256,address,bool)": {
								"details": "Caller SHOULD be `_owner` or an operator who has been authorized through  `setApprovalForAll`.  MUST emit ApprovalSlot event.",
								"params": {
									"_approved": "Identify if `_operator` would be approved or disapproved",
									"_operator": "The address for whom to query approval",
									"_owner": "The address that owns the ERC3525 tokens",
									"_slot": "The slot of tokens being queried approval of"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard, optional extension for approval of slot level",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isApprovedForSlot(address,uint256,address)": "e345f05e",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setApprovalForSlot(address,uint256,address,bool)": "55cd4e06",
							"slotOf(uint256)": "263f3e7e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForSlot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForSlot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interfaces for any contract that wants to support approval of slot level, which allows an  operator to manage one's tokens with the same slot.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xb688be58.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalForSlot(address,uint256,address,bool)\":{\"details\":\"MUST emits when an operator is approved or disapproved to manage all of `_owner`'s  tokens with the same slot.\",\"params\":{\"_approved\":\"Identify if `_operator` is approved or disapproved\",\"_operator\":\"The operator being approved or disapproved\",\"_owner\":\"The address whose tokens are approved\",\"_slot\":\"The slot to approve, all of `_owner`'s tokens with this slot are approved\"}},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"isApprovedForSlot(address,uint256,address)\":{\"params\":{\"_operator\":\"The address for whom to query approval\",\"_owner\":\"The address that owns the ERC3525 tokens\",\"_slot\":\"The slot of tokens being queried approval of\"},\"returns\":{\"_0\":\"True if `_operator` is authorized to manage all of `_owner`'s tokens with `_slot`,  false otherwise.\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"setApprovalForSlot(address,uint256,address,bool)\":{\"details\":\"Caller SHOULD be `_owner` or an operator who has been authorized through  `setApprovalForAll`.  MUST emit ApprovalSlot event.\",\"params\":{\"_approved\":\"Identify if `_operator` would be approved or disapproved\",\"_operator\":\"The address for whom to query approval\",\"_owner\":\"The address that owns the ERC3525 tokens\",\"_slot\":\"The slot of tokens being queried approval of\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard, optional extension for approval of slot level\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"isApprovedForSlot(address,uint256,address)\":{\"notice\":\"Query if `_operator` is authorized to manage all of `_owner`'s tokens with the  specified slot.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"setApprovalForSlot(address,uint256,address,bool)\":{\"notice\":\"Approve or disapprove an operator to manage all of `_owner`'s tokens with the  specified slot.\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol\":\"IERC3525SlotApprovable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@solvprotocol/erc-3525/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol\":{\"keccak256\":\"0xbe5baf681bb5a93e20573b01d22559f3822d7e97cc8f028d03f378e570fac47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746f96cd24d2686b78a481835fbb24707dca2987a2f3d4cd2e8d044f5a73dcc0\",\"dweb:/ipfs/QmPHozfJQ7cLf2JQbLMF7M4mC6sB4JRRMB4nmxEWfbgPsg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"isApprovedForSlot(address,uint256,address)": {
								"notice": "Query if `_operator` is authorized to manage all of `_owner`'s tokens with the  specified slot."
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"setApprovalForSlot(address,uint256,address,bool)": {
								"notice": "Approve or disapprove an operator to manage all of `_owner`'s tokens with the  specified slot."
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol": {
				"IERC3525SlotEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "slotByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slotCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenInSlotByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								}
							],
							"name": "tokenSupplyInSlot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interfaces for any contract that wants to support enumeration of slots as well as tokens   with the same slot.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0x3b741b9e.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"slotByIndex(uint256)": {
								"params": {
									"_index": "The index in the slot list"
								},
								"returns": {
									"_0": "The slot at `index` of all slots."
								}
							},
							"slotCount()": {
								"returns": {
									"_0": "The total amount of slots"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Throws if `_index` >= `totalSupply()`.",
								"params": {
									"_index": "A counter less than `totalSupply()`"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT,  (sort order not specified)"
								}
							},
							"tokenInSlotByIndex(uint256,uint256)": {
								"params": {
									"_index": "The index in the token list of the slot",
									"_slot": "The slot to query tokens with"
								},
								"returns": {
									"_0": "The token ID at `_index` of all tokens with `_slot`"
								}
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.",
								"params": {
									"_index": "A counter less than `balanceOf(_owner)`",
									"_owner": "An address where we are interested in NFTs owned by them"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT assigned to `_owner`,  (sort order not specified)"
								}
							},
							"tokenSupplyInSlot(uint256)": {
								"params": {
									"_slot": "The slot to query token supply for"
								},
								"returns": {
									"_0": "The total amount of tokens with the specified `_slot`"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard, optional extension for slot enumeration",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"slotByIndex(uint256)": "993bef8d",
							"slotCount()": "ed08fa80",
							"slotOf(uint256)": "263f3e7e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenInSlotByIndex(uint256,uint256)": "00cd0110",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenSupplyInSlot(uint256)": "4f8a0f83",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"slotByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slotCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenInSlotByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"}],\"name\":\"tokenSupplyInSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interfaces for any contract that wants to support enumeration of slots as well as tokens   with the same slot.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0x3b741b9e.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"slotByIndex(uint256)\":{\"params\":{\"_index\":\"The index in the slot list\"},\"returns\":{\"_0\":\"The slot at `index` of all slots.\"}},\"slotCount()\":{\"returns\":{\"_0\":\"The total amount of slots\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"}},\"tokenInSlotByIndex(uint256,uint256)\":{\"params\":{\"_index\":\"The index in the token list of the slot\",\"_slot\":\"The slot to query tokens with\"},\"returns\":{\"_0\":\"The token ID at `_index` of all tokens with `_slot`\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`,  (sort order not specified)\"}},\"tokenSupplyInSlot(uint256)\":{\"params\":{\"_slot\":\"The slot to query token supply for\"},\"returns\":{\"_0\":\"The total amount of tokens with the specified `_slot`\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard, optional extension for slot enumeration\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"slotByIndex(uint256)\":{\"notice\":\"Get the slot at the specified index of all slots stored by the contract.\"},\"slotCount()\":{\"notice\":\"Get the total amount of slots stored by the contract.\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenInSlotByIndex(uint256,uint256)\":{\"notice\":\"Get the token at the specified index of all tokens with the same slot.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"tokenSupplyInSlot(uint256)\":{\"notice\":\"Get the total amount of tokens with the same slot.\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol\":\"IERC3525SlotEnumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@solvprotocol/erc-3525/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol\":{\"keccak256\":\"0x27afa03aa1c72fd7910701353d1cae009af79ddc83b44b91bfb59001c12fbe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b78135515798c96684c849c4c69bf53adec444495279570506492481f532d591\",\"dweb:/ipfs/QmZVvBidwMjWwCF1iUxCmH3zMbeh5SNyCMztv77mZwGoWt\"]},\"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x872552c912722ad746f43b91583b921b97943aeaddba573ee6f14ef1eec9e03d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fffddbfa9c3c863a313a2036f44148200a5e87f8f51dbddee8578fac889c828f\",\"dweb:/ipfs/QmXfhoS6qzqWpWRGoTc2tdCf88MnGX5eCt4nfV2qun7BEY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"slotByIndex(uint256)": {
								"notice": "Get the slot at the specified index of all slots stored by the contract."
							},
							"slotCount()": {
								"notice": "Get the total amount of slots stored by the contract."
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"tokenByIndex(uint256)": {
								"notice": "Enumerate valid NFTs"
							},
							"tokenInSlotByIndex(uint256,uint256)": {
								"notice": "Get the token at the specified index of all tokens with the same slot."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"notice": "Enumerate NFTs assigned to an owner"
							},
							"tokenSupplyInSlot(uint256)": {
								"notice": "Get the total amount of tokens with the same slot."
							},
							"totalSupply()": {
								"notice": "Count NFTs tracked by this contract"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x780e9d63.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Throws if `_index` >= `totalSupply()`.",
								"params": {
									"_index": "A counter less than `totalSupply()`"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT,  (sort order not specified)"
								}
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.",
								"params": {
									"_index": "A counter less than `balanceOf(_owner)`",
									"_owner": "An address where we are interested in NFTs owned by them"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT assigned to `_owner`,  (sort order not specified)"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x780e9d63.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`,  (sort order not specified)\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x872552c912722ad746f43b91583b921b97943aeaddba573ee6f14ef1eec9e03d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fffddbfa9c3c863a313a2036f44148200a5e87f8f51dbddee8578fac889c828f\",\"dweb:/ipfs/QmXfhoS6qzqWpWRGoTc2tdCf88MnGX5eCt4nfV2qun7BEY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"tokenByIndex(uint256)": {
								"notice": "Enumerate valid NFTs"
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"notice": "Enumerate NFTs assigned to an owner"
							},
							"totalSupply()": {
								"notice": "Count NFTs tracked by this contract"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/ISFT.sol": {
				"ISFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForSlot",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_offchainReferenceID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_ownerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_queryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForSlot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintTo_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slot_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value_",
									"type": "uint256"
								}
							],
							"name": "mintValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForSlot",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "slotByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slotCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenInSlotByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								}
							],
							"name": "tokenSupplyInSlot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalForSlot(address,uint256,address,bool)": {
								"details": "MUST emits when an operator is approved or disapproved to manage all of `_owner`'s  tokens with the same slot.",
								"params": {
									"_approved": "Identify if `_operator` is approved or disapproved",
									"_operator": "The operator being approved or disapproved",
									"_owner": "The address whose tokens are approved",
									"_slot": "The slot to approve, all of `_owner`'s tokens with this slot are approved"
								}
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"isApprovedForSlot(address,uint256,address)": {
								"params": {
									"_operator": "The address for whom to query approval",
									"_owner": "The address that owns the ERC3525 tokens",
									"_slot": "The slot of tokens being queried approval of"
								},
								"returns": {
									"_0": "True if `_operator` is authorized to manage all of `_owner`'s tokens with `_slot`,  false otherwise."
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"setApprovalForSlot(address,uint256,address,bool)": {
								"details": "Caller SHOULD be `_owner` or an operator who has been authorized through  `setApprovalForAll`.  MUST emit ApprovalSlot event.",
								"params": {
									"_approved": "Identify if `_operator` would be approved or disapproved",
									"_operator": "The address for whom to query approval",
									"_owner": "The address that owns the ERC3525 tokens",
									"_slot": "The slot of tokens being queried approval of"
								}
							},
							"slotByIndex(uint256)": {
								"params": {
									"_index": "The index in the slot list"
								},
								"returns": {
									"_0": "The slot at `index` of all slots."
								}
							},
							"slotCount()": {
								"returns": {
									"_0": "The total amount of slots"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Throws if `_index` >= `totalSupply()`.",
								"params": {
									"_index": "A counter less than `totalSupply()`"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT,  (sort order not specified)"
								}
							},
							"tokenInSlotByIndex(uint256,uint256)": {
								"params": {
									"_index": "The index in the token list of the slot",
									"_slot": "The slot to query tokens with"
								},
								"returns": {
									"_0": "The token ID at `_index` of all tokens with `_slot`"
								}
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.",
								"params": {
									"_index": "A counter less than `balanceOf(_owner)`",
									"_owner": "An address where we are interested in NFTs owned by them"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT assigned to `_owner`,  (sort order not specified)"
								}
							},
							"tokenSupplyInSlot(uint256)": {
								"params": {
									"_slot": "The slot to query token supply for"
								},
								"returns": {
									"_0": "The total amount of tokens with the specified `_slot`"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_offchainReferenceID()": "dd3fc0ab",
							"_ownerAddress()": "a786c18b",
							"_queryPrice()": "9e6ec2cb",
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isApprovedForSlot(address,uint256,address)": "e345f05e",
							"mint(address,uint256,uint256)": "156e29f6",
							"mintValue(uint256,uint256)": "f0e88e7f",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setApprovalForSlot(address,uint256,address,bool)": "55cd4e06",
							"slotByIndex(uint256)": "993bef8d",
							"slotCount()": "ed08fa80",
							"slotOf(uint256)": "263f3e7e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenInSlotByIndex(uint256,uint256)": "00cd0110",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenSupplyInSlot(uint256)": "4f8a0f83",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_offchainReferenceID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_queryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForSlot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintTo_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slot_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"name\":\"mintValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForSlot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"slotByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slotCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenInSlotByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"}],\"name\":\"tokenSupplyInSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalForSlot(address,uint256,address,bool)\":{\"details\":\"MUST emits when an operator is approved or disapproved to manage all of `_owner`'s  tokens with the same slot.\",\"params\":{\"_approved\":\"Identify if `_operator` is approved or disapproved\",\"_operator\":\"The operator being approved or disapproved\",\"_owner\":\"The address whose tokens are approved\",\"_slot\":\"The slot to approve, all of `_owner`'s tokens with this slot are approved\"}},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"isApprovedForSlot(address,uint256,address)\":{\"params\":{\"_operator\":\"The address for whom to query approval\",\"_owner\":\"The address that owns the ERC3525 tokens\",\"_slot\":\"The slot of tokens being queried approval of\"},\"returns\":{\"_0\":\"True if `_operator` is authorized to manage all of `_owner`'s tokens with `_slot`,  false otherwise.\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"setApprovalForSlot(address,uint256,address,bool)\":{\"details\":\"Caller SHOULD be `_owner` or an operator who has been authorized through  `setApprovalForAll`.  MUST emit ApprovalSlot event.\",\"params\":{\"_approved\":\"Identify if `_operator` would be approved or disapproved\",\"_operator\":\"The address for whom to query approval\",\"_owner\":\"The address that owns the ERC3525 tokens\",\"_slot\":\"The slot of tokens being queried approval of\"}},\"slotByIndex(uint256)\":{\"params\":{\"_index\":\"The index in the slot list\"},\"returns\":{\"_0\":\"The slot at `index` of all slots.\"}},\"slotCount()\":{\"returns\":{\"_0\":\"The total amount of slots\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"}},\"tokenInSlotByIndex(uint256,uint256)\":{\"params\":{\"_index\":\"The index in the token list of the slot\",\"_slot\":\"The slot to query tokens with\"},\"returns\":{\"_0\":\"The token ID at `_index` of all tokens with `_slot`\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`,  (sort order not specified)\"}},\"tokenSupplyInSlot(uint256)\":{\"params\":{\"_slot\":\"The slot to query token supply for\"},\"returns\":{\"_0\":\"The total amount of tokens with the specified `_slot`\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"isApprovedForSlot(address,uint256,address)\":{\"notice\":\"Query if `_operator` is authorized to manage all of `_owner`'s tokens with the  specified slot.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"setApprovalForSlot(address,uint256,address,bool)\":{\"notice\":\"Approve or disapprove an operator to manage all of `_owner`'s tokens with the  specified slot.\"},\"slotByIndex(uint256)\":{\"notice\":\"Get the slot at the specified index of all slots stored by the contract.\"},\"slotCount()\":{\"notice\":\"Get the total amount of slots stored by the contract.\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenInSlotByIndex(uint256,uint256)\":{\"notice\":\"Get the token at the specified index of all tokens with the same slot.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"tokenSupplyInSlot(uint256)\":{\"notice\":\"Get the total amount of tokens with the same slot.\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ISFT.sol\":\"ISFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@solvprotocol/erc-3525/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol\":{\"keccak256\":\"0xbe5baf681bb5a93e20573b01d22559f3822d7e97cc8f028d03f378e570fac47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746f96cd24d2686b78a481835fbb24707dca2987a2f3d4cd2e8d044f5a73dcc0\",\"dweb:/ipfs/QmPHozfJQ7cLf2JQbLMF7M4mC6sB4JRRMB4nmxEWfbgPsg\"]},\"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol\":{\"keccak256\":\"0x27afa03aa1c72fd7910701353d1cae009af79ddc83b44b91bfb59001c12fbe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b78135515798c96684c849c4c69bf53adec444495279570506492481f532d591\",\"dweb:/ipfs/QmZVvBidwMjWwCF1iUxCmH3zMbeh5SNyCMztv77mZwGoWt\"]},\"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x872552c912722ad746f43b91583b921b97943aeaddba573ee6f14ef1eec9e03d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fffddbfa9c3c863a313a2036f44148200a5e87f8f51dbddee8578fac889c828f\",\"dweb:/ipfs/QmXfhoS6qzqWpWRGoTc2tdCf88MnGX5eCt4nfV2qun7BEY\"]},\"contracts/ISFT.sol\":{\"keccak256\":\"0x17358c34abab76cd1dabdc05f33136fba861cffe49422a8e0cbf4a650e5dc2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48fbf3159f9b63367ada5c72dc0c46c12aca94ca8eb6a9f77a137fe6c38aefff\",\"dweb:/ipfs/Qmbv5n88yc5inP9zRLXjLNfKVXYGsqF8swkQ8TDLwpiziD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"isApprovedForSlot(address,uint256,address)": {
								"notice": "Query if `_operator` is authorized to manage all of `_owner`'s tokens with the  specified slot."
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"setApprovalForSlot(address,uint256,address,bool)": {
								"notice": "Approve or disapprove an operator to manage all of `_owner`'s tokens with the  specified slot."
							},
							"slotByIndex(uint256)": {
								"notice": "Get the slot at the specified index of all slots stored by the contract."
							},
							"slotCount()": {
								"notice": "Get the total amount of slots stored by the contract."
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"tokenByIndex(uint256)": {
								"notice": "Enumerate valid NFTs"
							},
							"tokenInSlotByIndex(uint256,uint256)": {
								"notice": "Get the token at the specified index of all tokens with the same slot."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"notice": "Enumerate NFTs assigned to an owner"
							},
							"tokenSupplyInSlot(uint256)": {
								"notice": "Get the total amount of tokens with the same slot."
							},
							"totalSupply()": {
								"notice": "Count NFTs tracked by this contract"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/KipProtocol.sol": {
				"KipProtocol": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "price_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "commission_rate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newfee_",
									"type": "uint256"
								}
							],
							"name": "CommissionRateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "consume_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "reference_id",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "profit_per_share",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct KipProtocol.receipt[]",
									"name": "_receipt",
									"type": "tuple[]"
								}
							],
							"name": "ConsumeLog",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_walletAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "ConsumerBalanceRecharged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								}
							],
							"name": "PriceTokenChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_providerAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "ServiceProviderChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sft_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "slot_value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reference_id",
									"type": "uint256"
								}
							],
							"name": "TokenCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_lastConsumeID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commissionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_consumer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "reference_id",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "profit_per_share",
											"type": "uint256"
										}
									],
									"internalType": "struct KipProtocol.receipt[]",
									"name": "_receipt",
									"type": "tuple[]"
								}
							],
							"name": "consume",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "consumer_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sft_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slot_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "token_amount",
									"type": "uint256"
								}
							],
							"name": "createToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastConsumeID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "recharge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "service_provider",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newrate",
									"type": "uint256"
								}
							],
							"name": "setCommissionRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newtoken",
									"type": "address"
								}
							],
							"name": "setPriceToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setServiceProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sftSlot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sft_assets",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KipProtocol.sol\":368:4655  contract KipProtocol is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/KipProtocol.sol\":1514:1747  constructor(address initialOwner, address price_token, uint256 commission_rate) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/KipProtocol.sol\":1602:1614  initialOwner */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":701:752   */\n  mstore\n    /* \"#utility.yul\":674:692   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup1\n  dup1\n  sstore\n    /* \"contracts/KipProtocol.sol\":1626:1636  priceToken */\n  0x02\n    /* \"contracts/KipProtocol.sol\":1626:1650  priceToken = price_token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/KipProtocol.sol\":1660:1674  commissionRate */\n  0x03\n    /* \"contracts/KipProtocol.sol\":1660:1692  commissionRate = commission_rate */\n  sstore\n    /* \"contracts/KipProtocol.sol\":1702:1715  lastConsumeID */\n  0x04\n    /* \"contracts/KipProtocol.sol\":1702:1719  lastConsumeID = 1 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/KipProtocol.sol\":1729:1736  sftSlot */\n  0x05\n    /* \"contracts/KipProtocol.sol\":1729:1740  sftSlot = 1 */\n  sstore\n  pop\n    /* \"contracts/KipProtocol.sol\":368:4655  contract KipProtocol is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:550   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_22:\n    /* \"#utility.yul\":392:432   */\n  tag_23\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_24\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":529:538   */\n  dup5\n    /* \"#utility.yul\":525:543   */\n  add\n    /* \"#utility.yul\":519:544   */\n  mload\n    /* \"#utility.yul\":509:544   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:550   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":555:758   */\ntag_18:\n    /* \"contracts/KipProtocol.sol\":368:4655  contract KipProtocol is Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/KipProtocol.sol\":368:4655  contract KipProtocol is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa335a003\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xdbdcebde\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xdbdcebde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xec10342c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xef299b0b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfb771cb5\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0xa335a003\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb0e0a569\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb85f4344\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcae5ec04\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x48818bde\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x48818bde\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5ea1d6f8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x017e4d1e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19fac8fd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ff6fe76\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x411092e3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/KipProtocol.sol\":4464:4653  function setServiceProvider(address _address, bool _enabled) public onlyOwner {... */\n    tag_3:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/KipProtocol.sol\":4164:4314  function setCommissionRate(uint256 _newrate) public onlyOwner {... */\n    tag_4:\n      tag_23\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/KipProtocol.sol\":547:572  address public priceToken */\n    tag_5:\n      sload(0x02)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1009:1041   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":991:1042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"contracts/KipProtocol.sol\":547:572  address public priceToken */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipProtocol.sol\":4320:4458  function setPriceToken(address newtoken) public onlyOwner {... */\n    tag_6:\n      tag_23\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/KipProtocol.sol\":675:703  uint256 public lastConsumeID */\n    tag_7:\n      tag_39\n      sload(0x04)\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1451:1476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1439:1441   */\n      0x20\n        /* \"#utility.yul\":1424:1442   */\n      add\n        /* \"contracts/KipProtocol.sol\":675:703  uint256 public lastConsumeID */\n      tag_33\n        /* \"#utility.yul\":1305:1482   */\n      jump\n        /* \"contracts/KipProtocol.sol\":624:653  uint256 public commissionRate */\n    tag_8:\n      tag_39\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_23\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_31)\n        /* \"contracts/KipProtocol.sol\":790:841  mapping(address => uint256) public consumer_balance */\n    tag_11:\n      tag_39\n      tag_52\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_52:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/KipProtocol.sol\":738:783  mapping(uint256 => address) public sft_assets */\n    tag_12:\n      tag_31\n      tag_56\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_56:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/KipProtocol.sol\":2375:3783  function consume(address _consumer, uint256 _amount, receipt[] memory _receipt) public {... */\n    tag_13:\n      tag_23\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/KipProtocol.sol\":847:895  mapping(address => bool) public service_provider */\n    tag_14:\n      tag_63\n      tag_64\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_64:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_63:\n      mload(0x40)\n        /* \"#utility.yul\":3718:3732   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3711:3733   */\n      iszero\n        /* \"#utility.yul\":3693:3734   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3681:3683   */\n      0x20\n        /* \"#utility.yul\":3666:3684   */\n      add\n        /* \"contracts/KipProtocol.sol\":847:895  mapping(address => bool) public service_provider */\n      tag_33\n        /* \"#utility.yul\":3553:3740   */\n      jump\n        /* \"contracts/KipProtocol.sol\":1753:2369  function createToken(address sft_address, uint256 slot_value, uint256 token_amount) public {... */\n    tag_15:\n      tag_23\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/KipProtocol.sol\":3789:3882  function _lastConsumeID() public view returns (uint256) {... */\n    tag_16:\n        /* \"contracts/KipProtocol.sol\":3862:3875  lastConsumeID */\n      sload(0x04)\n        /* \"contracts/KipProtocol.sol\":3789:3882  function _lastConsumeID() public view returns (uint256) {... */\n      jump(tag_39)\n        /* \"contracts/KipProtocol.sol\":3888:4158  function recharge(uint256 amount_) public {... */\n    tag_17:\n      tag_23\n      tag_76\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_23\n      tag_79\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"contracts/KipProtocol.sol\":709:731  uint256 public sftSlot */\n    tag_19:\n      tag_39\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/KipProtocol.sol\":4464:4653  function setServiceProvider(address _address, bool _enabled) public onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":4552:4578  service_provider[_address] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":4552:4568  service_provider */\n      0x08\n        /* \"contracts/KipProtocol.sol\":4552:4578  service_provider[_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/KipProtocol.sol\":4552:4589  service_provider[_address] = _enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/KipProtocol.sol\":4604:4646  ServiceProviderChanged(_address, _enabled) */\n      dup3\n      mload\n        /* \"#utility.yul\":4301:4352   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4368:4386   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":4361:4411   */\n      mstore\n        /* \"contracts/KipProtocol.sol\":4604:4646  ServiceProviderChanged(_address, _enabled) */\n      0x3178e1e682d183b22b2c0a13af9e136c3e9a37b76bd71d47bf24a80710441e8f\n      swap2\n        /* \"#utility.yul\":4274:4292   */\n      add\n        /* \"contracts/KipProtocol.sol\":4604:4646  ServiceProviderChanged(_address, _enabled) */\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipProtocol.sol\":4464:4653  function setServiceProvider(address _address, bool _enabled) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipProtocol.sol\":4164:4314  function setCommissionRate(uint256 _newrate) public onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/KipProtocol.sol\":4236:4250  commissionRate */\n      0x03\n        /* \"contracts/KipProtocol.sol\":4236:4261  commissionRate = _newrate */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/KipProtocol.sol\":4276:4307  CommissionRateChanged(_newrate) */\n      mload(0x40)\n        /* \"#utility.yul\":1451:1476   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":4276:4307  CommissionRateChanged(_newrate) */\n      0x7944cc49dc8637e3cacb75b6261e778f93a87026e0357ae7c3b0e434324afa35\n      swap1\n        /* \"#utility.yul\":1439:1441   */\n      0x20\n        /* \"#utility.yul\":1424:1442   */\n      add\n        /* \"contracts/KipProtocol.sol\":4276:4307  CommissionRateChanged(_newrate) */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipProtocol.sol\":4164:4314  function setCommissionRate(uint256 _newrate) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipProtocol.sol\":4320:4458  function setPriceToken(address newtoken) public onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/KipProtocol.sol\":4388:4398  priceToken */\n      0x02\n        /* \"contracts/KipProtocol.sol\":4388:4409  priceToken = newtoken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/KipProtocol.sol\":4424:4451  PriceTokenChanged(newtoken) */\n      mload(0x40)\n        /* \"#utility.yul\":991:1042   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":4424:4451  PriceTokenChanged(newtoken) */\n      0x9b44827111b30d796166e9f9515e9d6ee25234c008ed7157ec1128263e888728\n      swap1\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"contracts/KipProtocol.sol\":4424:4451  PriceTokenChanged(newtoken) */\n      tag_93\n        /* \"#utility.yul\":845:1048   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/KipProtocol.sol\":2375:3783  function consume(address _consumer, uint256 _amount, receipt[] memory _receipt) public {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/KipProtocol.sol\":2480:2510  service_provider[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":2480:2496  service_provider */\n      0x08\n        /* \"contracts/KipProtocol.sol\":2480:2510  service_provider[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/KipProtocol.sol\":2472:2529  require(service_provider[_msgSender()], \"Not a provider\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4624:4626   */\n      0x20\n        /* \"contracts/KipProtocol.sol\":2472:2529  require(service_provider[_msgSender()], \"Not a provider\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4606:4627   */\n      mstore\n        /* \"#utility.yul\":4663:4665   */\n      0x0e\n        /* \"#utility.yul\":4643:4661   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4636:4666   */\n      mstore\n      shl(0x91, 0x2737ba103090383937bb34b232b9)\n        /* \"#utility.yul\":4682:4700   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4675:4719   */\n      mstore\n        /* \"#utility.yul\":4736:4754   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":2472:2529  require(service_provider[_msgSender()], \"Not a provider\") */\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2556:2583  consumer_balance[_consumer] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":2556:2572  consumer_balance */\n      0x07\n        /* \"contracts/KipProtocol.sol\":2556:2583  consumer_balance[_consumer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/KipProtocol.sol\":2547:2583  _amount<=consumer_balance[_consumer] */\n      dup3\n      gt\n      iszero\n        /* \"contracts/KipProtocol.sol\":2539:2606  require(_amount<=consumer_balance[_consumer], \"Not a enough money\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4967:4969   */\n      0x20\n        /* \"contracts/KipProtocol.sol\":2539:2606  require(_amount<=consumer_balance[_consumer], \"Not a enough money\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4949:4970   */\n      mstore\n        /* \"#utility.yul\":5006:5008   */\n      0x12\n        /* \"#utility.yul\":4986:5004   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4979:5009   */\n      mstore\n      shl(0x70, 0x4e6f74206120656e6f756768206d6f6e6579)\n        /* \"#utility.yul\":5025:5043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5018:5066   */\n      mstore\n        /* \"#utility.yul\":5083:5101   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":2539:2606  require(_amount<=consumer_balance[_consumer], \"Not a enough money\") */\n      tag_108\n        /* \"#utility.yul\":4765:5107   */\n      jump\n        /* \"contracts/KipProtocol.sol\":2539:2606  require(_amount<=consumer_balance[_consumer], \"Not a enough money\") */\n    tag_110:\n        /* \"contracts/KipProtocol.sol\":2622:2631  uint256 i */\n      0x00\n        /* \"contracts/KipProtocol.sol\":2617:3690  for (uint256 i = 0; i < _receipt.length; i++) {... */\n    tag_113:\n        /* \"contracts/KipProtocol.sol\":2641:2649  _receipt */\n      dup2\n        /* \"contracts/KipProtocol.sol\":2641:2656  _receipt.length */\n      mload\n        /* \"contracts/KipProtocol.sol\":2637:2638  i */\n      dup2\n        /* \"contracts/KipProtocol.sol\":2637:2656  i < _receipt.length */\n      lt\n        /* \"contracts/KipProtocol.sol\":2617:3690  for (uint256 i = 0; i < _receipt.length; i++) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"contracts/KipProtocol.sol\":2678:2698  address _sft_address */\n      0x00\n        /* \"contracts/KipProtocol.sol\":2701:2711  sft_assets */\n      0x06\n        /* \"contracts/KipProtocol.sol\":2701:2737  sft_assets[_receipt[i].reference_id] */\n      0x00\n        /* \"contracts/KipProtocol.sol\":2712:2720  _receipt */\n      dup5\n        /* \"contracts/KipProtocol.sol\":2721:2722  i */\n      dup5\n        /* \"contracts/KipProtocol.sol\":2712:2723  _receipt[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/KipProtocol.sol\":2712:2736  _receipt[i].reference_id */\n      0x00\n      add\n      mload\n        /* \"contracts/KipProtocol.sol\":2701:2737  sft_assets[_receipt[i].reference_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/KipProtocol.sol\":2678:2737  address _sft_address = sft_assets[_receipt[i].reference_id] */\n      swap1\n      pop\n        /* \"contracts/KipProtocol.sol\":2751:2776  uint256 _profit_per_share */\n      0x00\n        /* \"contracts/KipProtocol.sol\":2779:2787  _receipt */\n      dup4\n        /* \"contracts/KipProtocol.sol\":2788:2789  i */\n      dup4\n        /* \"contracts/KipProtocol.sol\":2779:2790  _receipt[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_120\n      tag_118\n      jump\t// in\n    tag_120:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/KipProtocol.sol\":2779:2807  _receipt[i].profit_per_share */\n      0x20\n      add\n      mload\n        /* \"contracts/KipProtocol.sol\":2751:2807  uint256 _profit_per_share = _receipt[i].profit_per_share */\n      swap1\n      pop\n        /* \"contracts/KipProtocol.sol\":2854:2855  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2830:2856  _sft_address != address(0) */\n      and\n        /* \"contracts/KipProtocol.sol\":2830:2842  _sft_address */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2830:2856  _sft_address != address(0) */\n      and\n      sub\n        /* \"contracts/KipProtocol.sol\":2822:2887  require(_sft_address != address(0), \"ReferenceID does not exist\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5446:5448   */\n      0x20\n        /* \"contracts/KipProtocol.sol\":2822:2887  require(_sft_address != address(0), \"ReferenceID does not exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5428:5449   */\n      mstore\n        /* \"#utility.yul\":5485:5487   */\n      0x1a\n        /* \"#utility.yul\":5465:5483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5458:5488   */\n      mstore\n        /* \"#utility.yul\":5524:5552   */\n      0x5265666572656e6365494420646f6573206e6f74206578697374000000000000\n        /* \"#utility.yul\":5504:5522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5497:5553   */\n      mstore\n        /* \"#utility.yul\":5570:5588   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":2822:2887  require(_sft_address != address(0), \"ReferenceID does not exist\") */\n      tag_108\n        /* \"#utility.yul\":5244:5594   */\n      jump\n        /* \"contracts/KipProtocol.sol\":2822:2887  require(_sft_address != address(0), \"ReferenceID does not exist\") */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":3003:3033  sft_token_profit[_sft_address] */\n      dup3\n      and\n        /* \"contracts/KipProtocol.sol\":2902:2916  ISFT sft_entry */\n      0x00\n        /* \"contracts/KipProtocol.sol\":3003:3033  sft_token_profit[_sft_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":3003:3019  sft_token_profit */\n      0x09\n        /* \"contracts/KipProtocol.sol\":3003:3033  sft_token_profit[_sft_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/KipProtocol.sol\":2924:2936  _sft_address */\n      dup4\n      swap2\n        /* \"contracts/KipProtocol.sol\":3048:3667  for (uint256 j = 0; j < sft_entry.tokenSupplyInSlot(sftSlot); j++) {... */\n    tag_124:\n        /* \"contracts/KipProtocol.sol\":3100:3107  sftSlot */\n      sload(0x05)\n        /* \"contracts/KipProtocol.sol\":3072:3108  sft_entry.tokenSupplyInSlot(sftSlot) */\n      mload(0x40)\n      shl(0xe0, 0x4f8a0f83)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1451:1476   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":3072:3099  sft_entry.tokenSupplyInSlot */\n      dup5\n      and\n      swap1\n      0x4f8a0f83\n      swap1\n        /* \"#utility.yul\":1424:1442   */\n      0x24\n      add\n        /* \"contracts/KipProtocol.sol\":3072:3108  sft_entry.tokenSupplyInSlot(sftSlot) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/KipProtocol.sol\":3068:3069  j */\n      dup2\n        /* \"contracts/KipProtocol.sol\":3068:3108  j < sft_entry.tokenSupplyInSlot(sftSlot) */\n      lt\n        /* \"contracts/KipProtocol.sol\":3048:3667  for (uint256 j = 0; j < sft_entry.tokenSupplyInSlot(sftSlot); j++) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/KipProtocol.sol\":3186:3193  sftSlot */\n      sload(0x05)\n        /* \"contracts/KipProtocol.sol\":3157:3196  sft_entry.tokenInSlotByIndex(sftSlot,j) */\n      mload(0x40)\n      shl(0xe4, 0x0cd011)\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":3133:3154  uint256 _sft_token_id */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":3157:3185  sft_entry.tokenInSlotByIndex */\n      dup7\n      and\n      swap2\n      0xcd0110\n      swap2\n        /* \"contracts/KipProtocol.sol\":3157:3196  sft_entry.tokenInSlotByIndex(sftSlot,j) */\n      tag_132\n      swap2\n        /* \"contracts/KipProtocol.sol\":3194:3195  j */\n      dup7\n      swap1\n        /* \"contracts/KipProtocol.sol\":3157:3196  sft_entry.tokenInSlotByIndex(sftSlot,j) */\n      0x04\n      add\n        /* \"#utility.yul\":5962:5987   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":6018:6020   */\n      0x20\n        /* \"#utility.yul\":6003:6021   */\n      dup3\n      add\n        /* \"#utility.yul\":5996:6030   */\n      mstore\n        /* \"#utility.yul\":5950:5952   */\n      0x40\n        /* \"#utility.yul\":5935:5953   */\n      add\n      swap1\n        /* \"#utility.yul\":5788:6036   */\n      jump\n        /* \"contracts/KipProtocol.sol\":3157:3196  sft_entry.tokenInSlotByIndex(sftSlot,j) */\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_136:\n        /* \"contracts/KipProtocol.sol\":3236:3270  sft_entry.balanceOf(_sft_token_id) */\n      mload(0x40)\n      shl(0xe3, 0x1398fee1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1451:1476   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/KipProtocol.sol\":3133:3196  uint256 _sft_token_id = sft_entry.tokenInSlotByIndex(sftSlot,j) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/KipProtocol.sol\":3214:3233  uint256 _slot_value */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":3236:3255  sft_entry.balanceOf */\n      dup7\n      and\n      swap1\n      0x9cc7f708\n      swap1\n        /* \"#utility.yul\":1424:1442   */\n      0x24\n      add\n        /* \"contracts/KipProtocol.sol\":3236:3270  sft_entry.balanceOf(_sft_token_id) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_140:\n        /* \"contracts/KipProtocol.sol\":3214:3270  uint256 _slot_value = sft_entry.balanceOf(_sft_token_id) */\n      swap1\n      pop\n        /* \"contracts/KipProtocol.sol\":3289:3306  bool tokenIsExist */\n      0x00\n      dup1\n        /* \"contracts/KipProtocol.sol\":3331:3365  token_profit.tryGet(_sft_token_id) */\n      tag_141\n        /* \"contracts/KipProtocol.sol\":3331:3343  token_profit */\n      dup7\n        /* \"contracts/KipProtocol.sol\":3351:3364  _sft_token_id */\n      dup6\n        /* \"contracts/KipProtocol.sol\":3331:3350  token_profit.tryGet */\n      tag_142\n        /* \"contracts/KipProtocol.sol\":3331:3365  token_profit.tryGet(_sft_token_id) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/KipProtocol.sol\":3288:3365  (bool tokenIsExist, uint256 beforeValue) = token_profit.tryGet(_sft_token_id) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/KipProtocol.sol\":3383:3399  uint256 newValue */\n      0x00\n        /* \"contracts/KipProtocol.sol\":3402:3433  _slot_value * _profit_per_share */\n      tag_143\n        /* \"contracts/KipProtocol.sol\":3416:3433  _profit_per_share */\n      dup10\n        /* \"contracts/KipProtocol.sol\":3402:3413  _slot_value */\n      dup6\n        /* \"contracts/KipProtocol.sol\":3402:3433  _slot_value * _profit_per_share */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/KipProtocol.sol\":3383:3433  uint256 newValue = _slot_value * _profit_per_share */\n      swap1\n      pop\n        /* \"contracts/KipProtocol.sol\":3455:3467  tokenIsExist */\n      dup3\n        /* \"contracts/KipProtocol.sol\":3451:3653  if (tokenIsExist) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/KipProtocol.sol\":3491:3546  token_profit.set(_sft_token_id, beforeValue + newValue) */\n      tag_146\n        /* \"contracts/KipProtocol.sol\":3508:3521  _sft_token_id */\n      dup6\n        /* \"contracts/KipProtocol.sol\":3523:3545  beforeValue + newValue */\n      tag_147\n        /* \"contracts/KipProtocol.sol\":3537:3545  newValue */\n      dup4\n        /* \"contracts/KipProtocol.sol\":3523:3534  beforeValue */\n      dup6\n        /* \"contracts/KipProtocol.sol\":3523:3545  beforeValue + newValue */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"contracts/KipProtocol.sol\":3491:3503  token_profit */\n      dup10\n      swap2\n        /* \"contracts/KipProtocol.sol\":3491:3546  token_profit.set(_sft_token_id, beforeValue + newValue) */\n      swap1\n        /* \"contracts/KipProtocol.sol\":3491:3507  token_profit.set */\n      tag_149\n        /* \"contracts/KipProtocol.sol\":3491:3546  token_profit.set(_sft_token_id, beforeValue + newValue) */\n      jump\t// in\n    tag_146:\n      pop\n        /* \"contracts/KipProtocol.sol\":3451:3653  if (tokenIsExist) {... */\n      jump(tag_150)\n    tag_145:\n        /* \"contracts/KipProtocol.sol\":3593:3634  token_profit.set(_sft_token_id, newValue) */\n      tag_151\n        /* \"contracts/KipProtocol.sol\":3593:3605  token_profit */\n      dup8\n        /* \"contracts/KipProtocol.sol\":3610:3623  _sft_token_id */\n      dup7\n        /* \"contracts/KipProtocol.sol\":3625:3633  newValue */\n      dup4\n        /* \"contracts/KipProtocol.sol\":3593:3609  token_profit.set */\n      tag_149\n        /* \"contracts/KipProtocol.sol\":3593:3634  token_profit.set(_sft_token_id, newValue) */\n      jump\t// in\n    tag_151:\n      pop\n        /* \"contracts/KipProtocol.sol\":3451:3653  if (tokenIsExist) {... */\n    tag_150:\n      pop\n      pop\n        /* \"contracts/KipProtocol.sol\":3110:3113  j++ */\n      0x01\n      swap1\n      swap4\n      add\n      swap3\n      pop\n        /* \"contracts/KipProtocol.sol\":3048:3667  for (uint256 j = 0; j < sft_entry.tokenSupplyInSlot(sftSlot); j++) {... */\n      tag_124\n      swap2\n      pop\n      pop\n      jump\n    tag_125:\n      pop\n      pop\n        /* \"contracts/KipProtocol.sol\":2658:2661  i++ */\n      0x01\n      swap1\n      swap4\n      add\n      swap3\n      pop\n        /* \"contracts/KipProtocol.sol\":2617:3690  for (uint256 i = 0; i < _receipt.length; i++) {... */\n      tag_113\n      swap2\n      pop\n      pop\n      jump\n    tag_114:\n      pop\n        /* \"contracts/KipProtocol.sol\":3705:3750  ConsumeLog(lastConsumeID, _amount,  _receipt) */\n      0x74abd6f2bb39b1eb84983e4e8df1378da42d32f24a5c984b6d1456bfd24f8cb9\n        /* \"contracts/KipProtocol.sol\":3716:3729  lastConsumeID */\n      sload(0x04)\n        /* \"contracts/KipProtocol.sol\":3731:3738  _amount */\n      dup4\n        /* \"contracts/KipProtocol.sol\":3741:3749  _receipt */\n      dup4\n        /* \"contracts/KipProtocol.sol\":3705:3750  ConsumeLog(lastConsumeID, _amount,  _receipt) */\n      mload(0x40)\n      tag_152\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipProtocol.sol\":3761:3774  lastConsumeID */\n      0x04\n        /* \"contracts/KipProtocol.sol\":3761:3776  lastConsumeID++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/KipProtocol.sol\":3761:3774  lastConsumeID */\n      0x00\n        /* \"contracts/KipProtocol.sol\":3761:3776  lastConsumeID++ */\n      tag_154\n      dup4\n      tag_155\n      jump\t// in\n    tag_154:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipProtocol.sol\":2375:3783  function consume(address _consumer, uint256 _amount, receipt[] memory _receipt) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipProtocol.sol\":1753:2369  function createToken(address sft_address, uint256 slot_value, uint256 token_amount) public {... */\n    tag_71:\n        /* \"contracts/KipProtocol.sol\":1854:1868  ISFT sft_entry */\n      0x00\n        /* \"contracts/KipProtocol.sol\":1876:1887  sft_address */\n      dup4\n        /* \"contracts/KipProtocol.sol\":1854:1888  ISFT sft_entry = ISFT(sft_address) */\n      swap1\n      pop\n        /* \"contracts/KipProtocol.sol\":1935:1939  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":1906:1940  sft_entry.owner() == address(this) */\n      and\n        /* \"contracts/KipProtocol.sol\":1906:1915  sft_entry */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":1906:1921  sft_entry.owner */\n      and\n      0x8da5cb5b\n        /* \"contracts/KipProtocol.sol\":1906:1923  sft_entry.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":1906:1940  sft_entry.owner() == address(this) */\n      and\n      eq\n        /* \"contracts/KipProtocol.sol\":1898:1956  require(sft_entry.owner() == address(this), \"Not a owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8010:8012   */\n      0x20\n        /* \"contracts/KipProtocol.sol\":1898:1956  require(sft_entry.owner() == address(this), \"Not a owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7992:8013   */\n      mstore\n        /* \"#utility.yul\":8049:8051   */\n      0x0b\n        /* \"#utility.yul\":8029:8047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8022:8052   */\n      mstore\n      shl(0xa9, 0x2737ba10309037bbb732b9)\n        /* \"#utility.yul\":8068:8086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8061:8102   */\n      mstore\n        /* \"#utility.yul\":8119:8137   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":1898:1956  require(sft_entry.owner() == address(this), \"Not a owner\") */\n      tag_108\n        /* \"#utility.yul\":7808:8143   */\n      jump\n        /* \"contracts/KipProtocol.sol\":1898:1956  require(sft_entry.owner() == address(this), \"Not a owner\") */\n    tag_161:\n        /* \"contracts/KipProtocol.sol\":2030:2031  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":1974:2032  sft_assets[sft_entry._offchainReferenceID()] == address(0) */\n      and\n        /* \"contracts/KipProtocol.sol\":1974:1984  sft_assets */\n      0x06\n        /* \"contracts/KipProtocol.sol\":1974:2018  sft_assets[sft_entry._offchainReferenceID()] */\n      0x00\n        /* \"contracts/KipProtocol.sol\":1985:1994  sft_entry */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":1985:2015  sft_entry._offchainReferenceID */\n      and\n      0xdd3fc0ab\n        /* \"contracts/KipProtocol.sol\":1985:2017  sft_entry._offchainReferenceID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_166:\n        /* \"contracts/KipProtocol.sol\":1974:2018  sft_assets[sft_entry._offchainReferenceID()] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/KipProtocol.sol\":1974:2032  sft_assets[sft_entry._offchainReferenceID()] == address(0) */\n      eq\n        /* \"contracts/KipProtocol.sol\":1966:2052  require(sft_assets[sft_entry._offchainReferenceID()] == address(0), \"Already created\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8350:8352   */\n      0x20\n        /* \"contracts/KipProtocol.sol\":1966:2052  require(sft_assets[sft_entry._offchainReferenceID()] == address(0), \"Already created\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8332:8353   */\n      mstore\n        /* \"#utility.yul\":8389:8391   */\n      0x0f\n        /* \"#utility.yul\":8369:8387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8362:8392   */\n      mstore\n      shl(0x8a, 0x105b1c9958591e4818dc99585d1959)\n        /* \"#utility.yul\":8408:8426   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8401:8446   */\n      mstore\n        /* \"#utility.yul\":8463:8481   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":1966:2052  require(sft_assets[sft_entry._offchainReferenceID()] == address(0), \"Already created\") */\n      tag_108\n        /* \"#utility.yul\":8148:8487   */\n      jump\n        /* \"contracts/KipProtocol.sol\":1966:2052  require(sft_assets[sft_entry._offchainReferenceID()] == address(0), \"Already created\") */\n    tag_167:\n        /* \"contracts/KipProtocol.sol\":2080:2081  1 */\n      0x01\n        /* \"contracts/KipProtocol.sol\":2063:2194  for (uint256 i = 1; i <= token_amount; i++) {... */\n    tag_170:\n        /* \"contracts/KipProtocol.sol\":2088:2100  token_amount */\n      dup3\n        /* \"contracts/KipProtocol.sol\":2083:2084  i */\n      dup2\n        /* \"contracts/KipProtocol.sol\":2083:2100  i <= token_amount */\n      gt\n        /* \"contracts/KipProtocol.sol\":2063:2194  for (uint256 i = 1; i <= token_amount; i++) {... */\n      tag_171\n      jumpi\n        /* \"contracts/KipProtocol.sol\":2121:2130  sft_entry */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2121:2135  sft_entry.mint */\n      and\n      0x156e29f6\n        /* \"contracts/KipProtocol.sol\":2136:2145  sft_entry */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2136:2159  sft_entry._ownerAddress */\n      and\n      0xa786c18b\n        /* \"contracts/KipProtocol.sol\":2136:2161  sft_entry._ownerAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_175:\n        /* \"contracts/KipProtocol.sol\":2163:2170  sftSlot */\n      sload(0x05)\n        /* \"contracts/KipProtocol.sol\":2121:2183  sft_entry.mint(sft_entry._ownerAddress(), sftSlot, slot_value) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8712:8744   */\n      swap1\n      swap3\n      and\n        /* \"contracts/KipProtocol.sol\":2121:2183  sft_entry.mint(sft_entry._ownerAddress(), sftSlot, slot_value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8694:8745   */\n      mstore\n        /* \"#utility.yul\":8761:8779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8754:8788   */\n      mstore\n        /* \"#utility.yul\":8804:8822   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8797:8831   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":8667:8685   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":2121:2183  sft_entry.mint(sft_entry._ownerAddress(), sftSlot, slot_value) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/KipProtocol.sol\":2102:2105  i++ */\n      dup1\n      dup1\n      tag_181\n      swap1\n      tag_155\n      jump\t// in\n    tag_181:\n      swap2\n      pop\n      pop\n        /* \"contracts/KipProtocol.sol\":2063:2194  for (uint256 i = 1; i <= token_amount; i++) {... */\n      jump(tag_170)\n    tag_171:\n      pop\n        /* \"contracts/KipProtocol.sol\":2250:2261  sft_address */\n      dup4\n        /* \"contracts/KipProtocol.sol\":2203:2213  sft_assets */\n      0x06\n        /* \"contracts/KipProtocol.sol\":2203:2247  sft_assets[sft_entry._offchainReferenceID()] */\n      0x00\n        /* \"contracts/KipProtocol.sol\":2214:2223  sft_entry */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2214:2244  sft_entry._offchainReferenceID */\n      and\n      0xdd3fc0ab\n        /* \"contracts/KipProtocol.sol\":2214:2246  sft_entry._offchainReferenceID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_184:\n        /* \"contracts/KipProtocol.sol\":2203:2247  sft_assets[sft_entry._offchainReferenceID()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipProtocol.sol\":2203:2261  sft_assets[sft_entry._offchainReferenceID()] = sft_address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipProtocol.sol\":2277:2362  TokenCreated(sft_address, slot_value, token_amount, sft_entry._offchainReferenceID()) */\n      0x3deeffca3c86a528758b0ff95b46b531e03be332bf88cb7e2c7b0b8daa608c31\n        /* \"contracts/KipProtocol.sol\":2290:2301  sft_address */\n      dup5\n        /* \"contracts/KipProtocol.sol\":2303:2313  slot_value */\n      dup5\n        /* \"contracts/KipProtocol.sol\":2315:2327  token_amount */\n      dup5\n        /* \"contracts/KipProtocol.sol\":2329:2338  sft_entry */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KipProtocol.sol\":2329:2359  sft_entry._offchainReferenceID */\n      and\n      0xdd3fc0ab\n        /* \"contracts/KipProtocol.sol\":2329:2361  sft_entry._offchainReferenceID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_187:\n        /* \"contracts/KipProtocol.sol\":2277:2362  TokenCreated(sft_address, slot_value, token_amount, sft_entry._offchainReferenceID()) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9091:9123   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":9073:9124   */\n      dup6\n      mstore\n        /* \"#utility.yul\":9155:9157   */\n      0x20\n        /* \"#utility.yul\":9140:9158   */\n      dup6\n      add\n        /* \"#utility.yul\":9133:9167   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9183:9201   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":9176:9210   */\n      mstore\n        /* \"#utility.yul\":9241:9243   */\n      0x60\n        /* \"#utility.yul\":9226:9244   */\n      dup3\n      add\n        /* \"#utility.yul\":9219:9253   */\n      mstore\n        /* \"#utility.yul\":9060:9063   */\n      0x80\n        /* \"#utility.yul\":9045:9064   */\n      add\n        /* \"contracts/KipProtocol.sol\":2277:2362  TokenCreated(sft_address, slot_value, token_amount, sft_entry._offchainReferenceID()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipProtocol.sol\":1844:2369  {... */\n      pop\n        /* \"contracts/KipProtocol.sol\":1753:2369  function createToken(address sft_address, uint256 slot_value, uint256 token_amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipProtocol.sol\":3888:4158  function recharge(uint256 amount_) public {... */\n    tag_77:\n        /* \"contracts/KipProtocol.sol\":3962:3972  priceToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup1\n        /* \"contracts/KipProtocol.sol\":3983:4001  token.transferFrom */\n      0x23b872dd\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/KipProtocol.sol\":3983:4039  token.transferFrom(_msgSender(), address(this), amount_) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9522:9537   */\n      swap1\n      swap2\n      and\n        /* \"contracts/KipProtocol.sol\":3983:4039  token.transferFrom(_msgSender(), address(this), amount_) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9504:9538   */\n      mstore\n        /* \"contracts/KipProtocol.sol\":4024:4028  this */\n      address\n        /* \"#utility.yul\":9554:9572   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9547:9590   */\n      mstore\n        /* \"#utility.yul\":9606:9624   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9599:9633   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":9439:9457   */\n      0x64\n      add\n        /* \"contracts/KipProtocol.sol\":3983:4039  token.transferFrom(_msgSender(), address(this), amount_) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/KipProtocol.sol\":4049:4079  consumer_balance[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/KipProtocol.sol\":4049:4065  consumer_balance */\n      0x07\n        /* \"contracts/KipProtocol.sol\":4049:4079  consumer_balance[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/KipProtocol.sol\":4049:4090  consumer_balance[_msgSender()] += amount_ */\n      dup1\n      sload\n        /* \"contracts/KipProtocol.sol\":4083:4090  amount_ */\n      dup5\n      swap3\n        /* \"contracts/KipProtocol.sol\":4049:4079  consumer_balance[_msgSender()] */\n      swap1\n        /* \"contracts/KipProtocol.sol\":4049:4090  consumer_balance[_msgSender()] += amount_ */\n      tag_200\n      swap1\n        /* \"contracts/KipProtocol.sol\":4083:4090  amount_ */\n      dup5\n      swap1\n        /* \"contracts/KipProtocol.sol\":4049:4090  consumer_balance[_msgSender()] += amount_ */\n      tag_148\n      jump\t// in\n    tag_200:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/KipProtocol.sol\":4105:4151  ConsumerBalanceRecharged(_msgSender(),amount_) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"#utility.yul\":10068:10119   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10150:10152   */\n      0x20\n        /* \"#utility.yul\":10135:10153   */\n      dup2\n      add\n        /* \"#utility.yul\":10128:10162   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/KipProtocol.sol\":4105:4151  ConsumerBalanceRecharged(_msgSender(),amount_) */\n      0xb9a1bffb5ad7fcaeb79fe2262ee61bc2b44689df94bb558f7e70eac20cbd0a05\n      swap2\n        /* \"#utility.yul\":10041:10059   */\n      add\n        /* \"contracts/KipProtocol.sol\":4105:4151  ConsumerBalanceRecharged(_msgSender(),amount_) */\n      tag_88\n        /* \"#utility.yul\":9894:10168   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":991:1042   */\n      mstore\n        /* \"#utility.yul\":964:982   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_108\n        /* \"#utility.yul\":845:1048   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":991:1042   */\n      mstore\n        /* \"#utility.yul\":964:982   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_108\n        /* \"#utility.yul\":845:1048   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7566:7783  function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7645:7649  bool */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7702:7734  tryGet(map._inner, bytes32(key)) */\n      tag_219\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7709:7712  map */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7729:7732  key */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7702:7708  tryGet */\n      tag_220\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7702:7734  tryGet(map._inner, bytes32(key)) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7670:7734  (bool success, bytes32 value) = tryGet(map._inner, bytes32(key)) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":7566:7783  function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {... */\n    tag_218:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":5997:6158  function set(UintToUintMap storage map, uint256 key, uint256 value) internal returns (bool) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6083:6087  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6106:6151  set(map._inner, bytes32(key), bytes32(value)) */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6110:6113  map */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6130:6133  key */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6144:6149  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6106:6109  set */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6106:6151  set(map._inner, bytes32(key), bytes32(value)) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":6099:6151  return set(map._inner, bytes32(key), bytes32(value)) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":5997:6158  function set(UintToUintMap storage map, uint256 key, uint256 value) internal returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4275:4573  function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4360:4364  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4401:4417  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4401:4412  map._values */\n      0x02\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4401:4417  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4360:4364  bool */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4401:4417  map._values[key] */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4427:4567  if (value == bytes32(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4474:4492  contains(map, key) */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4483:4486  map */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4488:4491  key */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4474:4482  contains */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4474:4492  contains(map, key) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4466:4505  return (contains(map, key), bytes32(0)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4502:4503  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4466:4505  return (contains(map, key), bytes32(0)) */\n      tag_218\n      swap1\n      pop\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4427:4567  if (value == bytes32(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4544:4548  true */\n      0x01\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4550:4555  value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":4536:4556  return (true, value) */\n      jump(tag_218)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2652:2826  function set(Bytes32ToBytes32Map storage map, bytes32 key, bytes32 value) internal returns (bool) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2744:2748  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2760:2776  map._values[key] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2760:2771  map._values */\n      0x02\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2760:2776  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2760:2784  map._values[key] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2801:2819  map._keys.add(key) */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2760:2763  map */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2772:2775  key */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2801:2814  map._keys.add */\n      tag_231\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":2801:2819  map._keys.add(key) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3237:3377  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3324:3328  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3347:3370  map._keys.contains(key) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3347:3350  map */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3366:3369  key */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3347:3365  map._keys.contains */\n      tag_234\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3347:3370  map._keys.contains(key) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3340:3370  return map._keys.contains(key) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3237:3377  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {... */\n    tag_232:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5930:6053  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6000:6004  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6023:6046  _add(set._inner, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6028:6031  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6040:6045  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6023:6027  _add */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6023:6046  _add(set._inner, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6431:6569  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6511:6515  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6534:6562  _contains(set._inner, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_243\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      jump(tag_232)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      jump(tag_232)\n        /* \"#utility.yul\":14:145   */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:268   */\n    tag_248:\n        /* \"#utility.yul\":236:241   */\n      dup1\n        /* \"#utility.yul\":229:242   */\n      iszero\n        /* \"#utility.yul\":222:243   */\n      iszero\n        /* \"#utility.yul\":215:220   */\n      dup2\n        /* \"#utility.yul\":212:244   */\n      eq\n        /* \"#utility.yul\":202:262   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":258:259   */\n      0x00\n        /* \"#utility.yul\":255:256   */\n      dup1\n        /* \"#utility.yul\":248:260   */\n      revert\n        /* \"#utility.yul\":273:655   */\n    tag_25:\n        /* \"#utility.yul\":338:344   */\n      0x00\n        /* \"#utility.yul\":346:352   */\n      dup1\n        /* \"#utility.yul\":399:401   */\n      0x40\n        /* \"#utility.yul\":387:396   */\n      dup4\n        /* \"#utility.yul\":378:385   */\n      dup6\n        /* \"#utility.yul\":374:397   */\n      sub\n        /* \"#utility.yul\":370:402   */\n      slt\n        /* \"#utility.yul\":367:419   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":415:416   */\n      0x00\n        /* \"#utility.yul\":412:413   */\n      dup1\n        /* \"#utility.yul\":405:417   */\n      revert\n        /* \"#utility.yul\":367:419   */\n    tag_259:\n        /* \"#utility.yul\":454:463   */\n      dup3\n        /* \"#utility.yul\":441:464   */\n      calldataload\n        /* \"#utility.yul\":473:504   */\n      tag_260\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":473:504   */\n      tag_247\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":523:528   */\n      swap2\n      pop\n        /* \"#utility.yul\":580:582   */\n      0x20\n        /* \"#utility.yul\":565:583   */\n      dup4\n      add\n        /* \"#utility.yul\":552:584   */\n      calldataload\n        /* \"#utility.yul\":593:623   */\n      tag_261\n        /* \"#utility.yul\":552:584   */\n      dup2\n        /* \"#utility.yul\":593:623   */\n      tag_248\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":642:649   */\n      dup1\n        /* \"#utility.yul\":632:649   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":273:655   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":660:840   */\n    tag_29:\n        /* \"#utility.yul\":719:725   */\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":760:769   */\n      dup3\n        /* \"#utility.yul\":751:758   */\n      dup5\n        /* \"#utility.yul\":747:770   */\n      sub\n        /* \"#utility.yul\":743:775   */\n      slt\n        /* \"#utility.yul\":740:792   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":785:786   */\n      dup1\n        /* \"#utility.yul\":778:790   */\n      revert\n        /* \"#utility.yul\":740:792   */\n    tag_263:\n      pop\n        /* \"#utility.yul\":811:834   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":660:840   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1053:1300   */\n    tag_37:\n        /* \"#utility.yul\":1112:1118   */\n      0x00\n        /* \"#utility.yul\":1165:1167   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup3\n        /* \"#utility.yul\":1144:1151   */\n      dup5\n        /* \"#utility.yul\":1140:1163   */\n      sub\n        /* \"#utility.yul\":1136:1168   */\n      slt\n        /* \"#utility.yul\":1133:1185   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1181:1182   */\n      0x00\n        /* \"#utility.yul\":1178:1179   */\n      dup1\n        /* \"#utility.yul\":1171:1183   */\n      revert\n        /* \"#utility.yul\":1133:1185   */\n    tag_266:\n        /* \"#utility.yul\":1220:1229   */\n      dup2\n        /* \"#utility.yul\":1207:1230   */\n      calldataload\n        /* \"#utility.yul\":1239:1270   */\n      tag_267\n        /* \"#utility.yul\":1264:1269   */\n      dup2\n        /* \"#utility.yul\":1239:1270   */\n      tag_247\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1289:1294   */\n      swap4\n        /* \"#utility.yul\":1053:1300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1614   */\n    tag_249:\n        /* \"#utility.yul\":1548:1558   */\n      0x4e487b71\n        /* \"#utility.yul\":1543:1546   */\n      0xe0\n        /* \"#utility.yul\":1539:1559   */\n      shl\n        /* \"#utility.yul\":1536:1537   */\n      0x00\n        /* \"#utility.yul\":1529:1560   */\n      mstore\n        /* \"#utility.yul\":1579:1583   */\n      0x41\n        /* \"#utility.yul\":1576:1577   */\n      0x04\n        /* \"#utility.yul\":1569:1584   */\n      mstore\n        /* \"#utility.yul\":1603:1607   */\n      0x24\n        /* \"#utility.yul\":1600:1601   */\n      0x00\n        /* \"#utility.yul\":1593:1608   */\n      revert\n        /* \"#utility.yul\":1619:1870   */\n    tag_250:\n        /* \"#utility.yul\":1691:1693   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup1\n      mload\n      swap1\n        /* \"#utility.yul\":1721:1736   */\n      dup2\n      add\n        /* \"#utility.yul\":1766:1784   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1751:1785   */\n      dup2\n      gt\n        /* \"#utility.yul\":1787:1809   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1748:1810   */\n      or\n        /* \"#utility.yul\":1745:1833   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1813:1831   */\n      tag_272\n      tag_249\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1849:1851   */\n      0x40\n        /* \"#utility.yul\":1842:1864   */\n      mstore\n        /* \"#utility.yul\":1619:1870   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1875:2150   */\n    tag_251:\n        /* \"#utility.yul\":1946:1948   */\n      0x40\n        /* \"#utility.yul\":1940:1949   */\n      mload\n        /* \"#utility.yul\":2011:2013   */\n      0x1f\n        /* \"#utility.yul\":1992:2005   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2015   */\n      and\n        /* \"#utility.yul\":1976:2016   */\n      dup2\n      add\n        /* \"#utility.yul\":2046:2064   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2031:2065   */\n      dup2\n      gt\n        /* \"#utility.yul\":2067:2089   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2028:2090   */\n      or\n        /* \"#utility.yul\":2025:2113   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2093:2111   */\n      tag_275\n      tag_249\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2129:2131   */\n      0x40\n        /* \"#utility.yul\":2122:2144   */\n      mstore\n        /* \"#utility.yul\":1875:2150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2155:3548   */\n    tag_61:\n        /* \"#utility.yul\":2282:2288   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup1\n        /* \"#utility.yul\":2298:2304   */\n      0x00\n        /* \"#utility.yul\":2351:2353   */\n      0x60\n        /* \"#utility.yul\":2339:2348   */\n      dup5\n        /* \"#utility.yul\":2330:2337   */\n      dup7\n        /* \"#utility.yul\":2326:2349   */\n      sub\n        /* \"#utility.yul\":2322:2354   */\n      slt\n        /* \"#utility.yul\":2319:2371   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      dup1\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2319:2371   */\n    tag_277:\n        /* \"#utility.yul\":2406:2415   */\n      dup4\n        /* \"#utility.yul\":2393:2416   */\n      calldataload\n        /* \"#utility.yul\":2425:2456   */\n      tag_278\n        /* \"#utility.yul\":2450:2455   */\n      dup2\n        /* \"#utility.yul\":2425:2456   */\n      tag_247\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2475:2480   */\n      swap3\n      pop\n        /* \"#utility.yul\":2499:2501   */\n      0x20\n        /* \"#utility.yul\":2533:2551   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":2520:2552   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2571:2573   */\n      0x40\n        /* \"#utility.yul\":2609:2627   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":2596:2628   */\n      calldataload\n        /* \"#utility.yul\":2647:2665   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2677:2691   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2674:2708   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2704:2705   */\n      0x00\n        /* \"#utility.yul\":2701:2702   */\n      dup1\n        /* \"#utility.yul\":2694:2706   */\n      revert\n        /* \"#utility.yul\":2674:2708   */\n    tag_279:\n        /* \"#utility.yul\":2742:2748   */\n      dup2\n        /* \"#utility.yul\":2731:2740   */\n      dup9\n        /* \"#utility.yul\":2727:2749   */\n      add\n        /* \"#utility.yul\":2717:2749   */\n      swap2\n      pop\n        /* \"#utility.yul\":2787:2794   */\n      dup9\n        /* \"#utility.yul\":2780:2784   */\n      0x1f\n        /* \"#utility.yul\":2776:2778   */\n      dup4\n        /* \"#utility.yul\":2772:2785   */\n      add\n        /* \"#utility.yul\":2768:2795   */\n      slt\n        /* \"#utility.yul\":2758:2813   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2806:2807   */\n      dup1\n        /* \"#utility.yul\":2799:2811   */\n      revert\n        /* \"#utility.yul\":2758:2813   */\n    tag_280:\n        /* \"#utility.yul\":2845:2847   */\n      dup2\n        /* \"#utility.yul\":2832:2848   */\n      calldataload\n        /* \"#utility.yul\":2867:2869   */\n      dup2\n        /* \"#utility.yul\":2863:2865   */\n      dup2\n        /* \"#utility.yul\":2860:2870   */\n      gt\n        /* \"#utility.yul\":2857:2893   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2873:2891   */\n      tag_282\n      tag_249\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2913:2949   */\n      tag_283\n        /* \"#utility.yul\":2945:2947   */\n      dup6\n        /* \"#utility.yul\":2940:2942   */\n      dup3\n        /* \"#utility.yul\":2937:2938   */\n      0x05\n        /* \"#utility.yul\":2933:2943   */\n      shl\n        /* \"#utility.yul\":2929:2948   */\n      add\n        /* \"#utility.yul\":2913:2949   */\n      tag_251\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2983:2998   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":3014:3026   */\n      dup6\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":3065:3066   */\n      0x06\n        /* \"#utility.yul\":3061:3071   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":3053:3072   */\n      dup4\n      add\n        /* \"#utility.yul\":3049:3077   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3089:3108   */\n      dup11\n      dup3\n      gt\n        /* \"#utility.yul\":3086:3125   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3121:3122   */\n      0x00\n        /* \"#utility.yul\":3118:3119   */\n      dup1\n        /* \"#utility.yul\":3111:3123   */\n      revert\n        /* \"#utility.yul\":3086:3125   */\n    tag_284:\n        /* \"#utility.yul\":3145:3156   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":3165:3518   */\n    tag_285:\n        /* \"#utility.yul\":3181:3187   */\n      dup2\n        /* \"#utility.yul\":3176:3179   */\n      dup5\n        /* \"#utility.yul\":3173:3188   */\n      lt\n        /* \"#utility.yul\":3165:3518   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":3261:3263   */\n      dup5\n        /* \"#utility.yul\":3255:3258   */\n      dup5\n        /* \"#utility.yul\":3246:3253   */\n      dup13\n        /* \"#utility.yul\":3242:3259   */\n      sub\n        /* \"#utility.yul\":3238:3264   */\n      slt\n        /* \"#utility.yul\":3235:3281   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3277:3278   */\n      0x00\n        /* \"#utility.yul\":3274:3275   */\n      dup1\n        /* \"#utility.yul\":3267:3279   */\n      revert\n        /* \"#utility.yul\":3235:3281   */\n    tag_288:\n        /* \"#utility.yul\":3309:3331   */\n      tag_289\n      tag_250\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3360:3377   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":3344:3378   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3429:3441   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":3416:3442   */\n      calldataload\n        /* \"#utility.yul\":3398:3414   */\n      dup8\n      dup3\n      add\n        /* \"#utility.yul\":3391:3443   */\n      mstore\n        /* \"#utility.yul\":3456:3476   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3198:3210   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3496:3508   */\n      swap2\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":3165:3518   */\n      jump(tag_285)\n    tag_287:\n        /* \"#utility.yul\":3537:3542   */\n      dup1\n        /* \"#utility.yul\":3527:3542   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2155:3548   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3745:4128   */\n    tag_70:\n        /* \"#utility.yul\":3822:3828   */\n      0x00\n        /* \"#utility.yul\":3830:3836   */\n      dup1\n        /* \"#utility.yul\":3838:3844   */\n      0x00\n        /* \"#utility.yul\":3891:3893   */\n      0x60\n        /* \"#utility.yul\":3879:3888   */\n      dup5\n        /* \"#utility.yul\":3870:3877   */\n      dup7\n        /* \"#utility.yul\":3866:3889   */\n      sub\n        /* \"#utility.yul\":3862:3894   */\n      slt\n        /* \"#utility.yul\":3859:3911   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3907:3908   */\n      0x00\n        /* \"#utility.yul\":3904:3905   */\n      dup1\n        /* \"#utility.yul\":3897:3909   */\n      revert\n        /* \"#utility.yul\":3859:3911   */\n    tag_292:\n        /* \"#utility.yul\":3946:3955   */\n      dup4\n        /* \"#utility.yul\":3933:3956   */\n      calldataload\n        /* \"#utility.yul\":3965:3996   */\n      tag_293\n        /* \"#utility.yul\":3990:3995   */\n      dup2\n        /* \"#utility.yul\":3965:3996   */\n      tag_247\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4015:4020   */\n      swap6\n        /* \"#utility.yul\":4067:4069   */\n      0x20\n        /* \"#utility.yul\":4052:4070   */\n      dup6\n      add\n        /* \"#utility.yul\":4039:4071   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":4118:4120   */\n      0x40\n        /* \"#utility.yul\":4103:4121   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":4090:4122   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3745:4128   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5112:5239   */\n    tag_118:\n        /* \"#utility.yul\":5173:5183   */\n      0x4e487b71\n        /* \"#utility.yul\":5168:5171   */\n      0xe0\n        /* \"#utility.yul\":5164:5184   */\n      shl\n        /* \"#utility.yul\":5161:5162   */\n      0x00\n        /* \"#utility.yul\":5154:5185   */\n      mstore\n        /* \"#utility.yul\":5204:5208   */\n      0x32\n        /* \"#utility.yul\":5201:5202   */\n      0x04\n        /* \"#utility.yul\":5194:5209   */\n      mstore\n        /* \"#utility.yul\":5228:5232   */\n      0x24\n        /* \"#utility.yul\":5225:5226   */\n      0x00\n        /* \"#utility.yul\":5218:5233   */\n      revert\n        /* \"#utility.yul\":5599:5783   */\n    tag_131:\n        /* \"#utility.yul\":5669:5675   */\n      0x00\n        /* \"#utility.yul\":5722:5724   */\n      0x20\n        /* \"#utility.yul\":5710:5719   */\n      dup3\n        /* \"#utility.yul\":5701:5708   */\n      dup5\n        /* \"#utility.yul\":5697:5720   */\n      sub\n        /* \"#utility.yul\":5693:5725   */\n      slt\n        /* \"#utility.yul\":5690:5742   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5738:5739   */\n      0x00\n        /* \"#utility.yul\":5735:5736   */\n      dup1\n        /* \"#utility.yul\":5728:5740   */\n      revert\n        /* \"#utility.yul\":5690:5742   */\n    tag_300:\n      pop\n        /* \"#utility.yul\":5761:5777   */\n      mload\n      swap2\n        /* \"#utility.yul\":5599:5783   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6041:6168   */\n    tag_252:\n        /* \"#utility.yul\":6102:6112   */\n      0x4e487b71\n        /* \"#utility.yul\":6097:6100   */\n      0xe0\n        /* \"#utility.yul\":6093:6113   */\n      shl\n        /* \"#utility.yul\":6090:6091   */\n      0x00\n        /* \"#utility.yul\":6083:6114   */\n      mstore\n        /* \"#utility.yul\":6133:6137   */\n      0x11\n        /* \"#utility.yul\":6130:6131   */\n      0x04\n        /* \"#utility.yul\":6123:6138   */\n      mstore\n        /* \"#utility.yul\":6157:6161   */\n      0x24\n        /* \"#utility.yul\":6154:6155   */\n      0x00\n        /* \"#utility.yul\":6147:6162   */\n      revert\n        /* \"#utility.yul\":6173:6341   */\n    tag_144:\n        /* \"#utility.yul\":6246:6255   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6277:6286   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6294:6309   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6288:6310   */\n      dup5\n      eq\n        /* \"#utility.yul\":6274:6311   */\n      or\n        /* \"#utility.yul\":6264:6335   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6315:6333   */\n      tag_232\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":6346:6471   */\n    tag_148:\n        /* \"#utility.yul\":6411:6420   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6432:6442   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6429:6465   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6445:6463   */\n      tag_232\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":6476:7407   */\n    tag_153:\n        /* \"#utility.yul\":6724:6728   */\n      0x00\n        /* \"#utility.yul\":6772:6774   */\n      0x60\n        /* \"#utility.yul\":6761:6770   */\n      dup3\n        /* \"#utility.yul\":6757:6775   */\n      add\n        /* \"#utility.yul\":6802:6808   */\n      dup6\n        /* \"#utility.yul\":6791:6800   */\n      dup4\n        /* \"#utility.yul\":6784:6809   */\n      mstore\n        /* \"#utility.yul\":6828:6830   */\n      0x20\n        /* \"#utility.yul\":6866:6872   */\n      dup6\n        /* \"#utility.yul\":6861:6863   */\n      0x20\n        /* \"#utility.yul\":6850:6859   */\n      dup6\n        /* \"#utility.yul\":6846:6864   */\n      add\n        /* \"#utility.yul\":6839:6873   */\n      mstore\n        /* \"#utility.yul\":6892:6894   */\n      0x40\n        /* \"#utility.yul\":6930:6932   */\n      0x60\n        /* \"#utility.yul\":6925:6927   */\n      0x40\n        /* \"#utility.yul\":6914:6923   */\n      dup7\n        /* \"#utility.yul\":6910:6928   */\n      add\n        /* \"#utility.yul\":6903:6933   */\n      mstore\n        /* \"#utility.yul\":6953:6959   */\n      dup3\n        /* \"#utility.yul\":6988:6994   */\n      dup7\n        /* \"#utility.yul\":6982:6995   */\n      mload\n        /* \"#utility.yul\":7019:7025   */\n      dup1\n        /* \"#utility.yul\":7011:7017   */\n      dup6\n        /* \"#utility.yul\":7004:7026   */\n      mstore\n        /* \"#utility.yul\":7057:7060   */\n      0x80\n        /* \"#utility.yul\":7046:7055   */\n      dup8\n        /* \"#utility.yul\":7042:7061   */\n      add\n        /* \"#utility.yul\":7035:7061   */\n      swap2\n      pop\n        /* \"#utility.yul\":7096:7098   */\n      0x20\n        /* \"#utility.yul\":7088:7094   */\n      dup9\n        /* \"#utility.yul\":7084:7099   */\n      add\n        /* \"#utility.yul\":7070:7099   */\n      swap5\n      pop\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7127:7381   */\n    tag_310:\n        /* \"#utility.yul\":7141:7147   */\n      dup2\n        /* \"#utility.yul\":7138:7139   */\n      dup2\n        /* \"#utility.yul\":7135:7148   */\n      lt\n        /* \"#utility.yul\":7127:7381   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":7200:7213   */\n      dup6\n      mload\n        /* \"#utility.yul\":7238:7247   */\n      dup1\n      mload\n        /* \"#utility.yul\":7226:7248   */\n      dup5\n      mstore\n        /* \"#utility.yul\":7288:7299   */\n      dup6\n      add\n        /* \"#utility.yul\":7282:7300   */\n      mload\n        /* \"#utility.yul\":7268:7280   */\n      dup6\n      dup5\n      add\n        /* \"#utility.yul\":7261:7301   */\n      mstore\n        /* \"#utility.yul\":7356:7371   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":7321:7333   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":7163:7164   */\n      0x01\n        /* \"#utility.yul\":7156:7165   */\n      add\n        /* \"#utility.yul\":7127:7381   */\n      jump(tag_310)\n    tag_312:\n      pop\n        /* \"#utility.yul\":7398:7401   */\n      swap1\n      swap10\n        /* \"#utility.yul\":6476:7407   */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7412:7547   */\n    tag_155:\n        /* \"#utility.yul\":7451:7454   */\n      0x00\n        /* \"#utility.yul\":7472:7489   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7469:7512   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":7492:7510   */\n      tag_315\n      tag_252\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":7539:7540   */\n      0x01\n        /* \"#utility.yul\":7528:7541   */\n      add\n      swap1\n        /* \"#utility.yul\":7412:7547   */\n      jump\t// out\n        /* \"#utility.yul\":7552:7803   */\n    tag_160:\n        /* \"#utility.yul\":7622:7628   */\n      0x00\n        /* \"#utility.yul\":7675:7677   */\n      0x20\n        /* \"#utility.yul\":7663:7672   */\n      dup3\n        /* \"#utility.yul\":7654:7661   */\n      dup5\n        /* \"#utility.yul\":7650:7673   */\n      sub\n        /* \"#utility.yul\":7646:7678   */\n      slt\n        /* \"#utility.yul\":7643:7695   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7691:7692   */\n      0x00\n        /* \"#utility.yul\":7688:7689   */\n      dup1\n        /* \"#utility.yul\":7681:7693   */\n      revert\n        /* \"#utility.yul\":7643:7695   */\n    tag_317:\n        /* \"#utility.yul\":7723:7732   */\n      dup2\n        /* \"#utility.yul\":7717:7733   */\n      mload\n        /* \"#utility.yul\":7742:7773   */\n      tag_267\n        /* \"#utility.yul\":7767:7772   */\n      dup2\n        /* \"#utility.yul\":7742:7773   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":9644:9889   */\n    tag_198:\n        /* \"#utility.yul\":9711:9717   */\n      0x00\n        /* \"#utility.yul\":9764:9766   */\n      0x20\n        /* \"#utility.yul\":9752:9761   */\n      dup3\n        /* \"#utility.yul\":9743:9750   */\n      dup5\n        /* \"#utility.yul\":9739:9762   */\n      sub\n        /* \"#utility.yul\":9735:9767   */\n      slt\n        /* \"#utility.yul\":9732:9784   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":9780:9781   */\n      0x00\n        /* \"#utility.yul\":9777:9778   */\n      dup1\n        /* \"#utility.yul\":9770:9782   */\n      revert\n        /* \"#utility.yul\":9732:9784   */\n    tag_325:\n        /* \"#utility.yul\":9812:9821   */\n      dup2\n        /* \"#utility.yul\":9806:9822   */\n      mload\n        /* \"#utility.yul\":9831:9859   */\n      tag_267\n        /* \"#utility.yul\":9853:9858   */\n      dup2\n        /* \"#utility.yul\":9831:9859   */\n      tag_248\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220d4b0992495cc86711c6530a61f7f02af6eddb0c7769f384efc7fc3c2ba15778e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3976": {
									"entryPoint": null,
									"id": 3976,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 157,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:760:17",
										"nodeType": "YulBlock",
										"src": "0:760:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:17",
													"nodeType": "YulBlock",
													"src": "74:117:17",
													"statements": [
														{
															"nativeSrc": "84:22:17",
															"nodeType": "YulAssignment",
															"src": "84:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:17"
																},
																"nativeSrc": "93:13:17",
																"nodeType": "YulFunctionCall",
																"src": "93:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:17",
																"nodeType": "YulBlock",
																"src": "169:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:17",
																					"nodeType": "YulLiteral",
																					"src": "178:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:17",
																					"nodeType": "YulLiteral",
																					"src": "181:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:17"
																			},
																			"nativeSrc": "171:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:17"
																		},
																		"nativeSrc": "171:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:17",
																										"nodeType": "YulLiteral",
																										"src": "154:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:17",
																										"nodeType": "YulLiteral",
																										"src": "159:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:17"
																								},
																								"nativeSrc": "150:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:17",
																								"nodeType": "YulLiteral",
																								"src": "163:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:17"
																						},
																						"nativeSrc": "146:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:17"
																				},
																				"nativeSrc": "135:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:17"
																		},
																		"nativeSrc": "125:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:17"
																},
																"nativeSrc": "118:50:17",
																"nodeType": "YulFunctionCall",
																"src": "118:50:17"
															},
															"nativeSrc": "115:70:17",
															"nodeType": "YulIf",
															"src": "115:70:17"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:17",
														"nodeType": "YulTypedName",
														"src": "53:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:17",
														"nodeType": "YulTypedName",
														"src": "64:5:17",
														"type": ""
													}
												],
												"src": "14:177:17"
											},
											{
												"body": {
													"nativeSrc": "311:239:17",
													"nodeType": "YulBlock",
													"src": "311:239:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "357:16:17",
																"nodeType": "YulBlock",
																"src": "357:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "366:1:17",
																					"nodeType": "YulLiteral",
																					"src": "366:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "369:1:17",
																					"nodeType": "YulLiteral",
																					"src": "369:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "359:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:17"
																			},
																			"nativeSrc": "359:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:17"
																		},
																		"nativeSrc": "359:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "332:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "341:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "328:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:17"
																		},
																		"nativeSrc": "328:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:17",
																		"nodeType": "YulLiteral",
																		"src": "353:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "324:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:17"
																},
																"nativeSrc": "324:32:17",
																"nodeType": "YulFunctionCall",
																"src": "324:32:17"
															},
															"nativeSrc": "321:52:17",
															"nodeType": "YulIf",
															"src": "321:52:17"
														},
														{
															"nativeSrc": "382:50:17",
															"nodeType": "YulAssignment",
															"src": "382:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "392:29:17",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:17"
																},
																"nativeSrc": "392:40:17",
																"nodeType": "YulFunctionCall",
																"src": "392:40:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "382:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:17"
																}
															]
														},
														{
															"nativeSrc": "441:59:17",
															"nodeType": "YulAssignment",
															"src": "441:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "485:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "496:2:17",
																				"nodeType": "YulLiteral",
																				"src": "496:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "481:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:17"
																		},
																		"nativeSrc": "481:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "451:29:17",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:17"
																},
																"nativeSrc": "451:49:17",
																"nodeType": "YulFunctionCall",
																"src": "451:49:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "441:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:17"
																}
															]
														},
														{
															"nativeSrc": "509:35:17",
															"nodeType": "YulAssignment",
															"src": "509:35:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "529:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:17",
																				"nodeType": "YulLiteral",
																				"src": "540:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "525:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:17"
																		},
																		"nativeSrc": "525:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "519:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "519:5:17"
																},
																"nativeSrc": "519:25:17",
																"nodeType": "YulFunctionCall",
																"src": "519:25:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "509:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "196:354:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "261:9:17",
														"nodeType": "YulTypedName",
														"src": "261:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "272:7:17",
														"nodeType": "YulTypedName",
														"src": "272:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "284:6:17",
														"nodeType": "YulTypedName",
														"src": "284:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "292:6:17",
														"nodeType": "YulTypedName",
														"src": "292:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "300:6:17",
														"nodeType": "YulTypedName",
														"src": "300:6:17",
														"type": ""
													}
												],
												"src": "196:354:17"
											},
											{
												"body": {
													"nativeSrc": "656:102:17",
													"nodeType": "YulBlock",
													"src": "656:102:17",
													"statements": [
														{
															"nativeSrc": "666:26:17",
															"nodeType": "YulAssignment",
															"src": "666:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "678:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "678:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:2:17",
																		"nodeType": "YulLiteral",
																		"src": "689:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "674:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "674:3:17"
																},
																"nativeSrc": "674:18:17",
																"nodeType": "YulFunctionCall",
																"src": "674:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "666:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "666:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "708:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "708:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "723:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "723:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "739:3:17",
																								"nodeType": "YulLiteral",
																								"src": "739:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "744:1:17",
																								"nodeType": "YulLiteral",
																								"src": "744:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "735:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "735:3:17"
																						},
																						"nativeSrc": "735:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "735:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "748:1:17",
																						"nodeType": "YulLiteral",
																						"src": "748:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "731:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:17"
																				},
																				"nativeSrc": "731:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "731:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "719:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:17"
																		},
																		"nativeSrc": "719:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "719:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "701:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:17"
																},
																"nativeSrc": "701:51:17",
																"nodeType": "YulFunctionCall",
																"src": "701:51:17"
															},
															"nativeSrc": "701:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "701:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "555:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "625:9:17",
														"nodeType": "YulTypedName",
														"src": "625:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "636:6:17",
														"nodeType": "YulTypedName",
														"src": "636:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "647:4:17",
														"nodeType": "YulTypedName",
														"src": "647:4:17",
														"type": ""
													}
												],
												"src": "555:203:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1252 CODESIZE SUB DUP1 PUSH2 0x1252 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x107 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x9D JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x5 SSTORE POP PUSH2 0x140 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x122 DUP5 PUSH2 0xEC JUMP JUMPDEST SWAP3 POP PUSH2 0x130 PUSH1 0x20 DUP6 ADD PUSH2 0xEC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1105 DUP1 PUSH2 0x14D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA335A003 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDBDCEBDE GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDBDCEBDE EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xEC10342C EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xEF299B0B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xFB771CB5 EQ PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA335A003 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xB0E0A569 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xB85F4344 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xCAE5EC04 EQ PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48818BDE GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x48818BDE EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x5EA1D6F8 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17E4D1E EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x19FAC8FD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FF6FE76 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x411092E3 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x145 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x388 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x145 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH2 0x229 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x17E JUMP JUMPDEST PUSH2 0x11D PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x3178E1E682D183B22B2C0A13AF9E136C3E9A37B76BD71D47BF24A80710441E8F SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7944CC49DC8637E3CACB75B6261E778F93A87026E0357AE7C3B0E434324AFA35 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x33A PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x9B44827111B30D796166E9F9515E9D6EE25234C008ED7157EC1128263E888728 SWAP1 PUSH1 0x20 ADD PUSH2 0x327 JUMP JUMPDEST PUSH2 0x390 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x399 PUSH0 PUSH2 0xC4E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103090383937BB34B232B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F74206120656E6F756768206D6F6E6579 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6FB JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265666572656E6365494420646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F8A0F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F8A0F83 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH3 0xCD011 PUSH1 0xE4 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH3 0xCD0110 SWAP2 PUSH2 0x5DF SWAP2 DUP7 SWAP1 PUSH1 0x4 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1398FEE1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x9CC7F708 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68A SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x698 DUP7 DUP6 PUSH2 0xC9D JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH0 PUSH2 0x6A8 DUP10 DUP6 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6C6 DUP6 PUSH2 0x6BE DUP4 DUP6 PUSH2 0x100D JUMP JUMPDEST DUP10 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST POP PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x6D7 DUP8 DUP7 DUP4 PUSH2 0xCBA JUMP JUMPDEST POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x535 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x44D SWAP2 POP POP JUMP JUMPDEST POP PUSH32 0x74ABD6F2BB39B1EB84983E4E8DF1378DA42D32F24A5C984B6D1456BFD24F8CB9 PUSH1 0x4 SLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x731 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x748 DUP4 PUSH2 0x1081 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 SWAP1 POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2737BA10309037BBB732B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD3FC0AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DC99585D1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x9B8 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x156E29F6 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA786C18B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x9B0 SWAP1 PUSH2 0x1081 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CC JUMP JUMPDEST POP DUP4 PUSH1 0x6 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD3FC0AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH32 0x3DEEFFCA3C86A528758B0FF95B46B531E03BE332BF88CB7E2C7B0B8DAA608C31 DUP5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD3FC0AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x10B4 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBAA SWAP1 DUP5 SWAP1 PUSH2 0x100D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB9A1BFFB5AD7FCAEB79FE2262EE61BC2B44689DF94BB558F7E70EAC20CBD0A05 SWAP2 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xBED PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0xC1F DUP2 PUSH2 0xC4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP1 PUSH2 0xCAB DUP7 DUP7 PUSH2 0xCCE JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC6 DUP5 DUP5 DUP5 PUSH2 0xD06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0xCFB JUMPI PUSH2 0xCEF DUP6 DUP6 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP PUSH2 0xCB3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0xCB3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0xCC6 DUP5 DUP5 PUSH2 0xD36 JUMP JUMPDEST PUSH0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0xD58 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD2D JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD9D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xD30 JUMP JUMPDEST POP PUSH0 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC1F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDE1 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xDF1 DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE23 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE2E DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE6C JUMPI PUSH2 0xE6C PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xEC0 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 DUP2 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP1 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF0A PUSH2 0xE35 JUMP JUMPDEST PUSH2 0xF18 DUP6 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xE72 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 DUP2 ADD SWAP3 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP6 ADD SWAP1 DUP11 DUP3 GT ISZERO PUSH2 0xF37 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xF75 JUMPI DUP5 DUP5 DUP13 SUB SLT ISZERO PUSH2 0xF52 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF5A PUSH2 0xE49 JUMP JUMPDEST DUP5 CALLDATALOAD DUP2 MSTORE DUP7 DUP6 ADD CALLDATALOAD DUP8 DUP3 ADD MSTORE DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH2 0xF3C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xFA2 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0xFE2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0xFE2 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x60 PUSH1 0x40 DUP7 ADD MSTORE DUP3 DUP7 MLOAD DUP1 DUP6 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 POP PUSH1 0x20 DUP9 ADD SWAP5 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1072 JUMPI DUP6 MLOAD DUP1 MLOAD DUP5 MSTORE DUP6 ADD MLOAD DUP6 DUP5 ADD MSTORE SWAP5 DUP5 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x104D JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1092 JUMPI PUSH2 0x1092 PUSH2 0xFE2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE2E DUP2 PUSH2 0xDA4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE2E DUP2 PUSH2 0xDB8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xB0 SWAP10 0x24 SWAP6 0xCC DUP7 PUSH18 0x1C6530A61F7F02AF6EDDB0C7769F384EFC7F 0xC3 0xC2 0xBA ISZERO PUSH24 0x8E64736F6C63430008160033000000000000000000000000 ",
							"sourceMap": "368:4287:16:-:0;;;1514:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1602:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;701:51:17;674:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1713:1:3;1917:21;;;1626:10:16::1;:24:::0;;-1:-1:-1;;;;;;1626:24:16::1;-1:-1:-1::0;;;;;1626:24:16;;;::::1;::::0;;;::::1;::::0;;;1660:14:::1;:32:::0;1702:13:::1;:17:::0;;;1729:7:::1;:11:::0;-1:-1:-1;368:4287:16;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:17:-;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;555:203::-;368:4287:16;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_2918": {
									"entryPoint": 3416,
									"id": 2918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 3106,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contains_3021": {
									"entryPoint": null,
									"id": 3021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_lastConsumeID_4224": {
									"entryPoint": null,
									"id": 4224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_3088": {
									"entryPoint": 3382,
									"id": 3088,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@commissionRate_3881": {
									"entryPoint": null,
									"id": 3881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consume_4216": {
									"entryPoint": 923,
									"id": 4216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@consumer_balance_3893": {
									"entryPoint": null,
									"id": 3893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1842": {
									"entryPoint": 3362,
									"id": 1842,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_3124": {
									"entryPoint": 3393,
									"id": 3124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createToken_4058": {
									"entryPoint": 1874,
									"id": 4058,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@lastConsumeID_3883": {
									"entryPoint": null,
									"id": 3883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceToken_3879": {
									"entryPoint": null,
									"id": 3879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recharge_4262": {
									"entryPoint": 2820,
									"id": 4262,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 904,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@service_provider_3897": {
									"entryPoint": null,
									"id": 3897,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCommissionRate_4278": {
									"entryPoint": 750,
									"id": 4278,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPriceToken_4294": {
									"entryPoint": 818,
									"id": 4294,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setServiceProvider_4315": {
									"entryPoint": 643,
									"id": 4315,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@set_1800": {
									"entryPoint": 3334,
									"id": 1800,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@set_2013": {
									"entryPoint": 3258,
									"id": 2013,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sftSlot_3885": {
									"entryPoint": null,
									"id": 3885,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sft_assets_3889": {
									"entryPoint": null,
									"id": 3889,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3045,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryGet_1930": {
									"entryPoint": 3278,
									"id": 1930,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryGet_2138": {
									"entryPoint": 3229,
									"id": 2138,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_184bad15784cb910f263e8e4ee02d49989e8afe6a24679e01122776f1c3e056e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854b34d0acc5cb8b3bc007af37909df0d1553bdec3cfe89e014c60eb1a0d98c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d19debe52d26886adbe51c9a9f8f9d015ece4f00223c9099dd110a57b950ab37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f28f12a731de969b49519afdbb2a93e6efb5794c4edab1390cde2eb3409e2d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4f661964a11f432e6b46ac120b6a86a772a05a42a54d1c4deae09f5f0134910__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_uint256_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_1484": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10170:17",
										"nodeType": "YulBlock",
										"src": "0:10170:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:17",
													"nodeType": "YulBlock",
													"src": "59:86:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:17",
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:17",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:17",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nativeSrc": "125:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nativeSrc": "125:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:17",
																										"nodeType": "YulLiteral",
																										"src": "108:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:17",
																										"nodeType": "YulLiteral",
																										"src": "113:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:17"
																								},
																								"nativeSrc": "104:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:17",
																								"nodeType": "YulLiteral",
																								"src": "117:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:17"
																						},
																						"nativeSrc": "100:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:17"
																				},
																				"nativeSrc": "89:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:17"
																		},
																		"nativeSrc": "79:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:17"
																},
																"nativeSrc": "72:50:17",
																"nodeType": "YulFunctionCall",
																"src": "72:50:17"
															},
															"nativeSrc": "69:70:17",
															"nodeType": "YulIf",
															"src": "69:70:17"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:17",
														"nodeType": "YulTypedName",
														"src": "48:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nativeSrc": "192:76:17",
													"nodeType": "YulBlock",
													"src": "192:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "246:16:17",
																"nodeType": "YulBlock",
																"src": "246:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "255:1:17",
																					"nodeType": "YulLiteral",
																					"src": "255:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "258:1:17",
																					"nodeType": "YulLiteral",
																					"src": "258:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "248:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "248:6:17"
																			},
																			"nativeSrc": "248:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "248:12:17"
																		},
																		"nativeSrc": "248:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "248:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "215:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "215:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "236:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "236:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "229:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "229:6:17"
																						},
																						"nativeSrc": "229:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "229:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "222:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "222:6:17"
																				},
																				"nativeSrc": "222:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "222:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "212:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "212:2:17"
																		},
																		"nativeSrc": "212:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "212:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "205:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "205:6:17"
																},
																"nativeSrc": "205:40:17",
																"nodeType": "YulFunctionCall",
																"src": "205:40:17"
															},
															"nativeSrc": "202:60:17",
															"nodeType": "YulIf",
															"src": "202:60:17"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "150:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "181:5:17",
														"nodeType": "YulTypedName",
														"src": "181:5:17",
														"type": ""
													}
												],
												"src": "150:118:17"
											},
											{
												"body": {
													"nativeSrc": "357:298:17",
													"nodeType": "YulBlock",
													"src": "357:298:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "403:16:17",
																"nodeType": "YulBlock",
																"src": "403:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "412:1:17",
																					"nodeType": "YulLiteral",
																					"src": "412:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:1:17",
																					"nodeType": "YulLiteral",
																					"src": "415:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "405:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "405:6:17"
																			},
																			"nativeSrc": "405:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "405:12:17"
																		},
																		"nativeSrc": "405:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "405:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "378:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "378:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "387:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "387:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "374:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:17"
																		},
																		"nativeSrc": "374:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "374:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "399:2:17",
																		"nodeType": "YulLiteral",
																		"src": "399:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "370:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "370:3:17"
																},
																"nativeSrc": "370:32:17",
																"nodeType": "YulFunctionCall",
																"src": "370:32:17"
															},
															"nativeSrc": "367:52:17",
															"nodeType": "YulIf",
															"src": "367:52:17"
														},
														{
															"nativeSrc": "428:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "428:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "454:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "454:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "441:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "441:12:17"
																},
																"nativeSrc": "441:23:17",
																"nodeType": "YulFunctionCall",
																"src": "441:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "432:5:17",
																	"nodeType": "YulTypedName",
																	"src": "432:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "498:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "498:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "473:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "473:24:17"
																},
																"nativeSrc": "473:31:17",
																"nodeType": "YulFunctionCall",
																"src": "473:31:17"
															},
															"nativeSrc": "473:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "473:31:17"
														},
														{
															"nativeSrc": "513:15:17",
															"nodeType": "YulAssignment",
															"src": "513:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "523:5:17",
																"nodeType": "YulIdentifier",
																"src": "523:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "513:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "513:6:17"
																}
															]
														},
														{
															"nativeSrc": "537:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "537:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "569:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "569:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "580:2:17",
																				"nodeType": "YulLiteral",
																				"src": "580:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "565:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "565:3:17"
																		},
																		"nativeSrc": "565:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "565:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "552:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "552:12:17"
																},
																"nativeSrc": "552:32:17",
																"nodeType": "YulFunctionCall",
																"src": "552:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "541:7:17",
																	"nodeType": "YulTypedName",
																	"src": "541:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "615:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "615:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "593:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "593:21:17"
																},
																"nativeSrc": "593:30:17",
																"nodeType": "YulFunctionCall",
																"src": "593:30:17"
															},
															"nativeSrc": "593:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "593:30:17"
														},
														{
															"nativeSrc": "632:17:17",
															"nodeType": "YulAssignment",
															"src": "632:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "642:7:17",
																"nodeType": "YulIdentifier",
																"src": "642:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "632:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "273:382:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "315:9:17",
														"nodeType": "YulTypedName",
														"src": "315:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "326:7:17",
														"nodeType": "YulTypedName",
														"src": "326:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "338:6:17",
														"nodeType": "YulTypedName",
														"src": "338:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "346:6:17",
														"nodeType": "YulTypedName",
														"src": "346:6:17",
														"type": ""
													}
												],
												"src": "273:382:17"
											},
											{
												"body": {
													"nativeSrc": "730:110:17",
													"nodeType": "YulBlock",
													"src": "730:110:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "776:16:17",
																"nodeType": "YulBlock",
																"src": "776:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "785:1:17",
																					"nodeType": "YulLiteral",
																					"src": "785:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "788:1:17",
																					"nodeType": "YulLiteral",
																					"src": "788:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "778:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "778:6:17"
																			},
																			"nativeSrc": "778:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "778:12:17"
																		},
																		"nativeSrc": "778:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "778:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "751:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "751:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "760:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "760:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "747:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:17"
																		},
																		"nativeSrc": "747:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "747:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "772:2:17",
																		"nodeType": "YulLiteral",
																		"src": "772:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "743:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:17"
																},
																"nativeSrc": "743:32:17",
																"nodeType": "YulFunctionCall",
																"src": "743:32:17"
															},
															"nativeSrc": "740:52:17",
															"nodeType": "YulIf",
															"src": "740:52:17"
														},
														{
															"nativeSrc": "801:33:17",
															"nodeType": "YulAssignment",
															"src": "801:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "824:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "824:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "811:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "811:12:17"
																},
																"nativeSrc": "811:23:17",
																"nodeType": "YulFunctionCall",
																"src": "811:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "801:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "660:180:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "696:9:17",
														"nodeType": "YulTypedName",
														"src": "696:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "707:7:17",
														"nodeType": "YulTypedName",
														"src": "707:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "719:6:17",
														"nodeType": "YulTypedName",
														"src": "719:6:17",
														"type": ""
													}
												],
												"src": "660:180:17"
											},
											{
												"body": {
													"nativeSrc": "946:102:17",
													"nodeType": "YulBlock",
													"src": "946:102:17",
													"statements": [
														{
															"nativeSrc": "956:26:17",
															"nodeType": "YulAssignment",
															"src": "956:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "968:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "968:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "979:2:17",
																		"nodeType": "YulLiteral",
																		"src": "979:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "964:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:17"
																},
																"nativeSrc": "964:18:17",
																"nodeType": "YulFunctionCall",
																"src": "964:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "956:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "956:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "998:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "998:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1013:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1013:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1029:3:17",
																								"nodeType": "YulLiteral",
																								"src": "1029:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1034:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1034:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1025:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1025:3:17"
																						},
																						"nativeSrc": "1025:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1025:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1038:1:17",
																						"nodeType": "YulLiteral",
																						"src": "1038:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1021:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1021:3:17"
																				},
																				"nativeSrc": "1021:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1021:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1009:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:17"
																		},
																		"nativeSrc": "1009:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1009:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "991:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "991:6:17"
																},
																"nativeSrc": "991:51:17",
																"nodeType": "YulFunctionCall",
																"src": "991:51:17"
															},
															"nativeSrc": "991:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "991:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "845:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "915:9:17",
														"nodeType": "YulTypedName",
														"src": "915:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "926:6:17",
														"nodeType": "YulTypedName",
														"src": "926:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "937:4:17",
														"nodeType": "YulTypedName",
														"src": "937:4:17",
														"type": ""
													}
												],
												"src": "845:203:17"
											},
											{
												"body": {
													"nativeSrc": "1123:177:17",
													"nodeType": "YulBlock",
													"src": "1123:177:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1169:16:17",
																"nodeType": "YulBlock",
																"src": "1169:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1178:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1181:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1181:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1171:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1171:6:17"
																			},
																			"nativeSrc": "1171:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:12:17"
																		},
																		"nativeSrc": "1171:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1171:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1144:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1144:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1153:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1140:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:17"
																		},
																		"nativeSrc": "1140:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1140:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1165:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1165:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1136:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:17"
																},
																"nativeSrc": "1136:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1136:32:17"
															},
															"nativeSrc": "1133:52:17",
															"nodeType": "YulIf",
															"src": "1133:52:17"
														},
														{
															"nativeSrc": "1194:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1194:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1220:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1220:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1207:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1207:12:17"
																},
																"nativeSrc": "1207:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1207:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1198:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1264:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1264:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1239:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "1239:24:17"
																},
																"nativeSrc": "1239:31:17",
																"nodeType": "YulFunctionCall",
																"src": "1239:31:17"
															},
															"nativeSrc": "1239:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "1239:31:17"
														},
														{
															"nativeSrc": "1279:15:17",
															"nodeType": "YulAssignment",
															"src": "1279:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1289:5:17",
																"nodeType": "YulIdentifier",
																"src": "1289:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1279:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1279:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1053:247:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1089:9:17",
														"nodeType": "YulTypedName",
														"src": "1089:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1100:7:17",
														"nodeType": "YulTypedName",
														"src": "1100:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1112:6:17",
														"nodeType": "YulTypedName",
														"src": "1112:6:17",
														"type": ""
													}
												],
												"src": "1053:247:17"
											},
											{
												"body": {
													"nativeSrc": "1406:76:17",
													"nodeType": "YulBlock",
													"src": "1406:76:17",
													"statements": [
														{
															"nativeSrc": "1416:26:17",
															"nodeType": "YulAssignment",
															"src": "1416:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1428:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1428:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1439:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1439:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1424:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1424:3:17"
																},
																"nativeSrc": "1424:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1424:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1416:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1416:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1458:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1458:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1469:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1469:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1451:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:17"
																},
																"nativeSrc": "1451:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1451:25:17"
															},
															"nativeSrc": "1451:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1451:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1305:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1375:9:17",
														"nodeType": "YulTypedName",
														"src": "1375:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1386:6:17",
														"nodeType": "YulTypedName",
														"src": "1386:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1397:4:17",
														"nodeType": "YulTypedName",
														"src": "1397:4:17",
														"type": ""
													}
												],
												"src": "1305:177:17"
											},
											{
												"body": {
													"nativeSrc": "1519:95:17",
													"nodeType": "YulBlock",
													"src": "1519:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1543:3:17",
																				"nodeType": "YulLiteral",
																				"src": "1543:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1548:10:17",
																				"nodeType": "YulLiteral",
																				"src": "1548:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1539:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:17"
																		},
																		"nativeSrc": "1539:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1529:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:17"
																},
																"nativeSrc": "1529:31:17",
																"nodeType": "YulFunctionCall",
																"src": "1529:31:17"
															},
															"nativeSrc": "1529:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "1529:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1576:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1579:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1579:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1569:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:17"
																},
																"nativeSrc": "1569:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1569:15:17"
															},
															"nativeSrc": "1569:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "1569:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1600:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1603:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1603:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1593:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:17"
																},
																"nativeSrc": "1593:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1593:15:17"
															},
															"nativeSrc": "1593:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "1593:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1487:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "1487:127:17"
											},
											{
												"body": {
													"nativeSrc": "1665:205:17",
													"nodeType": "YulBlock",
													"src": "1665:205:17",
													"statements": [
														{
															"nativeSrc": "1675:19:17",
															"nodeType": "YulAssignment",
															"src": "1675:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1691:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1691:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1685:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1685:5:17"
																},
																"nativeSrc": "1685:9:17",
																"nodeType": "YulFunctionCall",
																"src": "1685:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1675:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:17"
																}
															]
														},
														{
															"nativeSrc": "1703:33:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1703:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1725:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1725:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1733:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1733:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1721:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:17"
																},
																"nativeSrc": "1721:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1721:15:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1707:10:17",
																	"nodeType": "YulTypedName",
																	"src": "1707:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1811:22:17",
																"nodeType": "YulBlock",
																"src": "1811:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1813:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1813:16:17"
																			},
																			"nativeSrc": "1813:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1813:18:17"
																		},
																		"nativeSrc": "1813:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1813:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1754:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "1754:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1766:18:17",
																				"nodeType": "YulLiteral",
																				"src": "1766:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1751:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1751:2:17"
																		},
																		"nativeSrc": "1751:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1751:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1790:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "1790:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1802:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1787:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1787:2:17"
																		},
																		"nativeSrc": "1787:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1748:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1748:2:17"
																},
																"nativeSrc": "1748:62:17",
																"nodeType": "YulFunctionCall",
																"src": "1748:62:17"
															},
															"nativeSrc": "1745:88:17",
															"nodeType": "YulIf",
															"src": "1745:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1849:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1853:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "1853:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:17"
																},
																"nativeSrc": "1842:22:17",
																"nodeType": "YulFunctionCall",
																"src": "1842:22:17"
															},
															"nativeSrc": "1842:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "1842:22:17"
														}
													]
												},
												"name": "allocate_memory_1484",
												"nativeSrc": "1619:251:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1654:6:17",
														"nodeType": "YulTypedName",
														"src": "1654:6:17",
														"type": ""
													}
												],
												"src": "1619:251:17"
											},
											{
												"body": {
													"nativeSrc": "1920:230:17",
													"nodeType": "YulBlock",
													"src": "1920:230:17",
													"statements": [
														{
															"nativeSrc": "1930:19:17",
															"nodeType": "YulAssignment",
															"src": "1930:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1940:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1940:5:17"
																},
																"nativeSrc": "1940:9:17",
																"nodeType": "YulFunctionCall",
																"src": "1940:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1930:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1930:6:17"
																}
															]
														},
														{
															"nativeSrc": "1958:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1958:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1980:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1980:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "1996:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "1996:4:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2002:2:17",
																						"nodeType": "YulLiteral",
																						"src": "2002:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1992:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1992:3:17"
																				},
																				"nativeSrc": "1992:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1992:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2011:2:17",
																						"nodeType": "YulLiteral",
																						"src": "2011:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2007:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2007:3:17"
																				},
																				"nativeSrc": "2007:7:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2007:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1988:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1988:3:17"
																		},
																		"nativeSrc": "1988:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1988:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1976:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1976:3:17"
																},
																"nativeSrc": "1976:40:17",
																"nodeType": "YulFunctionCall",
																"src": "1976:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1962:10:17",
																	"nodeType": "YulTypedName",
																	"src": "1962:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2091:22:17",
																"nodeType": "YulBlock",
																"src": "2091:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2093:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "2093:16:17"
																			},
																			"nativeSrc": "2093:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2093:18:17"
																		},
																		"nativeSrc": "2093:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2093:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2034:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "2034:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2046:18:17",
																				"nodeType": "YulLiteral",
																				"src": "2046:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2031:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2031:2:17"
																		},
																		"nativeSrc": "2031:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2070:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "2070:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2082:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2082:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2067:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2067:2:17"
																		},
																		"nativeSrc": "2067:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2067:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2028:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2028:2:17"
																},
																"nativeSrc": "2028:62:17",
																"nodeType": "YulFunctionCall",
																"src": "2028:62:17"
															},
															"nativeSrc": "2025:88:17",
															"nodeType": "YulIf",
															"src": "2025:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2133:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "2133:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2122:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:17"
																},
																"nativeSrc": "2122:22:17",
																"nodeType": "YulFunctionCall",
																"src": "2122:22:17"
															},
															"nativeSrc": "2122:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "2122:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1875:275:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1900:4:17",
														"nodeType": "YulTypedName",
														"src": "1900:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1909:6:17",
														"nodeType": "YulTypedName",
														"src": "1909:6:17",
														"type": ""
													}
												],
												"src": "1875:275:17"
											},
											{
												"body": {
													"nativeSrc": "2309:1239:17",
													"nodeType": "YulBlock",
													"src": "2309:1239:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2355:16:17",
																"nodeType": "YulBlock",
																"src": "2355:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2364:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2367:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2367:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2357:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:17"
																			},
																			"nativeSrc": "2357:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2357:12:17"
																		},
																		"nativeSrc": "2357:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2357:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2330:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2330:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2339:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2339:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2326:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:17"
																		},
																		"nativeSrc": "2326:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2351:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2351:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2322:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:17"
																},
																"nativeSrc": "2322:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2322:32:17"
															},
															"nativeSrc": "2319:52:17",
															"nodeType": "YulIf",
															"src": "2319:52:17"
														},
														{
															"nativeSrc": "2380:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2380:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2406:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2406:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2393:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2393:12:17"
																},
																"nativeSrc": "2393:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2393:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2384:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2384:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2450:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2450:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2425:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "2425:24:17"
																},
																"nativeSrc": "2425:31:17",
																"nodeType": "YulFunctionCall",
																"src": "2425:31:17"
															},
															"nativeSrc": "2425:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "2425:31:17"
														},
														{
															"nativeSrc": "2465:15:17",
															"nodeType": "YulAssignment",
															"src": "2465:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "2475:5:17",
																"nodeType": "YulIdentifier",
																"src": "2475:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2465:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:17"
																}
															]
														},
														{
															"nativeSrc": "2489:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2489:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2499:2:17",
																"nodeType": "YulLiteral",
																"src": "2499:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2493:2:17",
																	"nodeType": "YulTypedName",
																	"src": "2493:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2510:42:17",
															"nodeType": "YulAssignment",
															"src": "2510:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2537:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2537:9:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2548:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "2548:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2533:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2533:3:17"
																		},
																		"nativeSrc": "2533:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2533:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2520:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2520:12:17"
																},
																"nativeSrc": "2520:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2520:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2510:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2510:6:17"
																}
															]
														},
														{
															"nativeSrc": "2561:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2561:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2571:2:17",
																"nodeType": "YulLiteral",
																"src": "2571:2:17",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2565:2:17",
																	"nodeType": "YulTypedName",
																	"src": "2565:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2582:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2582:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2613:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2613:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2624:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2624:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2609:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:17"
																		},
																		"nativeSrc": "2609:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2609:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2596:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2596:12:17"
																},
																"nativeSrc": "2596:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2596:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2586:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2586:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2637:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2637:28:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2647:18:17",
																"nodeType": "YulLiteral",
																"src": "2647:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2641:2:17",
																	"nodeType": "YulTypedName",
																	"src": "2641:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2692:16:17",
																"nodeType": "YulBlock",
																"src": "2692:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2701:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2704:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2694:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:17"
																			},
																			"nativeSrc": "2694:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2694:12:17"
																		},
																		"nativeSrc": "2694:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2694:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2680:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2680:6:17"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "2688:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "2688:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2677:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2677:2:17"
																},
																"nativeSrc": "2677:14:17",
																"nodeType": "YulFunctionCall",
																"src": "2677:14:17"
															},
															"nativeSrc": "2674:34:17",
															"nodeType": "YulIf",
															"src": "2674:34:17"
														},
														{
															"nativeSrc": "2717:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2717:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2731:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2731:9:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2742:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2742:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2727:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2727:3:17"
																},
																"nativeSrc": "2727:22:17",
																"nodeType": "YulFunctionCall",
																"src": "2727:22:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "2721:2:17",
																	"nodeType": "YulTypedName",
																	"src": "2721:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2797:16:17",
																"nodeType": "YulBlock",
																"src": "2797:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2806:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2806:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2809:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2809:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2799:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2799:6:17"
																			},
																			"nativeSrc": "2799:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2799:12:17"
																		},
																		"nativeSrc": "2799:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2799:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nativeSrc": "2776:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2776:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2780:4:17",
																						"nodeType": "YulLiteral",
																						"src": "2780:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2772:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2772:3:17"
																				},
																				"nativeSrc": "2772:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2772:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2787:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2787:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2768:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:17"
																		},
																		"nativeSrc": "2768:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2768:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2761:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:17"
																},
																"nativeSrc": "2761:35:17",
																"nodeType": "YulFunctionCall",
																"src": "2761:35:17"
															},
															"nativeSrc": "2758:55:17",
															"nodeType": "YulIf",
															"src": "2758:55:17"
														},
														{
															"nativeSrc": "2822:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2822:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "2845:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "2845:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2832:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2832:12:17"
																},
																"nativeSrc": "2832:16:17",
																"nodeType": "YulFunctionCall",
																"src": "2832:16:17"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "2826:2:17",
																	"nodeType": "YulTypedName",
																	"src": "2826:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2871:22:17",
																"nodeType": "YulBlock",
																"src": "2871:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2873:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "2873:16:17"
																			},
																			"nativeSrc": "2873:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2873:18:17"
																		},
																		"nativeSrc": "2873:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2873:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_5",
																		"nativeSrc": "2863:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "2863:2:17"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "2867:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "2867:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2860:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2860:2:17"
																},
																"nativeSrc": "2860:10:17",
																"nodeType": "YulFunctionCall",
																"src": "2860:10:17"
															},
															"nativeSrc": "2857:36:17",
															"nodeType": "YulIf",
															"src": "2857:36:17"
														},
														{
															"nativeSrc": "2902:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2902:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2937:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2937:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_5",
																						"nativeSrc": "2940:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2940:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2933:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2933:3:17"
																				},
																				"nativeSrc": "2933:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2933:10:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2945:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "2945:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2929:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2929:3:17"
																		},
																		"nativeSrc": "2929:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2929:19:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2913:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "2913:15:17"
																},
																"nativeSrc": "2913:36:17",
																"nodeType": "YulFunctionCall",
																"src": "2913:36:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2906:3:17",
																	"nodeType": "YulTypedName",
																	"src": "2906:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2958:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2958:16:17",
															"value": {
																"name": "dst",
																"nativeSrc": "2971:3:17",
																"nodeType": "YulIdentifier",
																"src": "2971:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "2962:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2962:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2990:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2990:3:17"
																	},
																	{
																		"name": "_5",
																		"nativeSrc": "2995:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "2995:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2983:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:17"
																},
																"nativeSrc": "2983:15:17",
																"nodeType": "YulFunctionCall",
																"src": "2983:15:17"
															},
															"nativeSrc": "2983:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "2983:15:17"
														},
														{
															"nativeSrc": "3007:19:17",
															"nodeType": "YulAssignment",
															"src": "3007:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3018:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3018:3:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3023:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "3023:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3014:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3014:3:17"
																},
																"nativeSrc": "3014:12:17",
																"nodeType": "YulFunctionCall",
																"src": "3014:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3007:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:17"
																}
															]
														},
														{
															"nativeSrc": "3035:42:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3035:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "3057:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "3057:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3065:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3065:1:17",
																						"type": "",
																						"value": "6"
																					},
																					{
																						"name": "_5",
																						"nativeSrc": "3068:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "3068:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3061:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3061:3:17"
																				},
																				"nativeSrc": "3061:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3061:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3053:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3053:3:17"
																		},
																		"nativeSrc": "3053:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3053:19:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3074:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "3074:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3049:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:17"
																},
																"nativeSrc": "3049:28:17",
																"nodeType": "YulFunctionCall",
																"src": "3049:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3039:6:17",
																	"nodeType": "YulTypedName",
																	"src": "3039:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3109:16:17",
																"nodeType": "YulBlock",
																"src": "3109:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3118:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3118:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3121:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3121:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3111:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3111:6:17"
																			},
																			"nativeSrc": "3111:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3111:12:17"
																		},
																		"nativeSrc": "3111:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3111:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3092:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3100:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "3100:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3089:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3089:2:17"
																},
																"nativeSrc": "3089:19:17",
																"nodeType": "YulFunctionCall",
																"src": "3089:19:17"
															},
															"nativeSrc": "3086:39:17",
															"nodeType": "YulIf",
															"src": "3086:39:17"
														},
														{
															"nativeSrc": "3134:22:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3134:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "3149:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "3149:2:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3153:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "3153:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:17"
																},
																"nativeSrc": "3145:11:17",
																"nodeType": "YulFunctionCall",
																"src": "3145:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3138:3:17",
																	"nodeType": "YulTypedName",
																	"src": "3138:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3221:297:17",
																"nodeType": "YulBlock",
																"src": "3221:297:17",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3265:16:17",
																			"nodeType": "YulBlock",
																			"src": "3265:16:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3274:1:17",
																								"nodeType": "YulLiteral",
																								"src": "3274:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3277:1:17",
																								"nodeType": "YulLiteral",
																								"src": "3277:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "3267:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "3267:6:17"
																						},
																						"nativeSrc": "3267:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "3267:12:17"
																					},
																					"nativeSrc": "3267:12:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "3267:12:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dataEnd",
																							"nativeSrc": "3246:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "3246:7:17"
																						},
																						{
																							"name": "src",
																							"nativeSrc": "3255:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3255:3:17"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "3242:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "3242:3:17"
																					},
																					"nativeSrc": "3242:17:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3242:17:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3261:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3261:2:17"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nativeSrc": "3238:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3238:3:17"
																			},
																			"nativeSrc": "3238:26:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3238:26:17"
																		},
																		"nativeSrc": "3235:46:17",
																		"nodeType": "YulIf",
																		"src": "3235:46:17"
																	},
																	{
																		"nativeSrc": "3294:37:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3294:37:17",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_1484",
																				"nativeSrc": "3309:20:17",
																				"nodeType": "YulIdentifier",
																				"src": "3309:20:17"
																			},
																			"nativeSrc": "3309:22:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3309:22:17"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nativeSrc": "3298:7:17",
																				"nodeType": "YulTypedName",
																				"src": "3298:7:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value_1",
																					"nativeSrc": "3351:7:17",
																					"nodeType": "YulIdentifier",
																					"src": "3351:7:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "3373:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3373:3:17"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "3360:12:17",
																						"nodeType": "YulIdentifier",
																						"src": "3360:12:17"
																					},
																					"nativeSrc": "3360:17:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3360:17:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3344:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3344:6:17"
																			},
																			"nativeSrc": "3344:34:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3344:34:17"
																		},
																		"nativeSrc": "3344:34:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3344:34:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_1",
																							"nativeSrc": "3402:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "3402:7:17"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "3411:2:17",
																							"nodeType": "YulIdentifier",
																							"src": "3411:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3398:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "3398:3:17"
																					},
																					"nativeSrc": "3398:16:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3398:16:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "3433:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3433:3:17"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "3438:2:17",
																									"nodeType": "YulIdentifier",
																									"src": "3438:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3429:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "3429:3:17"
																							},
																							"nativeSrc": "3429:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "3429:12:17"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "3416:12:17",
																						"nodeType": "YulIdentifier",
																						"src": "3416:12:17"
																					},
																					"nativeSrc": "3416:26:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:26:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3391:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3391:6:17"
																			},
																			"nativeSrc": "3391:52:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3391:52:17"
																		},
																		"nativeSrc": "3391:52:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3391:52:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3463:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3463:3:17"
																				},
																				{
																					"name": "value_1",
																					"nativeSrc": "3468:7:17",
																					"nodeType": "YulIdentifier",
																					"src": "3468:7:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3456:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3456:6:17"
																			},
																			"nativeSrc": "3456:20:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3456:20:17"
																		},
																		"nativeSrc": "3456:20:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3456:20:17"
																	},
																	{
																		"nativeSrc": "3489:19:17",
																		"nodeType": "YulAssignment",
																		"src": "3489:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3500:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3500:3:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3505:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3505:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3496:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:17"
																			},
																			"nativeSrc": "3496:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3496:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3489:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3489:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3176:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3176:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3181:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3181:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3173:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3173:2:17"
																},
																"nativeSrc": "3173:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3173:15:17"
															},
															"nativeSrc": "3165:353:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3189:23:17",
																"nodeType": "YulBlock",
																"src": "3189:23:17",
																"statements": [
																	{
																		"nativeSrc": "3191:19:17",
																		"nodeType": "YulAssignment",
																		"src": "3191:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3202:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3202:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3207:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3207:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3198:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3198:3:17"
																			},
																			"nativeSrc": "3198:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3198:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3191:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3191:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3169:3:17",
																"nodeType": "YulBlock",
																"src": "3169:3:17",
																"statements": []
															},
															"src": "3165:353:17"
														},
														{
															"nativeSrc": "3527:15:17",
															"nodeType": "YulAssignment",
															"src": "3527:15:17",
															"value": {
																"name": "dst_1",
																"nativeSrc": "3537:5:17",
																"nodeType": "YulIdentifier",
																"src": "3537:5:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3527:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "2155:1393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2259:9:17",
														"nodeType": "YulTypedName",
														"src": "2259:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2270:7:17",
														"nodeType": "YulTypedName",
														"src": "2270:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2282:6:17",
														"nodeType": "YulTypedName",
														"src": "2282:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2290:6:17",
														"nodeType": "YulTypedName",
														"src": "2290:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2298:6:17",
														"nodeType": "YulTypedName",
														"src": "2298:6:17",
														"type": ""
													}
												],
												"src": "2155:1393:17"
											},
											{
												"body": {
													"nativeSrc": "3648:92:17",
													"nodeType": "YulBlock",
													"src": "3648:92:17",
													"statements": [
														{
															"nativeSrc": "3658:26:17",
															"nodeType": "YulAssignment",
															"src": "3658:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3670:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3670:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3681:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3681:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3666:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3666:3:17"
																},
																"nativeSrc": "3666:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3666:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3658:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3658:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3725:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3725:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3718:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "3718:6:17"
																				},
																				"nativeSrc": "3718:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3718:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3711:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3711:6:17"
																		},
																		"nativeSrc": "3711:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3711:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3693:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:17"
																},
																"nativeSrc": "3693:41:17",
																"nodeType": "YulFunctionCall",
																"src": "3693:41:17"
															},
															"nativeSrc": "3693:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "3693:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3553:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3617:9:17",
														"nodeType": "YulTypedName",
														"src": "3617:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3628:6:17",
														"nodeType": "YulTypedName",
														"src": "3628:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3639:4:17",
														"nodeType": "YulTypedName",
														"src": "3639:4:17",
														"type": ""
													}
												],
												"src": "3553:187:17"
											},
											{
												"body": {
													"nativeSrc": "3849:279:17",
													"nodeType": "YulBlock",
													"src": "3849:279:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3895:16:17",
																"nodeType": "YulBlock",
																"src": "3895:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3904:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3904:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3907:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3907:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3897:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3897:6:17"
																			},
																			"nativeSrc": "3897:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3897:12:17"
																		},
																		"nativeSrc": "3897:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3897:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3870:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3870:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3879:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3866:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:17"
																		},
																		"nativeSrc": "3866:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3866:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3891:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3891:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3862:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3862:3:17"
																},
																"nativeSrc": "3862:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3862:32:17"
															},
															"nativeSrc": "3859:52:17",
															"nodeType": "YulIf",
															"src": "3859:52:17"
														},
														{
															"nativeSrc": "3920:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3920:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3946:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3946:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3933:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3933:12:17"
																},
																"nativeSrc": "3933:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3933:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3924:5:17",
																	"nodeType": "YulTypedName",
																	"src": "3924:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3990:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3990:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3965:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "3965:24:17"
																},
																"nativeSrc": "3965:31:17",
																"nodeType": "YulFunctionCall",
																"src": "3965:31:17"
															},
															"nativeSrc": "3965:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "3965:31:17"
														},
														{
															"nativeSrc": "4005:15:17",
															"nodeType": "YulAssignment",
															"src": "4005:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "4015:5:17",
																"nodeType": "YulIdentifier",
																"src": "4015:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4005:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4005:6:17"
																}
															]
														},
														{
															"nativeSrc": "4029:42:17",
															"nodeType": "YulAssignment",
															"src": "4029:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4056:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4067:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4052:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:17"
																		},
																		"nativeSrc": "4052:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4039:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4039:12:17"
																},
																"nativeSrc": "4039:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4039:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4029:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:17"
																}
															]
														},
														{
															"nativeSrc": "4080:42:17",
															"nodeType": "YulAssignment",
															"src": "4080:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4107:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4107:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4118:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4118:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4103:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:17"
																		},
																		"nativeSrc": "4103:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4103:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4090:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4090:12:17"
																},
																"nativeSrc": "4090:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4090:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4080:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3745:383:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3799:9:17",
														"nodeType": "YulTypedName",
														"src": "3799:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3810:7:17",
														"nodeType": "YulTypedName",
														"src": "3810:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3822:6:17",
														"nodeType": "YulTypedName",
														"src": "3822:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3830:6:17",
														"nodeType": "YulTypedName",
														"src": "3830:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3838:6:17",
														"nodeType": "YulTypedName",
														"src": "3838:6:17",
														"type": ""
													}
												],
												"src": "3745:383:17"
											},
											{
												"body": {
													"nativeSrc": "4256:161:17",
													"nodeType": "YulBlock",
													"src": "4256:161:17",
													"statements": [
														{
															"nativeSrc": "4266:26:17",
															"nodeType": "YulAssignment",
															"src": "4266:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4278:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4278:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4289:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4289:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4274:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4274:3:17"
																},
																"nativeSrc": "4274:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4274:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4266:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4266:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4308:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4308:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4323:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4323:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4339:3:17",
																								"nodeType": "YulLiteral",
																								"src": "4339:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4344:1:17",
																								"nodeType": "YulLiteral",
																								"src": "4344:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4335:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "4335:3:17"
																						},
																						"nativeSrc": "4335:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "4335:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4348:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4348:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4331:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4331:3:17"
																				},
																				"nativeSrc": "4331:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4331:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4319:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4319:3:17"
																		},
																		"nativeSrc": "4319:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4301:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:17"
																},
																"nativeSrc": "4301:51:17",
																"nodeType": "YulFunctionCall",
																"src": "4301:51:17"
															},
															"nativeSrc": "4301:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "4301:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4372:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4372:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4383:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4383:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:17"
																		},
																		"nativeSrc": "4368:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "4402:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4402:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4395:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "4395:6:17"
																				},
																				"nativeSrc": "4395:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4395:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4388:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4388:6:17"
																		},
																		"nativeSrc": "4388:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4388:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4361:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:17"
																},
																"nativeSrc": "4361:50:17",
																"nodeType": "YulFunctionCall",
																"src": "4361:50:17"
															},
															"nativeSrc": "4361:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "4361:50:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "4133:284:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4217:9:17",
														"nodeType": "YulTypedName",
														"src": "4217:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4228:6:17",
														"nodeType": "YulTypedName",
														"src": "4228:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4236:6:17",
														"nodeType": "YulTypedName",
														"src": "4236:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4247:4:17",
														"nodeType": "YulTypedName",
														"src": "4247:4:17",
														"type": ""
													}
												],
												"src": "4133:284:17"
											},
											{
												"body": {
													"nativeSrc": "4596:164:17",
													"nodeType": "YulBlock",
													"src": "4596:164:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4613:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4613:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4624:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4624:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4606:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:17"
																},
																"nativeSrc": "4606:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4606:21:17"
															},
															"nativeSrc": "4606:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4606:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4647:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4647:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4658:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4658:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4643:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4643:3:17"
																		},
																		"nativeSrc": "4643:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4663:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4663:2:17",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4636:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:17"
																},
																"nativeSrc": "4636:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4636:30:17"
															},
															"nativeSrc": "4636:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4636:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4686:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4697:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4697:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4682:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:17"
																		},
																		"nativeSrc": "4682:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:18:17"
																	},
																	{
																		"hexValue": "4e6f7420612070726f7669646572",
																		"kind": "string",
																		"nativeSrc": "4702:16:17",
																		"nodeType": "YulLiteral",
																		"src": "4702:16:17",
																		"type": "",
																		"value": "Not a provider"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4675:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4675:6:17"
																},
																"nativeSrc": "4675:44:17",
																"nodeType": "YulFunctionCall",
																"src": "4675:44:17"
															},
															"nativeSrc": "4675:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "4675:44:17"
														},
														{
															"nativeSrc": "4728:26:17",
															"nodeType": "YulAssignment",
															"src": "4728:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4740:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4740:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4751:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4751:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4736:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4736:3:17"
																},
																"nativeSrc": "4736:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4736:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4728:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4728:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_184bad15784cb910f263e8e4ee02d49989e8afe6a24679e01122776f1c3e056e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4422:338:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4573:9:17",
														"nodeType": "YulTypedName",
														"src": "4573:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4587:4:17",
														"nodeType": "YulTypedName",
														"src": "4587:4:17",
														"type": ""
													}
												],
												"src": "4422:338:17"
											},
											{
												"body": {
													"nativeSrc": "4939:168:17",
													"nodeType": "YulBlock",
													"src": "4939:168:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4956:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4956:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4967:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4949:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4949:6:17"
																},
																"nativeSrc": "4949:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4949:21:17"
															},
															"nativeSrc": "4949:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4949:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4990:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4990:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5001:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4986:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4986:3:17"
																		},
																		"nativeSrc": "4986:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5006:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5006:2:17",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4979:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4979:6:17"
																},
																"nativeSrc": "4979:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4979:30:17"
															},
															"nativeSrc": "4979:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4979:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5029:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5029:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5040:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5040:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5025:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5025:3:17"
																		},
																		"nativeSrc": "5025:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:18:17"
																	},
																	{
																		"hexValue": "4e6f74206120656e6f756768206d6f6e6579",
																		"kind": "string",
																		"nativeSrc": "5045:20:17",
																		"nodeType": "YulLiteral",
																		"src": "5045:20:17",
																		"type": "",
																		"value": "Not a enough money"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5018:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5018:6:17"
																},
																"nativeSrc": "5018:48:17",
																"nodeType": "YulFunctionCall",
																"src": "5018:48:17"
															},
															"nativeSrc": "5018:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "5018:48:17"
														},
														{
															"nativeSrc": "5075:26:17",
															"nodeType": "YulAssignment",
															"src": "5075:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5087:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5087:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5098:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5098:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5083:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5083:3:17"
																},
																"nativeSrc": "5083:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5083:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5075:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5075:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854b34d0acc5cb8b3bc007af37909df0d1553bdec3cfe89e014c60eb1a0d98c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4765:342:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4916:9:17",
														"nodeType": "YulTypedName",
														"src": "4916:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4930:4:17",
														"nodeType": "YulTypedName",
														"src": "4930:4:17",
														"type": ""
													}
												],
												"src": "4765:342:17"
											},
											{
												"body": {
													"nativeSrc": "5144:95:17",
													"nodeType": "YulBlock",
													"src": "5144:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5161:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5161:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5168:3:17",
																				"nodeType": "YulLiteral",
																				"src": "5168:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5173:10:17",
																				"nodeType": "YulLiteral",
																				"src": "5173:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5164:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:17"
																		},
																		"nativeSrc": "5164:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5154:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:17"
																},
																"nativeSrc": "5154:31:17",
																"nodeType": "YulFunctionCall",
																"src": "5154:31:17"
															},
															"nativeSrc": "5154:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "5154:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5201:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5201:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5204:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5204:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5194:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:17"
																},
																"nativeSrc": "5194:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5194:15:17"
															},
															"nativeSrc": "5194:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5194:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5225:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5225:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5228:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5228:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5218:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:17"
																},
																"nativeSrc": "5218:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5218:15:17"
															},
															"nativeSrc": "5218:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5218:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5112:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5112:127:17"
											},
											{
												"body": {
													"nativeSrc": "5418:176:17",
													"nodeType": "YulBlock",
													"src": "5418:176:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5435:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5435:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5446:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5446:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5428:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:17"
																},
																"nativeSrc": "5428:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5428:21:17"
															},
															"nativeSrc": "5428:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "5428:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5469:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5469:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5480:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5480:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5465:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5465:3:17"
																		},
																		"nativeSrc": "5465:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5465:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5485:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5485:2:17",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5458:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:17"
																},
																"nativeSrc": "5458:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5458:30:17"
															},
															"nativeSrc": "5458:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "5458:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5508:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5508:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5519:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5519:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5504:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5504:3:17"
																		},
																		"nativeSrc": "5504:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5504:18:17"
																	},
																	{
																		"hexValue": "5265666572656e6365494420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "5524:28:17",
																		"nodeType": "YulLiteral",
																		"src": "5524:28:17",
																		"type": "",
																		"value": "ReferenceID does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5497:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5497:6:17"
																},
																"nativeSrc": "5497:56:17",
																"nodeType": "YulFunctionCall",
																"src": "5497:56:17"
															},
															"nativeSrc": "5497:56:17",
															"nodeType": "YulExpressionStatement",
															"src": "5497:56:17"
														},
														{
															"nativeSrc": "5562:26:17",
															"nodeType": "YulAssignment",
															"src": "5562:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5574:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5574:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5585:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5585:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5570:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5570:3:17"
																},
																"nativeSrc": "5570:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5570:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5562:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5562:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d19debe52d26886adbe51c9a9f8f9d015ece4f00223c9099dd110a57b950ab37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5244:350:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5395:9:17",
														"nodeType": "YulTypedName",
														"src": "5395:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5409:4:17",
														"nodeType": "YulTypedName",
														"src": "5409:4:17",
														"type": ""
													}
												],
												"src": "5244:350:17"
											},
											{
												"body": {
													"nativeSrc": "5680:103:17",
													"nodeType": "YulBlock",
													"src": "5680:103:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5726:16:17",
																"nodeType": "YulBlock",
																"src": "5726:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5735:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5735:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5738:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5738:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5728:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:17"
																			},
																			"nativeSrc": "5728:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5728:12:17"
																		},
																		"nativeSrc": "5728:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5728:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5701:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5701:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5710:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5710:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5697:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5697:3:17"
																		},
																		"nativeSrc": "5697:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5697:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5722:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5693:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:17"
																},
																"nativeSrc": "5693:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5693:32:17"
															},
															"nativeSrc": "5690:52:17",
															"nodeType": "YulIf",
															"src": "5690:52:17"
														},
														{
															"nativeSrc": "5751:26:17",
															"nodeType": "YulAssignment",
															"src": "5751:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5761:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5761:5:17"
																},
																"nativeSrc": "5761:16:17",
																"nodeType": "YulFunctionCall",
																"src": "5761:16:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5751:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5751:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5599:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5646:9:17",
														"nodeType": "YulTypedName",
														"src": "5646:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5657:7:17",
														"nodeType": "YulTypedName",
														"src": "5657:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5669:6:17",
														"nodeType": "YulTypedName",
														"src": "5669:6:17",
														"type": ""
													}
												],
												"src": "5599:184:17"
											},
											{
												"body": {
													"nativeSrc": "5917:119:17",
													"nodeType": "YulBlock",
													"src": "5917:119:17",
													"statements": [
														{
															"nativeSrc": "5927:26:17",
															"nodeType": "YulAssignment",
															"src": "5927:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5939:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5939:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5950:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5950:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5935:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:17"
																},
																"nativeSrc": "5935:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5935:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5927:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5927:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5969:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5980:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5980:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5962:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:17"
																},
																"nativeSrc": "5962:25:17",
																"nodeType": "YulFunctionCall",
																"src": "5962:25:17"
															},
															"nativeSrc": "5962:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "5962:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6007:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6007:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6018:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6018:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6003:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6003:3:17"
																		},
																		"nativeSrc": "6003:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6023:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6023:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5996:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:17"
																},
																"nativeSrc": "5996:34:17",
																"nodeType": "YulFunctionCall",
																"src": "5996:34:17"
															},
															"nativeSrc": "5996:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "5996:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5788:248:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5878:9:17",
														"nodeType": "YulTypedName",
														"src": "5878:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5889:6:17",
														"nodeType": "YulTypedName",
														"src": "5889:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5897:6:17",
														"nodeType": "YulTypedName",
														"src": "5897:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5908:4:17",
														"nodeType": "YulTypedName",
														"src": "5908:4:17",
														"type": ""
													}
												],
												"src": "5788:248:17"
											},
											{
												"body": {
													"nativeSrc": "6073:95:17",
													"nodeType": "YulBlock",
													"src": "6073:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6090:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6097:3:17",
																				"nodeType": "YulLiteral",
																				"src": "6097:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6102:10:17",
																				"nodeType": "YulLiteral",
																				"src": "6102:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6093:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6093:3:17"
																		},
																		"nativeSrc": "6093:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6093:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6083:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:17"
																},
																"nativeSrc": "6083:31:17",
																"nodeType": "YulFunctionCall",
																"src": "6083:31:17"
															},
															"nativeSrc": "6083:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "6083:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6130:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6130:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6133:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6133:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6123:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6123:6:17"
																},
																"nativeSrc": "6123:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6123:15:17"
															},
															"nativeSrc": "6123:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "6123:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6154:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6157:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6157:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6147:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:17"
																},
																"nativeSrc": "6147:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6147:15:17"
															},
															"nativeSrc": "6147:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "6147:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6041:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "6041:127:17"
											},
											{
												"body": {
													"nativeSrc": "6225:116:17",
													"nodeType": "YulBlock",
													"src": "6225:116:17",
													"statements": [
														{
															"nativeSrc": "6235:20:17",
															"nodeType": "YulAssignment",
															"src": "6235:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6250:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6250:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6253:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6253:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6246:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6246:3:17"
																},
																"nativeSrc": "6246:9:17",
																"nodeType": "YulFunctionCall",
																"src": "6246:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6235:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "6235:7:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6313:22:17",
																"nodeType": "YulBlock",
																"src": "6313:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6315:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6315:16:17"
																			},
																			"nativeSrc": "6315:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6315:18:17"
																		},
																		"nativeSrc": "6315:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6315:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6284:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "6284:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6277:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "6277:6:17"
																				},
																				"nativeSrc": "6277:9:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6277:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6291:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "6291:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6298:7:17",
																								"nodeType": "YulIdentifier",
																								"src": "6298:7:17"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6307:1:17",
																								"nodeType": "YulIdentifier",
																								"src": "6307:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6294:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "6294:3:17"
																						},
																						"nativeSrc": "6294:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6294:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6288:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "6288:2:17"
																				},
																				"nativeSrc": "6288:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6288:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6274:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6274:2:17"
																		},
																		"nativeSrc": "6274:37:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6274:37:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6267:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:17"
																},
																"nativeSrc": "6267:45:17",
																"nodeType": "YulFunctionCall",
																"src": "6267:45:17"
															},
															"nativeSrc": "6264:71:17",
															"nodeType": "YulIf",
															"src": "6264:71:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6173:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6204:1:17",
														"nodeType": "YulTypedName",
														"src": "6204:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6207:1:17",
														"nodeType": "YulTypedName",
														"src": "6207:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6213:7:17",
														"nodeType": "YulTypedName",
														"src": "6213:7:17",
														"type": ""
													}
												],
												"src": "6173:168:17"
											},
											{
												"body": {
													"nativeSrc": "6394:77:17",
													"nodeType": "YulBlock",
													"src": "6394:77:17",
													"statements": [
														{
															"nativeSrc": "6404:16:17",
															"nodeType": "YulAssignment",
															"src": "6404:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6415:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6415:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6418:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6418:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6411:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6411:3:17"
																},
																"nativeSrc": "6411:9:17",
																"nodeType": "YulFunctionCall",
																"src": "6411:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6404:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6404:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6443:22:17",
																"nodeType": "YulBlock",
																"src": "6443:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6445:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6445:16:17"
																			},
																			"nativeSrc": "6445:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6445:18:17"
																		},
																		"nativeSrc": "6445:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6445:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6435:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6435:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6438:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6438:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6432:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6432:2:17"
																},
																"nativeSrc": "6432:10:17",
																"nodeType": "YulFunctionCall",
																"src": "6432:10:17"
															},
															"nativeSrc": "6429:36:17",
															"nodeType": "YulIf",
															"src": "6429:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6346:125:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6377:1:17",
														"nodeType": "YulTypedName",
														"src": "6377:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6380:1:17",
														"nodeType": "YulTypedName",
														"src": "6380:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6386:3:17",
														"nodeType": "YulTypedName",
														"src": "6386:3:17",
														"type": ""
													}
												],
												"src": "6346:125:17"
											},
											{
												"body": {
													"nativeSrc": "6733:674:17",
													"nodeType": "YulBlock",
													"src": "6733:674:17",
													"statements": [
														{
															"nativeSrc": "6743:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6743:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6761:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6761:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6772:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6772:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6757:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6757:3:17"
																},
																"nativeSrc": "6757:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6757:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6747:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6747:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6791:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6791:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6802:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6802:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6784:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:17"
																},
																"nativeSrc": "6784:25:17",
																"nodeType": "YulFunctionCall",
																"src": "6784:25:17"
															},
															"nativeSrc": "6784:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "6784:25:17"
														},
														{
															"nativeSrc": "6818:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6818:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "6828:2:17",
																"nodeType": "YulLiteral",
																"src": "6828:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6822:2:17",
																	"nodeType": "YulTypedName",
																	"src": "6822:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6850:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6850:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6861:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6861:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6846:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:17"
																		},
																		"nativeSrc": "6846:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6846:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6866:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6866:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6839:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6839:6:17"
																},
																"nativeSrc": "6839:34:17",
																"nodeType": "YulFunctionCall",
																"src": "6839:34:17"
															},
															"nativeSrc": "6839:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "6839:34:17"
														},
														{
															"nativeSrc": "6882:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6882:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "6892:2:17",
																"nodeType": "YulLiteral",
																"src": "6892:2:17",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6886:2:17",
																	"nodeType": "YulTypedName",
																	"src": "6886:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6925:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6925:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6910:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:17"
																		},
																		"nativeSrc": "6910:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6910:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6930:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6930:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6903:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:17"
																},
																"nativeSrc": "6903:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6903:30:17"
															},
															"nativeSrc": "6903:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "6903:30:17"
														},
														{
															"nativeSrc": "6942:17:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6942:17:17",
															"value": {
																"name": "tail_1",
																"nativeSrc": "6953:6:17",
																"nodeType": "YulIdentifier",
																"src": "6953:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "6946:3:17",
																	"nodeType": "YulTypedName",
																	"src": "6946:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6968:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6968:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6988:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6988:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6982:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "6982:5:17"
																},
																"nativeSrc": "6982:13:17",
																"nodeType": "YulFunctionCall",
																"src": "6982:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6972:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6972:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "7011:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7011:6:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7019:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7004:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:17"
																},
																"nativeSrc": "7004:22:17",
																"nodeType": "YulFunctionCall",
																"src": "7004:22:17"
															},
															"nativeSrc": "7004:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "7004:22:17"
														},
														{
															"nativeSrc": "7035:26:17",
															"nodeType": "YulAssignment",
															"src": "7035:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7046:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7046:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7057:3:17",
																		"nodeType": "YulLiteral",
																		"src": "7057:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7042:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7042:3:17"
																},
																"nativeSrc": "7042:19:17",
																"nodeType": "YulFunctionCall",
																"src": "7042:19:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7035:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7035:3:17"
																}
															]
														},
														{
															"nativeSrc": "7070:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7070:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7088:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7088:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7096:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7096:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7084:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:17"
																},
																"nativeSrc": "7084:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7084:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7074:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7074:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7108:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7108:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "7117:1:17",
																"nodeType": "YulLiteral",
																"src": "7117:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7112:1:17",
																	"nodeType": "YulTypedName",
																	"src": "7112:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7176:205:17",
																"nodeType": "YulBlock",
																"src": "7176:205:17",
																"statements": [
																	{
																		"nativeSrc": "7190:23:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7190:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7206:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "7206:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7200:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7200:5:17"
																			},
																			"nativeSrc": "7200:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7200:13:17"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nativeSrc": "7194:2:17",
																				"nodeType": "YulTypedName",
																				"src": "7194:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7233:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7233:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nativeSrc": "7244:2:17",
																							"nodeType": "YulIdentifier",
																							"src": "7244:2:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7238:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "7238:5:17"
																					},
																					"nativeSrc": "7238:9:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7238:9:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7226:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7226:6:17"
																			},
																			"nativeSrc": "7226:22:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7226:22:17"
																		},
																		"nativeSrc": "7226:22:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7226:22:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "7272:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "7272:3:17"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "7277:2:17",
																							"nodeType": "YulIdentifier",
																							"src": "7277:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7268:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "7268:3:17"
																					},
																					"nativeSrc": "7268:12:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7268:12:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "7292:2:17",
																									"nodeType": "YulIdentifier",
																									"src": "7292:2:17"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "7296:2:17",
																									"nodeType": "YulIdentifier",
																									"src": "7296:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7288:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "7288:3:17"
																							},
																							"nativeSrc": "7288:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "7288:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7282:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "7282:5:17"
																					},
																					"nativeSrc": "7282:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7282:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7261:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7261:6:17"
																			},
																			"nativeSrc": "7261:40:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7261:40:17"
																		},
																		"nativeSrc": "7261:40:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7261:40:17"
																	},
																	{
																		"nativeSrc": "7314:19:17",
																		"nodeType": "YulAssignment",
																		"src": "7314:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7325:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7325:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "7330:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "7330:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7321:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7321:3:17"
																			},
																			"nativeSrc": "7321:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7321:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7314:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7314:3:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7346:25:17",
																		"nodeType": "YulAssignment",
																		"src": "7346:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7360:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "7360:6:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7368:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "7368:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7356:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7356:3:17"
																			},
																			"nativeSrc": "7356:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7356:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7346:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7346:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7138:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "7138:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7141:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7141:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7135:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7135:2:17"
																},
																"nativeSrc": "7135:13:17",
																"nodeType": "YulFunctionCall",
																"src": "7135:13:17"
															},
															"nativeSrc": "7127:254:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7149:18:17",
																"nodeType": "YulBlock",
																"src": "7149:18:17",
																"statements": [
																	{
																		"nativeSrc": "7151:14:17",
																		"nodeType": "YulAssignment",
																		"src": "7151:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7160:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "7160:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7163:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7163:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7156:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7156:3:17"
																			},
																			"nativeSrc": "7156:9:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7156:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7151:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "7151:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7131:3:17",
																"nodeType": "YulBlock",
																"src": "7131:3:17",
																"statements": []
															},
															"src": "7127:254:17"
														},
														{
															"nativeSrc": "7390:11:17",
															"nodeType": "YulAssignment",
															"src": "7390:11:17",
															"value": {
																"name": "pos",
																"nativeSrc": "7398:3:17",
																"nodeType": "YulIdentifier",
																"src": "7398:3:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7390:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7390:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_uint256_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6476:931:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6686:9:17",
														"nodeType": "YulTypedName",
														"src": "6686:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6697:6:17",
														"nodeType": "YulTypedName",
														"src": "6697:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6705:6:17",
														"nodeType": "YulTypedName",
														"src": "6705:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6713:6:17",
														"nodeType": "YulTypedName",
														"src": "6713:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6724:4:17",
														"nodeType": "YulTypedName",
														"src": "6724:4:17",
														"type": ""
													}
												],
												"src": "6476:931:17"
											},
											{
												"body": {
													"nativeSrc": "7459:88:17",
													"nodeType": "YulBlock",
													"src": "7459:88:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:22:17",
																"nodeType": "YulBlock",
																"src": "7490:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7492:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7492:16:17"
																			},
																			"nativeSrc": "7492:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:18:17"
																		},
																		"nativeSrc": "7492:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7475:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7475:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7486:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7486:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7482:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:17"
																		},
																		"nativeSrc": "7482:6:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7482:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7472:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7472:2:17"
																},
																"nativeSrc": "7472:17:17",
																"nodeType": "YulFunctionCall",
																"src": "7472:17:17"
															},
															"nativeSrc": "7469:43:17",
															"nodeType": "YulIf",
															"src": "7469:43:17"
														},
														{
															"nativeSrc": "7521:20:17",
															"nodeType": "YulAssignment",
															"src": "7521:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7532:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7532:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7539:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7539:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7528:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:17"
																},
																"nativeSrc": "7528:13:17",
																"nodeType": "YulFunctionCall",
																"src": "7528:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7521:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7521:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7412:135:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7441:5:17",
														"nodeType": "YulTypedName",
														"src": "7441:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7451:3:17",
														"nodeType": "YulTypedName",
														"src": "7451:3:17",
														"type": ""
													}
												],
												"src": "7412:135:17"
											},
											{
												"body": {
													"nativeSrc": "7633:170:17",
													"nodeType": "YulBlock",
													"src": "7633:170:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7679:16:17",
																"nodeType": "YulBlock",
																"src": "7679:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7688:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7688:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7691:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7691:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7681:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7681:6:17"
																			},
																			"nativeSrc": "7681:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7681:12:17"
																		},
																		"nativeSrc": "7681:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7681:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7654:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7654:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7663:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7663:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7650:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7650:3:17"
																		},
																		"nativeSrc": "7650:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7650:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7675:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7675:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7646:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:17"
																},
																"nativeSrc": "7646:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7646:32:17"
															},
															"nativeSrc": "7643:52:17",
															"nodeType": "YulIf",
															"src": "7643:52:17"
														},
														{
															"nativeSrc": "7704:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7704:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7723:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7723:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7717:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7717:5:17"
																},
																"nativeSrc": "7717:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7717:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7708:5:17",
																	"nodeType": "YulTypedName",
																	"src": "7708:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7767:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7767:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7742:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "7742:24:17"
																},
																"nativeSrc": "7742:31:17",
																"nodeType": "YulFunctionCall",
																"src": "7742:31:17"
															},
															"nativeSrc": "7742:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "7742:31:17"
														},
														{
															"nativeSrc": "7782:15:17",
															"nodeType": "YulAssignment",
															"src": "7782:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "7792:5:17",
																"nodeType": "YulIdentifier",
																"src": "7792:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7782:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7782:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7552:251:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7599:9:17",
														"nodeType": "YulTypedName",
														"src": "7599:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7610:7:17",
														"nodeType": "YulTypedName",
														"src": "7610:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7622:6:17",
														"nodeType": "YulTypedName",
														"src": "7622:6:17",
														"type": ""
													}
												],
												"src": "7552:251:17"
											},
											{
												"body": {
													"nativeSrc": "7982:161:17",
													"nodeType": "YulBlock",
													"src": "7982:161:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7999:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7999:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8010:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7992:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:17"
																},
																"nativeSrc": "7992:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7992:21:17"
															},
															"nativeSrc": "7992:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "7992:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8033:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8033:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8044:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8044:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8029:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:17"
																		},
																		"nativeSrc": "8029:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8029:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8049:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8049:2:17",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8022:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:17"
																},
																"nativeSrc": "8022:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8022:30:17"
															},
															"nativeSrc": "8022:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8022:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8072:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8072:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8083:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8083:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8068:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8068:3:17"
																		},
																		"nativeSrc": "8068:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8068:18:17"
																	},
																	{
																		"hexValue": "4e6f742061206f776e6572",
																		"kind": "string",
																		"nativeSrc": "8088:13:17",
																		"nodeType": "YulLiteral",
																		"src": "8088:13:17",
																		"type": "",
																		"value": "Not a owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8061:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8061:6:17"
																},
																"nativeSrc": "8061:41:17",
																"nodeType": "YulFunctionCall",
																"src": "8061:41:17"
															},
															"nativeSrc": "8061:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "8061:41:17"
														},
														{
															"nativeSrc": "8111:26:17",
															"nodeType": "YulAssignment",
															"src": "8111:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8123:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8123:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8134:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8134:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8119:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8119:3:17"
																},
																"nativeSrc": "8119:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8119:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8111:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8111:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4f661964a11f432e6b46ac120b6a86a772a05a42a54d1c4deae09f5f0134910__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7808:335:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7959:9:17",
														"nodeType": "YulTypedName",
														"src": "7959:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7973:4:17",
														"nodeType": "YulTypedName",
														"src": "7973:4:17",
														"type": ""
													}
												],
												"src": "7808:335:17"
											},
											{
												"body": {
													"nativeSrc": "8322:165:17",
													"nodeType": "YulBlock",
													"src": "8322:165:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8339:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8339:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8350:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8350:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8332:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8332:6:17"
																},
																"nativeSrc": "8332:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8332:21:17"
															},
															"nativeSrc": "8332:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8332:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8373:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8384:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8369:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:17"
																		},
																		"nativeSrc": "8369:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8369:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8389:2:17",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8362:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:17"
																},
																"nativeSrc": "8362:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8362:30:17"
															},
															"nativeSrc": "8362:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8362:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8423:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:17"
																		},
																		"nativeSrc": "8408:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:17"
																	},
																	{
																		"hexValue": "416c72656164792063726561746564",
																		"kind": "string",
																		"nativeSrc": "8428:17:17",
																		"nodeType": "YulLiteral",
																		"src": "8428:17:17",
																		"type": "",
																		"value": "Already created"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:17"
																},
																"nativeSrc": "8401:45:17",
																"nodeType": "YulFunctionCall",
																"src": "8401:45:17"
															},
															"nativeSrc": "8401:45:17",
															"nodeType": "YulExpressionStatement",
															"src": "8401:45:17"
														},
														{
															"nativeSrc": "8455:26:17",
															"nodeType": "YulAssignment",
															"src": "8455:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8467:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8467:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8478:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8478:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8463:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8463:3:17"
																},
																"nativeSrc": "8463:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8463:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8455:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8455:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f28f12a731de969b49519afdbb2a93e6efb5794c4edab1390cde2eb3409e2d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8148:339:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8299:9:17",
														"nodeType": "YulTypedName",
														"src": "8299:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8313:4:17",
														"nodeType": "YulTypedName",
														"src": "8313:4:17",
														"type": ""
													}
												],
												"src": "8148:339:17"
											},
											{
												"body": {
													"nativeSrc": "8649:188:17",
													"nodeType": "YulBlock",
													"src": "8649:188:17",
													"statements": [
														{
															"nativeSrc": "8659:26:17",
															"nodeType": "YulAssignment",
															"src": "8659:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8671:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8671:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8682:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8682:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8667:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:17"
																},
																"nativeSrc": "8667:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8667:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8659:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8659:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8701:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8701:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8716:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8716:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8732:3:17",
																								"nodeType": "YulLiteral",
																								"src": "8732:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8737:1:17",
																								"nodeType": "YulLiteral",
																								"src": "8737:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8728:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "8728:3:17"
																						},
																						"nativeSrc": "8728:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "8728:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8741:1:17",
																						"nodeType": "YulLiteral",
																						"src": "8741:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8724:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8724:3:17"
																				},
																				"nativeSrc": "8724:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8724:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8712:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:17"
																		},
																		"nativeSrc": "8712:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8712:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8694:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:17"
																},
																"nativeSrc": "8694:51:17",
																"nodeType": "YulFunctionCall",
																"src": "8694:51:17"
															},
															"nativeSrc": "8694:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "8694:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8765:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8765:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8776:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8776:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8761:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8761:3:17"
																		},
																		"nativeSrc": "8761:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8781:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8781:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8754:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:17"
																},
																"nativeSrc": "8754:34:17",
																"nodeType": "YulFunctionCall",
																"src": "8754:34:17"
															},
															"nativeSrc": "8754:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "8754:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8808:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8808:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8819:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8819:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8804:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8804:3:17"
																		},
																		"nativeSrc": "8804:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8804:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8824:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8824:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8797:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:17"
																},
																"nativeSrc": "8797:34:17",
																"nodeType": "YulFunctionCall",
																"src": "8797:34:17"
															},
															"nativeSrc": "8797:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "8797:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8492:345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8602:9:17",
														"nodeType": "YulTypedName",
														"src": "8602:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8613:6:17",
														"nodeType": "YulTypedName",
														"src": "8613:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8621:6:17",
														"nodeType": "YulTypedName",
														"src": "8621:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8629:6:17",
														"nodeType": "YulTypedName",
														"src": "8629:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8640:4:17",
														"nodeType": "YulTypedName",
														"src": "8640:4:17",
														"type": ""
													}
												],
												"src": "8492:345:17"
											},
											{
												"body": {
													"nativeSrc": "9027:232:17",
													"nodeType": "YulBlock",
													"src": "9027:232:17",
													"statements": [
														{
															"nativeSrc": "9037:27:17",
															"nodeType": "YulAssignment",
															"src": "9037:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9049:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9049:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9060:3:17",
																		"nodeType": "YulLiteral",
																		"src": "9060:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9045:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9045:3:17"
																},
																"nativeSrc": "9045:19:17",
																"nodeType": "YulFunctionCall",
																"src": "9045:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9037:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9037:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9080:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9080:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9095:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9095:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9111:3:17",
																								"nodeType": "YulLiteral",
																								"src": "9111:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9116:1:17",
																								"nodeType": "YulLiteral",
																								"src": "9116:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9107:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "9107:3:17"
																						},
																						"nativeSrc": "9107:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "9107:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9120:1:17",
																						"nodeType": "YulLiteral",
																						"src": "9120:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9103:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9103:3:17"
																				},
																				"nativeSrc": "9103:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9103:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9091:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:17"
																		},
																		"nativeSrc": "9091:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9091:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9073:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:17"
																},
																"nativeSrc": "9073:51:17",
																"nodeType": "YulFunctionCall",
																"src": "9073:51:17"
															},
															"nativeSrc": "9073:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "9073:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9144:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9144:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9155:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9140:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9140:3:17"
																		},
																		"nativeSrc": "9140:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9140:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9160:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9160:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9133:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9133:6:17"
																},
																"nativeSrc": "9133:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9133:34:17"
															},
															"nativeSrc": "9133:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9133:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9187:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9198:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9198:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9183:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:17"
																		},
																		"nativeSrc": "9183:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9203:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9203:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9176:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:17"
																},
																"nativeSrc": "9176:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9176:34:17"
															},
															"nativeSrc": "9176:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9176:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9230:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9241:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9241:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9226:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:17"
																		},
																		"nativeSrc": "9226:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:18:17"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9246:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9219:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9219:6:17"
																},
																"nativeSrc": "9219:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9219:34:17"
															},
															"nativeSrc": "9219:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9219:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8842:417:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8972:9:17",
														"nodeType": "YulTypedName",
														"src": "8972:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8983:6:17",
														"nodeType": "YulTypedName",
														"src": "8983:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8991:6:17",
														"nodeType": "YulTypedName",
														"src": "8991:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8999:6:17",
														"nodeType": "YulTypedName",
														"src": "8999:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9007:6:17",
														"nodeType": "YulTypedName",
														"src": "9007:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9018:4:17",
														"nodeType": "YulTypedName",
														"src": "9018:4:17",
														"type": ""
													}
												],
												"src": "8842:417:17"
											},
											{
												"body": {
													"nativeSrc": "9421:218:17",
													"nodeType": "YulBlock",
													"src": "9421:218:17",
													"statements": [
														{
															"nativeSrc": "9431:26:17",
															"nodeType": "YulAssignment",
															"src": "9431:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9443:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9443:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9454:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9454:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9439:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9439:3:17"
																},
																"nativeSrc": "9439:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9439:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9431:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9431:4:17"
																}
															]
														},
														{
															"nativeSrc": "9466:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9466:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9484:3:17",
																				"nodeType": "YulLiteral",
																				"src": "9484:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9489:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9489:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9480:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9480:3:17"
																		},
																		"nativeSrc": "9480:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9480:11:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9493:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9493:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9476:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9476:3:17"
																},
																"nativeSrc": "9476:19:17",
																"nodeType": "YulFunctionCall",
																"src": "9476:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9470:2:17",
																	"nodeType": "YulTypedName",
																	"src": "9470:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9511:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9511:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9526:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9526:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9534:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "9534:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9522:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:17"
																		},
																		"nativeSrc": "9522:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9522:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9504:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9504:6:17"
																},
																"nativeSrc": "9504:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9504:34:17"
															},
															"nativeSrc": "9504:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9504:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9558:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9558:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9569:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9569:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9554:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9554:3:17"
																		},
																		"nativeSrc": "9554:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9554:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9578:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9578:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9586:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "9586:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9574:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9574:3:17"
																		},
																		"nativeSrc": "9574:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9574:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9547:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9547:6:17"
																},
																"nativeSrc": "9547:43:17",
																"nodeType": "YulFunctionCall",
																"src": "9547:43:17"
															},
															"nativeSrc": "9547:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "9547:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9610:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9610:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9621:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9621:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9606:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9606:3:17"
																		},
																		"nativeSrc": "9606:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9606:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9626:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9626:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9599:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9599:6:17"
																},
																"nativeSrc": "9599:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9599:34:17"
															},
															"nativeSrc": "9599:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9599:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9264:375:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9374:9:17",
														"nodeType": "YulTypedName",
														"src": "9374:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9385:6:17",
														"nodeType": "YulTypedName",
														"src": "9385:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9393:6:17",
														"nodeType": "YulTypedName",
														"src": "9393:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9401:6:17",
														"nodeType": "YulTypedName",
														"src": "9401:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9412:4:17",
														"nodeType": "YulTypedName",
														"src": "9412:4:17",
														"type": ""
													}
												],
												"src": "9264:375:17"
											},
											{
												"body": {
													"nativeSrc": "9722:167:17",
													"nodeType": "YulBlock",
													"src": "9722:167:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9768:16:17",
																"nodeType": "YulBlock",
																"src": "9768:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9777:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9777:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9780:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9780:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9770:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9770:6:17"
																			},
																			"nativeSrc": "9770:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:12:17"
																		},
																		"nativeSrc": "9770:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9743:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9743:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9752:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9752:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9739:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:17"
																		},
																		"nativeSrc": "9739:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9739:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9764:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9764:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9735:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9735:3:17"
																},
																"nativeSrc": "9735:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9735:32:17"
															},
															"nativeSrc": "9732:52:17",
															"nodeType": "YulIf",
															"src": "9732:52:17"
														},
														{
															"nativeSrc": "9793:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9793:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9812:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9812:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9806:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9806:5:17"
																},
																"nativeSrc": "9806:16:17",
																"nodeType": "YulFunctionCall",
																"src": "9806:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9797:5:17",
																	"nodeType": "YulTypedName",
																	"src": "9797:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9853:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9853:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "9831:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "9831:21:17"
																},
																"nativeSrc": "9831:28:17",
																"nodeType": "YulFunctionCall",
																"src": "9831:28:17"
															},
															"nativeSrc": "9831:28:17",
															"nodeType": "YulExpressionStatement",
															"src": "9831:28:17"
														},
														{
															"nativeSrc": "9868:15:17",
															"nodeType": "YulAssignment",
															"src": "9868:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "9878:5:17",
																"nodeType": "YulIdentifier",
																"src": "9878:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9868:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9868:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9644:245:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9688:9:17",
														"nodeType": "YulTypedName",
														"src": "9688:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9699:7:17",
														"nodeType": "YulTypedName",
														"src": "9699:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9711:6:17",
														"nodeType": "YulTypedName",
														"src": "9711:6:17",
														"type": ""
													}
												],
												"src": "9644:245:17"
											},
											{
												"body": {
													"nativeSrc": "10023:145:17",
													"nodeType": "YulBlock",
													"src": "10023:145:17",
													"statements": [
														{
															"nativeSrc": "10033:26:17",
															"nodeType": "YulAssignment",
															"src": "10033:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10045:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10045:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10056:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10056:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10041:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10041:3:17"
																},
																"nativeSrc": "10041:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10041:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10033:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10033:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10075:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10075:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10090:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10090:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10106:3:17",
																								"nodeType": "YulLiteral",
																								"src": "10106:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10111:1:17",
																								"nodeType": "YulLiteral",
																								"src": "10111:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10102:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "10102:3:17"
																						},
																						"nativeSrc": "10102:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "10102:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10115:1:17",
																						"nodeType": "YulLiteral",
																						"src": "10115:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10098:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10098:3:17"
																				},
																				"nativeSrc": "10098:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10098:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10086:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:17"
																		},
																		"nativeSrc": "10086:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10086:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10068:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10068:6:17"
																},
																"nativeSrc": "10068:51:17",
																"nodeType": "YulFunctionCall",
																"src": "10068:51:17"
															},
															"nativeSrc": "10068:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "10068:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10139:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10139:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10150:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10150:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10135:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10135:3:17"
																		},
																		"nativeSrc": "10135:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10135:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10155:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10128:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:17"
																},
																"nativeSrc": "10128:34:17",
																"nodeType": "YulFunctionCall",
																"src": "10128:34:17"
															},
															"nativeSrc": "10128:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "10128:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9894:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9984:9:17",
														"nodeType": "YulTypedName",
														"src": "9984:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9995:6:17",
														"nodeType": "YulTypedName",
														"src": "9995:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10003:6:17",
														"nodeType": "YulTypedName",
														"src": "10003:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10014:4:17",
														"nodeType": "YulTypedName",
														"src": "10014:4:17",
														"type": ""
													}
												],
												"src": "9894:274:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1484() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        let _2 := 64\n        let offset := calldataload(add(headStart, 64))\n        let _3 := 0xffffffffffffffff\n        if gt(offset, _3) { revert(0, 0) }\n        let _4 := add(headStart, offset)\n        if iszero(slt(add(_4, 0x1f), dataEnd)) { revert(0, 0) }\n        let _5 := calldataload(_4)\n        if gt(_5, _3) { panic_error_0x41() }\n        let dst := allocate_memory(add(shl(5, _5), _1))\n        let dst_1 := dst\n        mstore(dst, _5)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_4, shl(6, _5)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_4, _1)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            if slt(sub(dataEnd, src), _2) { revert(0, 0) }\n            let value_1 := allocate_memory_1484()\n            mstore(value_1, calldataload(src))\n            mstore(add(value_1, _1), calldataload(add(src, _1)))\n            mstore(dst, value_1)\n            dst := add(dst, _1)\n        }\n        value2 := dst_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_184bad15784cb910f263e8e4ee02d49989e8afe6a24679e01122776f1c3e056e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not a provider\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_854b34d0acc5cb8b3bc007af37909df0d1553bdec3cfe89e014c60eb1a0d98c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not a enough money\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d19debe52d26886adbe51c9a9f8f9d015ece4f00223c9099dd110a57b950ab37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ReferenceID does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_uint256_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, 32), value1)\n        let _2 := 64\n        mstore(add(headStart, 64), 96)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let srcPtr := add(value2, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f4f661964a11f432e6b46ac120b6a86a772a05a42a54d1c4deae09f5f0134910__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not a owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f28f12a731de969b49519afdbb2a93e6efb5794c4edab1390cde2eb3409e2d78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already created\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA335A003 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDBDCEBDE GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDBDCEBDE EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xEC10342C EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xEF299B0B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xFB771CB5 EQ PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA335A003 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xB0E0A569 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xB85F4344 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xCAE5EC04 EQ PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48818BDE GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x48818BDE EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x5EA1D6F8 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17E4D1E EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x19FAC8FD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FF6FE76 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x411092E3 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x145 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x388 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x145 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH2 0x229 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x17E JUMP JUMPDEST PUSH2 0x11D PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x3178E1E682D183B22B2C0A13AF9E136C3E9A37B76BD71D47BF24A80710441E8F SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7944CC49DC8637E3CACB75B6261E778F93A87026E0357AE7C3B0E434324AFA35 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x33A PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x9B44827111B30D796166E9F9515E9D6EE25234C008ED7157EC1128263E888728 SWAP1 PUSH1 0x20 ADD PUSH2 0x327 JUMP JUMPDEST PUSH2 0x390 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x399 PUSH0 PUSH2 0xC4E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103090383937BB34B232B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F74206120656E6F756768206D6F6E6579 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6FB JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265666572656E6365494420646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F8A0F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F8A0F83 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH3 0xCD011 PUSH1 0xE4 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH3 0xCD0110 SWAP2 PUSH2 0x5DF SWAP2 DUP7 SWAP1 PUSH1 0x4 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1398FEE1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x9CC7F708 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68A SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x698 DUP7 DUP6 PUSH2 0xC9D JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH0 PUSH2 0x6A8 DUP10 DUP6 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6C6 DUP6 PUSH2 0x6BE DUP4 DUP6 PUSH2 0x100D JUMP JUMPDEST DUP10 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST POP PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x6D7 DUP8 DUP7 DUP4 PUSH2 0xCBA JUMP JUMPDEST POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x535 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x44D SWAP2 POP POP JUMP JUMPDEST POP PUSH32 0x74ABD6F2BB39B1EB84983E4E8DF1378DA42D32F24A5C984B6D1456BFD24F8CB9 PUSH1 0x4 SLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x731 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x748 DUP4 PUSH2 0x1081 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 SWAP1 POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2737BA10309037BBB732B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD3FC0AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DC99585D1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x9B8 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x156E29F6 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA786C18B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x9B0 SWAP1 PUSH2 0x1081 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CC JUMP JUMPDEST POP DUP4 PUSH1 0x6 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD3FC0AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH32 0x3DEEFFCA3C86A528758B0FF95B46B531E03BE332BF88CB7E2C7B0B8DAA608C31 DUP5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD3FC0AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x10B4 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBAA SWAP1 DUP5 SWAP1 PUSH2 0x100D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB9A1BFFB5AD7FCAEB79FE2262EE61BC2B44689DF94BB558F7E70EAC20CBD0A05 SWAP2 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xBED PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0xC1F DUP2 PUSH2 0xC4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP1 PUSH2 0xCAB DUP7 DUP7 PUSH2 0xCCE JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC6 DUP5 DUP5 DUP5 PUSH2 0xD06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0xCFB JUMPI PUSH2 0xCEF DUP6 DUP6 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP PUSH2 0xCB3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0xCB3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0xCC6 DUP5 DUP5 PUSH2 0xD36 JUMP JUMPDEST PUSH0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0xD58 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD2D JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD9D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xD30 JUMP JUMPDEST POP PUSH0 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC1F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDE1 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xDF1 DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE23 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE2E DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE6C JUMPI PUSH2 0xE6C PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xEC0 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 DUP2 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP1 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF0A PUSH2 0xE35 JUMP JUMPDEST PUSH2 0xF18 DUP6 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xE72 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 DUP2 ADD SWAP3 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP6 ADD SWAP1 DUP11 DUP3 GT ISZERO PUSH2 0xF37 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xF75 JUMPI DUP5 DUP5 DUP13 SUB SLT ISZERO PUSH2 0xF52 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF5A PUSH2 0xE49 JUMP JUMPDEST DUP5 CALLDATALOAD DUP2 MSTORE DUP7 DUP6 ADD CALLDATALOAD DUP8 DUP3 ADD MSTORE DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH2 0xF3C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xFA2 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0xFE2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0xFE2 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x60 PUSH1 0x40 DUP7 ADD MSTORE DUP3 DUP7 MLOAD DUP1 DUP6 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 POP PUSH1 0x20 DUP9 ADD SWAP5 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1072 JUMPI DUP6 MLOAD DUP1 MLOAD DUP5 MSTORE DUP6 ADD MLOAD DUP6 DUP5 ADD MSTORE SWAP5 DUP5 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x104D JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1092 JUMPI PUSH2 0x1092 PUSH2 0xFE2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE2E DUP2 PUSH2 0xDA4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE2E DUP2 PUSH2 0xDB8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xB0 SWAP10 0x24 SWAP6 0xCC DUP7 PUSH18 0x1C6530A61F7F02AF6EDDB0C7769F384EFC7F 0xC3 0xC2 0xBA ISZERO PUSH24 0x8E64736F6C63430008160033000000000000000000000000 ",
							"sourceMap": "368:4287:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4464:189;;;;;;:::i;:::-;;:::i;:::-;;4164:150;;;;;;:::i;:::-;;:::i;547:25::-;;;;;-1:-1:-1;;;;;547:25:16;;;;;;-1:-1:-1;;;;;1009:32:17;;;991:51;;979:2;964:18;547:25:16;;;;;;;;4320:138;;;;;;:::i;:::-;;:::i;675:28::-;;;;;;;;;1451:25:17;;;1439:2;1424:18;675:28:16;1305:177:17;624:29:16;;;;;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;790:51:16;;;;;;:::i;:::-;;;;;;;;;;;;;;738:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;738:45:16;;;2375:1408;;;;;;:::i;:::-;;:::i;847:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3718:14:17;;3711:22;3693:41;;3681:2;3666:18;847:48:16;3553:187:17;1753:616:16;;;;;;:::i;:::-;;:::i;3789:93::-;3862:13;;3789:93;;3888:270;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;709:22:16:-;;;;;;4464:189;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4552:26:16;::::1;;::::0;;;:16:::1;:26;::::0;;;;;;;;:37;;-1:-1:-1;;4552:37:16::1;::::0;::::1;;::::0;;::::1;::::0;;;4604:42;;4301:51:17;;;4368:18;;;4361:50;4604:42:16::1;::::0;4274:18:17;4604:42:16::1;;;;;;;;4464:189:::0;;:::o;4164:150::-;1531:13:0;:11;:13::i;:::-;4236:14:16::1;:25:::0;;;4276:31:::1;::::0;1451:25:17;;;4276:31:16::1;::::0;1439:2:17;1424:18;4276:31:16::1;;;;;;;;4164:150:::0;:::o;4320:138::-;1531:13:0;:11;:13::i;:::-;4388:10:16::1;:21:::0;;-1:-1:-1;;;;;;4388:21:16::1;-1:-1:-1::0;;;;;4388:21:16;::::1;::::0;;::::1;::::0;;;4424:27:::1;::::0;991:51:17;;;4424:27:16::1;::::0;979:2:17;964:18;4424:27:16::1;845:203:17::0;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2375:1408:16:-;735:10:2;2480:30:16;;;;:16;:30;;;;;;;;2472:57;;;;-1:-1:-1;;;2472:57:16;;4624:2:17;2472:57:16;;;4606:21:17;4663:2;4643:18;;;4636:30;-1:-1:-1;;;4682:18:17;;;4675:44;4736:18;;2472:57:16;;;;;;;;;-1:-1:-1;;;;;2556:27:16;;;;;;:16;:27;;;;;;2547:36;;;2539:67;;;;-1:-1:-1;;;2539:67:16;;4967:2:17;2539:67:16;;;4949:21:17;5006:2;4986:18;;;4979:30;-1:-1:-1;;;5025:18:17;;;5018:48;5083:18;;2539:67:16;4765:342:17;2539:67:16;2622:9;2617:1073;2641:8;:15;2637:1;:19;2617:1073;;;2678:20;2701:10;:36;2712:8;2721:1;2712:11;;;;;;;;:::i;:::-;;;;;;;:24;;;2701:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2701:36:16;2678:59;;2751:25;2779:8;2788:1;2779:11;;;;;;;;:::i;:::-;;;;;;;:28;;;2751:56;;2854:1;-1:-1:-1;;;;;2830:26:16;:12;-1:-1:-1;;;;;2830:26:16;;2822:65;;;;-1:-1:-1;;;2822:65:16;;5446:2:17;2822:65:16;;;5428:21:17;5485:2;5465:18;;;5458:30;5524:28;5504:18;;;5497:56;5570:18;;2822:65:16;5244:350:17;2822:65:16;-1:-1:-1;;;;;3003:30:16;;2902:14;3003:30;;;:16;:30;;;;;2924:12;;3048:619;3100:7;;3072:36;;-1:-1:-1;;;3072:36:16;;;;;1451:25:17;;;;-1:-1:-1;;;;;3072:27:16;;;;;1424:18:17;;3072:36:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3068:1;:40;3048:619;;;3186:7;;3157:39;;-1:-1:-1;;;3157:39:16;;3133:21;;-1:-1:-1;;;;;3157:28:16;;;;;:39;;3194:1;;3157:39;;5962:25:17;;;6018:2;6003:18;;5996:34;5950:2;5935:18;;5788:248;3157:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3236:34;;-1:-1:-1;;;3236:34:16;;;;;1451:25:17;;;3133:63:16;;-1:-1:-1;3214:19:16;;-1:-1:-1;;;;;3236:19:16;;;;;1424:18:17;;3236:34:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3214:56;-1:-1:-1;3289:17:16;;3331:34;:12;3351:13;3331:19;:34::i;:::-;3288:77;;-1:-1:-1;3288:77:16;-1:-1:-1;3383:16:16;3402:31;3416:17;3402:11;:31;:::i;:::-;3383:50;;3455:12;3451:202;;;3491:55;3508:13;3523:22;3537:8;3523:11;:22;:::i;:::-;3491:12;;:55;:16;:55::i;:::-;;3451:202;;;3593:41;:12;3610:13;3625:8;3593:16;:41::i;:::-;;3451:202;-1:-1:-1;;3110:3:16;;;;;-1:-1:-1;3048:619:16;;-1:-1:-1;;3048:619:16;;-1:-1:-1;;2658:3:16;;;;;-1:-1:-1;2617:1073:16;;-1:-1:-1;;2617:1073:16;;;3705:45;3716:13;;3731:7;3741:8;3705:45;;;;;;;;:::i;:::-;;;;;;;;3761:13;:15;;;:13;:15;;;:::i;:::-;;;;;;2375:1408;;;:::o;1753:616::-;1854:14;1876:11;1854:34;;1935:4;-1:-1:-1;;;;;1906:34:16;:9;-1:-1:-1;;;;;1906:15:16;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1906:34:16;;1898:58;;;;-1:-1:-1;;;1898:58:16;;8010:2:17;1898:58:16;;;7992:21:17;8049:2;8029:18;;;8022:30;-1:-1:-1;;;8068:18:17;;;8061:41;8119:18;;1898:58:16;7808:335:17;1898:58:16;2030:1;-1:-1:-1;;;;;1974:58:16;:10;:44;1985:9;-1:-1:-1;;;;;1985:30:16;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1974:44;;;;;;;;;;;-1:-1:-1;1974:44:16;;-1:-1:-1;;;;;1974:44:16;:58;1966:86;;;;-1:-1:-1;;;1966:86:16;;8350:2:17;1966:86:16;;;8332:21:17;8389:2;8369:18;;;8362:30;-1:-1:-1;;;8408:18:17;;;8401:45;8463:18;;1966:86:16;8148:339:17;1966:86:16;2080:1;2063:131;2088:12;2083:1;:17;2063:131;;2121:9;-1:-1:-1;;;;;2121:14:16;;2136:9;-1:-1:-1;;;;;2136:23:16;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:7;;2121:62;;-1:-1:-1;;;;;;2121:62:16;;;;;;;-1:-1:-1;;;;;8712:32:17;;;2121:62:16;;;8694:51:17;8761:18;;;8754:34;8804:18;;;8797:34;;;8667:18;;2121:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:3;;;;;:::i;:::-;;;;2063:131;;;;2250:11;2203:10;:44;2214:9;-1:-1:-1;;;;;2214:30:16;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2203:44;;;;;;;;;;;;:58;;;;;-1:-1:-1;;;;;2203:58:16;;;;;-1:-1:-1;;;;;2203:58:16;;;;;;2277:85;2290:11;2303:10;2315:12;2329:9;-1:-1:-1;;;;;2329:30:16;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2277:85;;;-1:-1:-1;;;;;9091:32:17;;;9073:51;;9155:2;9140:18;;9133:34;;;;9183:18;;;9176:34;9241:2;9226:18;;9219:34;9060:3;9045:19;2277:85:16;;;;;;;1844:525;1753:616;;;:::o;3888:270::-;3962:10;;-1:-1:-1;;;;;3962:10:16;;3983:18;735:10:2;3983:56:16;;-1:-1:-1;;;;;;3983:56:16;;;;;;;-1:-1:-1;;;;;9522:15:17;;;3983:56:16;;;9504:34:17;4024:4:16;9554:18:17;;;9547:43;9606:18;;;9599:34;;;9439:18;;3983:56:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;735:10:2;4049:30:16;;;;:16;:30;;;;;:41;;4083:7;;4049:30;:41;;4083:7;;4049:41;:::i;:::-;;;;-1:-1:-1;;4105:46:16;;;735:10:2;10068:51:17;;10150:2;10135:18;;10128:34;;;4105:46:16;;10041:18:17;4105:46:16;9894:274:17;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;991:51:17::0;964:18;;2672:31:0::1;845:203:17::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;991:51:17;964:18;;1901:40:0;845:203:17;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;7566:217:8:-;7645:4;;;;7702:32;7709:3;7729;7702:6;:32::i;:::-;7670:64;;-1:-1:-1;7670:64:8;-1:-1:-1;;;7566:217:8;;;;;;:::o;5997:161::-;6083:4;6106:45;6110:3;6130;6144:5;6106:3;:45::i;:::-;6099:52;5997:161;-1:-1:-1;;;;5997:161:8:o;4275:298::-;4360:4;4401:16;;;:11;;;:16;;;;;;4360:4;;4401:16;4427:140;;4474:18;4483:3;4488;4474:8;:18::i;:::-;4466:39;-1:-1:-1;4502:1:8;;-1:-1:-1;4466:39:8;;-1:-1:-1;4466:39:8;4427:140;4544:4;;-1:-1:-1;4550:5:8;-1:-1:-1;4536:20:8;;2652:174;2744:4;2760:16;;;:11;;;:16;;;;;:24;;;2801:18;2760:3;2772;2801:13;:18::i;3237:140::-;3324:4;3347:23;:3;3366;3347:18;:23::i;:::-;3340:30;;3237:140;;;;;:::o;5930:123:9:-;6000:4;6023:23;6028:3;6040:5;6023:4;:23::i;6431:138::-;6511:4;4360:21;;;:14;;;:21;;;;;;:26;;6534:28;4264:129;2241:406;2304:4;4360:21;;;:14;;;:21;;;;;;2320:321;;-1:-1:-1;2362:23:9;;;;;;;;:11;:23;;;;;;;;;;;;;2544:18;;2520:21;;;:14;;;:21;;;;;;:42;;;;2576:11;;2320:321;-1:-1:-1;2625:5:9;2618:12;;14:131:17;-1:-1:-1;;;;;89:31:17;;79:42;;69:70;;135:1;132;125:12;150:118;236:5;229:13;222:21;215:5;212:32;202:60;;258:1;255;248:12;273:382;338:6;346;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;454:9;441:23;473:31;498:5;473:31;:::i;:::-;523:5;-1:-1:-1;580:2:17;565:18;;552:32;593:30;552:32;593:30;:::i;:::-;642:7;632:17;;;273:382;;;;;:::o;660:180::-;719:6;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;-1:-1:-1;811:23:17;;660:180;-1:-1:-1;660:180:17:o;1053:247::-;1112:6;1165:2;1153:9;1144:7;1140:23;1136:32;1133:52;;;1181:1;1178;1171:12;1133:52;1220:9;1207:23;1239:31;1264:5;1239:31;:::i;:::-;1289:5;1053:247;-1:-1:-1;;;1053:247:17:o;1487:127::-;1548:10;1543:3;1539:20;1536:1;1529:31;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:251;1691:2;1685:9;;;1721:15;;1766:18;1751:34;;1787:22;;;1748:62;1745:88;;;1813:18;;:::i;:::-;1849:2;1842:22;1619:251;:::o;1875:275::-;1946:2;1940:9;2011:2;1992:13;;-1:-1:-1;;1988:27:17;1976:40;;2046:18;2031:34;;2067:22;;;2028:62;2025:88;;;2093:18;;:::i;:::-;2129:2;2122:22;1875:275;;-1:-1:-1;1875:275:17:o;2155:1393::-;2282:6;2290;2298;2351:2;2339:9;2330:7;2326:23;2322:32;2319:52;;;2367:1;2364;2357:12;2319:52;2406:9;2393:23;2425:31;2450:5;2425:31;:::i;:::-;2475:5;-1:-1:-1;2499:2:17;2533:18;;;2520:32;;-1:-1:-1;2571:2:17;2609:18;;;2596:32;2647:18;2677:14;;;2674:34;;;2704:1;2701;2694:12;2674:34;2742:6;2731:9;2727:22;2717:32;;2787:7;2780:4;2776:2;2772:13;2768:27;2758:55;;2809:1;2806;2799:12;2758:55;2845:2;2832:16;2867:2;2863;2860:10;2857:36;;;2873:18;;:::i;:::-;2913:36;2945:2;2940;2937:1;2933:10;2929:19;2913:36;:::i;:::-;2983:15;;;3014:12;;;;-1:-1:-1;3065:1:17;3061:10;;;;3053:19;;3049:28;;;3089:19;;;3086:39;;;3121:1;3118;3111:12;3086:39;3145:11;;;;3165:353;3181:6;3176:3;3173:15;3165:353;;;3261:2;3255:3;3246:7;3242:17;3238:26;3235:46;;;3277:1;3274;3267:12;3235:46;3309:22;;:::i;:::-;3360:17;;3344:34;;3429:12;;;3416:26;3398:16;;;3391:52;3456:20;;3198:12;;;;3496;;;;3165:353;;;3537:5;3527:15;;;;;;;;2155:1393;;;;;:::o;3745:383::-;3822:6;3830;3838;3891:2;3879:9;3870:7;3866:23;3862:32;3859:52;;;3907:1;3904;3897:12;3859:52;3946:9;3933:23;3965:31;3990:5;3965:31;:::i;:::-;4015:5;4067:2;4052:18;;4039:32;;-1:-1:-1;4118:2:17;4103:18;;;4090:32;;3745:383;-1:-1:-1;;;3745:383:17:o;5112:127::-;5173:10;5168:3;5164:20;5161:1;5154:31;5204:4;5201:1;5194:15;5228:4;5225:1;5218:15;5599:184;5669:6;5722:2;5710:9;5701:7;5697:23;5693:32;5690:52;;;5738:1;5735;5728:12;5690:52;-1:-1:-1;5761:16:17;;5599:184;-1:-1:-1;5599:184:17:o;6041:127::-;6102:10;6097:3;6093:20;6090:1;6083:31;6133:4;6130:1;6123:15;6157:4;6154:1;6147:15;6173:168;6246:9;;;6277;;6294:15;;;6288:22;;6274:37;6264:71;;6315:18;;:::i;6346:125::-;6411:9;;;6432:10;;;6429:36;;;6445:18;;:::i;6476:931::-;6724:4;6772:2;6761:9;6757:18;6802:6;6791:9;6784:25;6828:2;6866:6;6861:2;6850:9;6846:18;6839:34;6892:2;6930;6925;6914:9;6910:18;6903:30;6953:6;6988;6982:13;7019:6;7011;7004:22;7057:3;7046:9;7042:19;7035:26;;7096:2;7088:6;7084:15;7070:29;;7117:1;7127:254;7141:6;7138:1;7135:13;7127:254;;;7200:13;;7238:9;;7226:22;;7288:11;;7282:18;7268:12;;;7261:40;7356:15;;;;7321:12;;;;7163:1;7156:9;7127:254;;;-1:-1:-1;7398:3:17;;6476:931;-1:-1:-1;;;;;;;;;6476:931:17:o;7412:135::-;7451:3;7472:17;;;7469:43;;7492:18;;:::i;:::-;-1:-1:-1;7539:1:17;7528:13;;7412:135::o;7552:251::-;7622:6;7675:2;7663:9;7654:7;7650:23;7646:32;7643:52;;;7691:1;7688;7681:12;7643:52;7723:9;7717:16;7742:31;7767:5;7742:31;:::i;9644:245::-;9711:6;9764:2;9752:9;9743:7;9739:23;9735:32;9732:52;;;9780:1;9777;9770:12;9732:52;9812:9;9806:16;9831:28;9853:5;9831:28;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "871400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_lastConsumeID()": "2335",
								"commissionRate()": "2339",
								"consume(address,uint256,(uint256,uint256)[])": "infinite",
								"consumer_balance(address)": "2533",
								"createToken(address,uint256,uint256)": "infinite",
								"lastConsumeID()": "2317",
								"owner()": "2407",
								"priceToken()": "2393",
								"recharge(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"service_provider(address)": "2611",
								"setCommissionRate(uint256)": "25597",
								"setPriceToken(address)": "27881",
								"setServiceProvider(address,bool)": "infinite",
								"sftSlot()": "2404",
								"sft_assets(uint256)": "2508",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1514,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1514,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1602,
									"end": 1614,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 701,
									"end": 752,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 674,
									"end": 692,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 674,
									"end": 692,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1636,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1626,
									"end": 1650,
									"modifierDepth": 1,
									"name": "AND",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"modifierDepth": 1,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"modifierDepth": 1,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1650,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 1660,
									"end": 1674,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1660,
									"end": 1692,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 1702,
									"end": 1715,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1702,
									"end": 1719,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1702,
									"end": 1719,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1702,
									"end": 1719,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 1729,
									"end": 1736,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1729,
									"end": 1740,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 550,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 525,
									"end": 543,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 519,
									"end": 544,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 509,
									"end": 544,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 509,
									"end": 544,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 196,
									"end": 550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 555,
									"end": 758,
									"name": "tag",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 758,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 4655,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4b0992495cc86711c6530a61f7f02af6eddb0c7769f384efc7fc3c2ba15778e64736f6c63430008160033",
									".code": [
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "A335A003"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "DBDCEBDE"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "DBDCEBDE"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "EC10342C"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "EF299B0B"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "FB771CB5"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "A335A003"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "B0E0A569"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "B85F4344"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "CAE5EC04"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "48818BDE"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "48818BDE"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "5EA1D6F8"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "17E4D1E"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "19FAC8FD"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "2FF6FE76"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "411092E3"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 368,
											"end": 4655,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 4464,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 4464,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 4164,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 4164,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 547,
											"end": 572,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 547,
											"end": 572,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 547,
											"end": 572,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 4320,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 4320,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 675,
											"end": 703,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 675,
											"end": 703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 675,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 675,
											"end": 703,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 703,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 675,
											"end": 703,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 675,
											"end": 703,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 675,
											"end": 703,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 675,
											"end": 703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 675,
											"end": 703,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 703,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 675,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1305,
											"end": 1482,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 624,
											"end": 653,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 624,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 624,
											"end": 653,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 624,
											"end": 653,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 624,
											"end": 653,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 624,
											"end": 653,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 790,
											"end": 841,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 790,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 841,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 790,
											"end": 841,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 738,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 738,
											"end": 783,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 738,
											"end": 783,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 2375,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 2375,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 847,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 895,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3732,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3718,
											"end": 3732,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3711,
											"end": 3733,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3734,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3684,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 847,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 3553,
											"end": 3740,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 1753,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "tag",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 1753,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3875,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3862,
											"end": 3875,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 3888,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 3888,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 731,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 709,
											"end": 731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 709,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 709,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 709,
											"end": 731,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 709,
											"end": 731,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 709,
											"end": 731,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 4552,
											"end": 4578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4589,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4301,
											"end": 4352,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4301,
											"end": 4352,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4301,
											"end": 4352,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4361,
											"end": 4411,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3178E1E682D183B22B2C0A13AF9E136C3E9A37B76BD71D47BF24A80710441E8F"
										},
										{
											"begin": 4604,
											"end": 4646,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4646,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 4236,
											"end": 4261,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4236,
											"end": 4261,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4236,
											"end": 4261,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4307,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "7944CC49DC8637E3CACB75B6261E778F93A87026E0357AE7C3B0E434324AFA35"
										},
										{
											"begin": 4276,
											"end": 4307,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4307,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4164,
											"end": 4314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 4320,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4388,
											"end": 4409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4424,
											"end": 4451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4424,
											"end": 4451,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4424,
											"end": 4451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9B44827111B30D796166E9F9515E9D6EE25234C008ED7157EC1128263E888728"
										},
										{
											"begin": 4424,
											"end": 4451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4424,
											"end": 4451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 845,
											"end": 1048,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2480,
											"end": 2510,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4624,
											"end": 4626,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4606,
											"end": 4627,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 4665,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4636,
											"end": 4666,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103090383937BB34B232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4675,
											"end": 4719,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 2472,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2572,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2556,
											"end": 2583,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2583,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2583,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2583,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4967,
											"end": 4969,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4949,
											"end": 4970,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4979,
											"end": 5009,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F74206120656E6F756768206D6F6E6579"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5018,
											"end": 5066,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 4765,
											"end": 5107,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2641,
											"end": 2649,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2637,
											"end": 2656,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2678,
											"end": 2698,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2720,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 2712,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "tag",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2678,
											"end": 2737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2678,
											"end": 2737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2787,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 2779,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2751,
											"end": 2807,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2751,
											"end": 2807,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5485,
											"end": 5487,
											"name": "PUSH",
											"source": 17,
											"value": "1A"
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5458,
											"end": 5488,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "PUSH",
											"source": 17,
											"value": "5265666572656E6365494420646F6573206E6F74206578697374000000000000"
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5497,
											"end": 5553,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 5244,
											"end": 5594,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2822,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2902,
											"end": 2916,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3003,
											"end": 3033,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2924,
											"end": 2936,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2924,
											"end": 2936,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3107,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 3100,
											"end": 3107,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F8A0F83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "PUSH",
											"source": 16,
											"value": "4F8A0F83"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 3072,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 3072,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3068,
											"end": 3108,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD011"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3185,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3185,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3185,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3185,
											"name": "PUSH",
											"source": 16,
											"value": "CD0110"
										},
										{
											"begin": 3157,
											"end": 3185,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5788,
											"end": 6036,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 3157,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1398FEE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3196,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3214,
											"end": 3233,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3233,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3255,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3255,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3255,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3255,
											"name": "PUSH",
											"source": 16,
											"value": "9CC7F708"
										},
										{
											"begin": 3236,
											"end": 3255,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 3236,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 3236,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3214,
											"end": 3270,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3289,
											"end": 3306,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3306,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3331,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 3331,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3365,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3365,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3365,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 3402,
											"end": 3413,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3402,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 3402,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3402,
											"end": 3433,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 3402,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3383,
											"end": 3433,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3383,
											"end": 3433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 3537,
											"end": 3545,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3534,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 3523,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3546,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 3491,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3546,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 3491,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3491,
											"end": 3546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3593,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 3593,
											"end": 3605,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3623,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3625,
											"end": 3633,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3593,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 3593,
											"end": 3634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3593,
											"end": 3634,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 3593,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3593,
											"end": 3634,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 3451,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3113,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3110,
											"end": 3113,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3110,
											"end": 3113,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3110,
											"end": 3113,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3110,
											"end": 3113,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "tag",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 3048,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2617,
											"end": 3690,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "PUSH",
											"source": 16,
											"value": "74ABD6F2BB39B1EB84983E4E8DF1378DA42D32F24A5C984B6D1456BFD24F8CB9"
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3741,
											"end": 3749,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 3705,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3774,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3774,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 3761,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "tag",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 3783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1888,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1940,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1921,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1921,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "tag",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 1906,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1940,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1940,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7992,
											"end": 8013,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8049,
											"end": 8051,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8022,
											"end": 8052,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA10309037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8061,
											"end": 8102,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 7808,
											"end": 8143,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1898,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1974,
											"end": 2032,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 1984,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1994,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 2015,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2015,
											"name": "PUSH",
											"source": 16,
											"value": "DD3FC0AB"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "tag",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 1985,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 1985,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1974,
											"end": 2018,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1974,
											"end": 2032,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "167"
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8350,
											"end": 8352,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8332,
											"end": 8353,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 17,
											"value": "F"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E4818DC99585D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8401,
											"end": 8446,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8463,
											"end": 8481,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8463,
											"end": 8481,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 8148,
											"end": 8487,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "tag",
											"source": 16,
											"value": "167"
										},
										{
											"begin": 1966,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2083,
											"end": 2100,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "156E29F6"
										},
										{
											"begin": 2136,
											"end": 2145,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "PUSH",
											"source": 16,
											"value": "A786C18B"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 2136,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 2136,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8712,
											"end": 8744,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8712,
											"end": 8744,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8712,
											"end": 8744,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8694,
											"end": 8745,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8754,
											"end": 8788,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8804,
											"end": 8822,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8804,
											"end": 8822,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8804,
											"end": 8822,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8797,
											"end": 8831,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8797,
											"end": 8831,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8797,
											"end": 8831,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8667,
											"end": 8685,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8667,
											"end": 8685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "tag",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 2102,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "tag",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2063,
											"end": 2194,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2213,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2223,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2214,
											"end": 2244,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2244,
											"name": "PUSH",
											"source": 16,
											"value": "DD3FC0AB"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 2214,
											"end": 2246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "tag",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "PUSH",
											"source": 16,
											"value": "3DEEFFCA3C86A528758B0FF95B46B531E03BE332BF88CB7E2C7B0B8DAA608C31"
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2303,
											"end": 2313,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2359,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2359,
											"name": "PUSH",
											"source": 16,
											"value": "DD3FC0AB"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 2329,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "tag",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9091,
											"end": 9123,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9091,
											"end": 9123,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 9091,
											"end": 9123,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9073,
											"end": 9124,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9073,
											"end": 9124,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9157,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9241,
											"end": 9243,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9219,
											"end": 9253,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9060,
											"end": 9063,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9045,
											"end": 9064,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2277,
											"end": 2362,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 1844,
											"end": 2369,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 3888,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3962,
											"end": 3972,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3962,
											"end": 3972,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3962,
											"end": 3972,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3962,
											"end": 3972,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9537,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9522,
											"end": 9537,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9522,
											"end": 9537,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9504,
											"end": 9538,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9590,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9599,
											"end": 9633,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9599,
											"end": 9633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9599,
											"end": 9633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 3983,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3983,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4065,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 4049,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4090,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4105,
											"end": 4151,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4151,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4105,
											"end": 4151,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10068,
											"end": 10119,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10068,
											"end": 10119,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10150,
											"end": 10152,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4105,
											"end": 4151,
											"name": "PUSH",
											"source": 16,
											"value": "B9A1BFFB5AD7FCAEB79FE2262EE61BC2B44689DF94BB558F7E70EAC20CBD0A05"
										},
										{
											"begin": 4105,
											"end": 4151,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4105,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 9894,
											"end": 10168,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 964,
											"end": 982,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 845,
											"end": 1048,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1042,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 964,
											"end": 982,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 845,
											"end": 1048,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7709,
											"end": 7712,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7702,
											"end": 7734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7734,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7702,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7670,
											"end": 7734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7670,
											"end": 7734,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7670,
											"end": 7734,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 6110,
											"end": 6113,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6133,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6149,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6106,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6106,
											"end": 6151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6106,
											"end": 6151,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 6106,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6151,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4573,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4275,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4412,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4401,
											"end": 4412,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4427,
											"end": 4567,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4483,
											"end": 4486,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4488,
											"end": 4491,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4474,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4505,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4466,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4466,
											"end": 4505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4466,
											"end": 4505,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4567,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4427,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4544,
											"end": 4548,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4550,
											"end": 4555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2826,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2652,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2760,
											"end": 2763,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2801,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3347,
											"end": 3350,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3347,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 6053,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5930,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6028,
											"end": 6031,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6045,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6023,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6569,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6431,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6534,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 150,
											"end": 268,
											"name": "tag",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 150,
											"end": 268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 236,
											"end": 241,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 229,
											"end": 242,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 222,
											"end": 243,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 215,
											"end": 220,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 212,
											"end": 244,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 202,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 202,
											"end": 262,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 258,
											"end": 259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 256,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 248,
											"end": 260,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 273,
											"end": 655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 338,
											"end": 344,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 399,
											"end": 401,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 396,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 378,
											"end": 385,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 374,
											"end": 397,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 370,
											"end": 402,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 367,
											"end": 419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 367,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 367,
											"end": 419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 415,
											"end": 416,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 405,
											"end": 417,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 367,
											"end": 419,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 367,
											"end": 419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 441,
											"end": 464,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 473,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 473,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 473,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 473,
											"end": 504,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 473,
											"end": 504,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 523,
											"end": 528,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 580,
											"end": 582,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 583,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 565,
											"end": 583,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 552,
											"end": 584,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 593,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 552,
											"end": 584,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 593,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 593,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 593,
											"end": 623,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 593,
											"end": 623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 642,
											"end": 649,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 632,
											"end": 649,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 632,
											"end": 649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 632,
											"end": 649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 273,
											"end": 655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 660,
											"end": 840,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 660,
											"end": 840,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 719,
											"end": 725,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 769,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 751,
											"end": 758,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 747,
											"end": 770,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 743,
											"end": 775,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 740,
											"end": 792,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 740,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 740,
											"end": 792,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 786,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 778,
											"end": 790,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 740,
											"end": 792,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 740,
											"end": 792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 811,
											"end": 834,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 811,
											"end": 834,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 660,
											"end": 840,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 660,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1053,
											"end": 1300,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1053,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1167,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1144,
											"end": 1151,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1140,
											"end": 1163,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1136,
											"end": 1168,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1133,
											"end": 1185,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1133,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 1133,
											"end": 1185,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1181,
											"end": 1182,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1171,
											"end": 1183,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1133,
											"end": 1185,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 1133,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 1264,
											"end": 1269,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 1239,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1294,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1053,
											"end": 1300,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1614,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 1487,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1548,
											"end": 1558,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1539,
											"end": 1559,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1560,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1584,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1603,
											"end": 1607,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1600,
											"end": 1601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1619,
											"end": 1870,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 1619,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1691,
											"end": 1693,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1721,
											"end": 1736,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1721,
											"end": 1736,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1766,
											"end": 1784,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1748,
											"end": 1810,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1745,
											"end": 1833,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1745,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 1745,
											"end": 1833,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 1813,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1619,
											"end": 1870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1619,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1875,
											"end": 2150,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 1875,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2005,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1992,
											"end": 2005,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1976,
											"end": 2016,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1976,
											"end": 2016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2065,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2031,
											"end": 2065,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2067,
											"end": 2089,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2067,
											"end": 2089,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2067,
											"end": 2089,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2028,
											"end": 2090,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2113,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 2025,
											"end": 2113,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 2093,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2144,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1875,
											"end": 2150,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1875,
											"end": 2150,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 2150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2298,
											"end": 2304,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2353,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2326,
											"end": 2349,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2354,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2406,
											"end": 2415,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2393,
											"end": 2416,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 2425,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2456,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2425,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2571,
											"end": 2573,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2628,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2677,
											"end": 2691,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2691,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2691,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2749,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2758,
											"end": 2813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2813,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2758,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2832,
											"end": 2848,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 2873,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2933,
											"end": 2943,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2929,
											"end": 2948,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 2913,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2983,
											"end": 2998,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2983,
											"end": 2998,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2983,
											"end": 2998,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3014,
											"end": 3026,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3014,
											"end": 3026,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3014,
											"end": 3026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3014,
											"end": 3026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3053,
											"end": 3072,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3053,
											"end": 3072,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3049,
											"end": 3077,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3049,
											"end": 3077,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3049,
											"end": 3077,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3089,
											"end": 3108,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3089,
											"end": 3108,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3089,
											"end": 3108,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3086,
											"end": 3125,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3086,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 3086,
											"end": 3125,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3123,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3086,
											"end": 3125,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 3086,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3156,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3156,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3156,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3156,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3181,
											"end": 3187,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3176,
											"end": 3179,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3255,
											"end": 3258,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3238,
											"end": 3264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3235,
											"end": 3281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3235,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3235,
											"end": 3281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3235,
											"end": 3281,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3235,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3309,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3377,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3377,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3344,
											"end": 3378,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3344,
											"end": 3378,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3429,
											"end": 3441,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3429,
											"end": 3441,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3429,
											"end": 3441,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3416,
											"end": 3442,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3508,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3508,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3508,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3508,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 3165,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3537,
											"end": 3542,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 3548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3745,
											"end": 4128,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 3745,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3836,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3893,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3870,
											"end": 3877,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3866,
											"end": 3889,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3862,
											"end": 3894,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3897,
											"end": 3909,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "tag",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3933,
											"end": 3956,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3965,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3990,
											"end": 3995,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3965,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 3965,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3965,
											"end": 3996,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3965,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4039,
											"end": 4071,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4039,
											"end": 4071,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4120,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4090,
											"end": 4122,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4090,
											"end": 4122,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3745,
											"end": 4128,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3745,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5112,
											"end": 5239,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 5112,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5183,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5168,
											"end": 5171,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5164,
											"end": 5184,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5185,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 5201,
											"end": 5202,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5194,
											"end": 5209,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5228,
											"end": 5232,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5225,
											"end": 5226,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5233,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5599,
											"end": 5783,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 5599,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5710,
											"end": 5719,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5701,
											"end": 5708,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5697,
											"end": 5720,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5693,
											"end": 5725,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5690,
											"end": 5742,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5690,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 5690,
											"end": 5742,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5736,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5728,
											"end": 5740,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5690,
											"end": 5742,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 5690,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5777,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5761,
											"end": 5777,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5599,
											"end": 5783,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6168,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 6041,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 6097,
											"end": 6100,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 6093,
											"end": 6113,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6114,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 6130,
											"end": 6131,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6123,
											"end": 6138,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6173,
											"end": 6341,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 6173,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6288,
											"end": 6310,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6288,
											"end": 6310,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6264,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 6264,
											"end": 6335,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 6315,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6346,
											"end": 6471,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 6346,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6432,
											"end": 6442,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6432,
											"end": 6442,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6432,
											"end": 6442,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6429,
											"end": 6465,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6429,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 6429,
											"end": 6465,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 6445,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6476,
											"end": 7407,
											"name": "tag",
											"source": 17,
											"value": "153"
										},
										{
											"begin": 6476,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6774,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6757,
											"end": 6775,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6784,
											"end": 6809,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6839,
											"end": 6873,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6932,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6903,
											"end": 6933,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6953,
											"end": 6959,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6988,
											"end": 6994,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7011,
											"end": 7017,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7004,
											"end": 7026,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7057,
											"end": 7060,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7046,
											"end": 7055,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7035,
											"end": 7061,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7035,
											"end": 7061,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7096,
											"end": 7098,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7070,
											"end": 7099,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7070,
											"end": 7099,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7135,
											"end": 7148,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7200,
											"end": 7213,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7200,
											"end": 7213,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7226,
											"end": 7248,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7226,
											"end": 7248,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7288,
											"end": 7299,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7288,
											"end": 7299,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7261,
											"end": 7301,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7356,
											"end": 7371,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7356,
											"end": 7371,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7356,
											"end": 7371,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7356,
											"end": 7371,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7156,
											"end": 7165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 7127,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7401,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7401,
											"name": "SWAP10",
											"source": 17
										},
										{
											"begin": 6476,
											"end": 7407,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 7407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7412,
											"end": 7547,
											"name": "tag",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 7412,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7451,
											"end": 7454,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7489,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7472,
											"end": 7489,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7472,
											"end": 7489,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7469,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 7469,
											"end": 7512,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 7492,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7528,
											"end": 7541,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7528,
											"end": 7541,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7412,
											"end": 7547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7552,
											"end": 7803,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 7552,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7677,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7663,
											"end": 7672,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7654,
											"end": 7661,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7650,
											"end": 7673,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7646,
											"end": 7678,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7643,
											"end": 7695,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7643,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 7643,
											"end": 7695,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7688,
											"end": 7689,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7681,
											"end": 7693,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7643,
											"end": 7695,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 7643,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7723,
											"end": 7732,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7717,
											"end": 7733,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 7742,
											"end": 7773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9644,
											"end": 9889,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 9644,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9717,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9764,
											"end": 9766,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9743,
											"end": 9750,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9739,
											"end": 9762,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9735,
											"end": 9767,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9732,
											"end": 9784,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9732,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 9732,
											"end": 9784,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9780,
											"end": 9781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9778,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 9782,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9732,
											"end": 9784,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 9732,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9812,
											"end": 9821,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9806,
											"end": 9822,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9831,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 9853,
											"end": 9858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9831,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 9831,
											"end": 9859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"@solvprotocol/erc-3525/IERC3525.sol",
								"@solvprotocol/erc-3525/IERC721.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
								"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
								"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
								"contracts/ISFT.sol",
								"contracts/KipProtocol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_lastConsumeID()": "ec10342c",
							"commissionRate()": "5ea1d6f8",
							"consume(address,uint256,(uint256,uint256)[])": "b85f4344",
							"consumer_balance(address)": "a335a003",
							"createToken(address,uint256,uint256)": "dbdcebde",
							"lastConsumeID()": "48818bde",
							"owner()": "8da5cb5b",
							"priceToken()": "2ff6fe76",
							"recharge(uint256)": "ef299b0b",
							"renounceOwnership()": "715018a6",
							"service_provider(address)": "cae5ec04",
							"setCommissionRate(uint256)": "19fac8fd",
							"setPriceToken(address)": "411092e3",
							"setServiceProvider(address,bool)": "017e4d1e",
							"sftSlot()": "fb771cb5",
							"sft_assets(uint256)": "b0e0a569",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"price_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commission_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newfee_\",\"type\":\"uint256\"}],\"name\":\"CommissionRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"consume_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reference_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_per_share\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct KipProtocol.receipt[]\",\"name\":\"_receipt\",\"type\":\"tuple[]\"}],\"name\":\"ConsumeLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"ConsumerBalanceRecharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"PriceTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_providerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"ServiceProviderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sft_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reference_id\",\"type\":\"uint256\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_lastConsumeID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reference_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_per_share\",\"type\":\"uint256\"}],\"internalType\":\"struct KipProtocol.receipt[]\",\"name\":\"_receipt\",\"type\":\"tuple[]\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"consumer_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sft_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slot_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token_amount\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastConsumeID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"recharge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"service_provider\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newrate\",\"type\":\"uint256\"}],\"name\":\"setCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newtoken\",\"type\":\"address\"}],\"name\":\"setPriceToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setServiceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sftSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sft_assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KipProtocol.sol\":\"KipProtocol\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xa3edd94148e931d8a37353624ea57afa1c679b6fe06b7059ccdc8da78a90c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0041d5bae8c6115c3378532d5b7cfbb1a288780279a3873334e49785b65a1b9d\",\"dweb:/ipfs/QmQTGDrQSZkzRbFZWAhysaeCvKnP7wPh2VSPkN4J323QmZ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"@solvprotocol/erc-3525/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"@solvprotocol/erc-3525/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol\":{\"keccak256\":\"0xbe5baf681bb5a93e20573b01d22559f3822d7e97cc8f028d03f378e570fac47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746f96cd24d2686b78a481835fbb24707dca2987a2f3d4cd2e8d044f5a73dcc0\",\"dweb:/ipfs/QmPHozfJQ7cLf2JQbLMF7M4mC6sB4JRRMB4nmxEWfbgPsg\"]},\"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol\":{\"keccak256\":\"0x27afa03aa1c72fd7910701353d1cae009af79ddc83b44b91bfb59001c12fbe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b78135515798c96684c849c4c69bf53adec444495279570506492481f532d591\",\"dweb:/ipfs/QmZVvBidwMjWwCF1iUxCmH3zMbeh5SNyCMztv77mZwGoWt\"]},\"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x872552c912722ad746f43b91583b921b97943aeaddba573ee6f14ef1eec9e03d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fffddbfa9c3c863a313a2036f44148200a5e87f8f51dbddee8578fac889c828f\",\"dweb:/ipfs/QmXfhoS6qzqWpWRGoTc2tdCf88MnGX5eCt4nfV2qun7BEY\"]},\"contracts/ISFT.sol\":{\"keccak256\":\"0x17358c34abab76cd1dabdc05f33136fba861cffe49422a8e0cbf4a650e5dc2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48fbf3159f9b63367ada5c72dc0c46c12aca94ca8eb6a9f77a137fe6c38aefff\",\"dweb:/ipfs/Qmbv5n88yc5inP9zRLXjLNfKVXYGsqF8swkQ8TDLwpiziD\"]},\"contracts/KipProtocol.sol\":{\"keccak256\":\"0xa5f847bb2c71baa91a1413d12cd7006e53af0b151fc1194822410e949b8925b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e26515af5d14cc0d07696434b7b3f1413696ff77c2b47fa007dc86bc2c5adc9\",\"dweb:/ipfs/QmWPVoxYSVT4KCupwKXwLwb1ug5HK4oLBXdrvK39QiY4kv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 3879,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "priceToken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 3881,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "commissionRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 3883,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "lastConsumeID",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 3885,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "sftSlot",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3889,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "sft_assets",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 3893,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "consumer_balance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3897,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "service_provider",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3902,
								"contract": "contracts/KipProtocol.sol:KipProtocol",
								"label": "sft_token_profit",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(UintToUintMap)1986_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UintToUintMap)1986_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EnumerableMap.UintToUintMap)",
								"numberOfBytes": "32",
								"value": "t_struct(UintToUintMap)1986_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(Bytes32Set)3070_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Bytes32Set",
								"members": [
									{
										"astId": 3069,
										"contract": "contracts/KipProtocol.sol:KipProtocol",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2876_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Bytes32ToBytes32Map)1772_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.Bytes32ToBytes32Map",
								"members": [
									{
										"astId": 1767,
										"contract": "contracts/KipProtocol.sol:KipProtocol",
										"label": "_keys",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32Set)3070_storage"
									},
									{
										"astId": 1771,
										"contract": "contracts/KipProtocol.sol:KipProtocol",
										"label": "_values",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_bytes32,t_bytes32)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)2876_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2871,
										"contract": "contracts/KipProtocol.sol:KipProtocol",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2875,
										"contract": "contracts/KipProtocol.sol:KipProtocol",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintToUintMap)1986_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.UintToUintMap",
								"members": [
									{
										"astId": 1985,
										"contract": "contracts/KipProtocol.sol:KipProtocol",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)1772_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 261,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1674:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1720:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1763:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:3",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 269,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"src": "1850:37:3"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1907:38:3",
										"statements": [
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 273,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1927:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:3"
											}
										]
									},
									"id": 277,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:3"
									},
									"scope": 324,
									"src": "1893:52:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2346:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 280,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2356:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:3"
											},
											{
												"id": 283,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 284,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2398:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:3"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 288,
									"name": "nonReentrant",
									"nameLocation": "2331:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:3"
									},
									"src": "2322:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2470:268:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 291,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2558:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 292,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2569:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "2554:86:3",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "2578:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 294,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "2599:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 296,
															"nodeType": "RevertStatement",
															"src": "2592:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2714:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2724:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:3"
											}
										]
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:3"
									},
									"scope": 324,
									"src": "2431:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2782:170:3",
										"statements": [
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2924:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2934:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:3"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:3"
									},
									"scope": 324,
									"src": "2744:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "3195:42:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3212:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 319,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3223:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 317,
												"id": 321,
												"nodeType": "Return",
												"src": "3205:25:3"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "3189:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:3"
									},
									"scope": 324,
									"src": "3131:106:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "886:2353:3",
							"usedErrors": [
								269
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1645
						],
						"SignedMath": [
							1750
						],
						"Strings": [
							579
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 1646,
							"src": "127:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1645,
										"src": "135:4:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 1751,
							"src": "165:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1750,
										"src": "173:10:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 331,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579
							],
							"name": "Strings",
							"nameLocation": "259:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 334,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 579,
									"src": "273:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 332,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 337,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 579,
									"src": "335:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 335,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:4",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 344,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "505:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "520:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:4"
									},
									"src": "470:66:4"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "708:627:4",
										"statements": [
											{
												"id": 390,
												"nodeType": "UncheckedBlock",
												"src": "718:611:4",
												"statements": [
													{
														"assignments": [
															353
														],
														"declarations": [
															{
																"constant": false,
																"id": 353,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 390,
																"src": "742:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 352,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 360,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 356,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "770:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 354,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "759:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1645_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1465,
																	"src": "759:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:4"
													},
													{
														"assignments": [
															362
														],
														"declarations": [
															{
																"constant": false,
																"id": 362,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 390,
																"src": "794:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 361,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 367,
														"initialValue": {
															"arguments": [
																{
																	"id": 365,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "828:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 363,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:4"
													},
													{
														"assignments": [
															369
														],
														"declarations": [
															{
																"constant": false,
																"id": 369,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 390,
																"src": "849:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 368,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 370,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:4"
													},
													{
														"AST": {
															"nativeSrc": "930:67:4",
															"nodeType": "YulBlock",
															"src": "930:67:4",
															"statements": [
																{
																	"nativeSrc": "948:35:4",
																	"nodeType": "YulAssignment",
																	"src": "948:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:4",
																						"nodeType": "YulLiteral",
																						"src": "971:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:4"
																				},
																				"nativeSrc": "967:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:4"
																		},
																		"nativeSrc": "955:28:4",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 362,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:4",
																"valueSize": 1
															},
															{
																"declaration": 353,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:4",
																"valueSize": 1
															},
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:4",
																"valueSize": 1
															}
														],
														"id": 371,
														"nodeType": "InlineAssembly",
														"src": "921:76:4"
													},
													{
														"body": {
															"id": 386,
															"nodeType": "Block",
															"src": "1023:269:4",
															"statements": [
																{
																	"expression": {
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:4",
																		"subExpression": {
																			"id": 373,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "1041:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 375,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:4"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:4",
																		"nodeType": "YulBlock",
																		"src": "1124:86:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:4"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:4",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:4"
																									},
																									"nativeSrc": "1164:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:4"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:4"
																							},
																							"nativeSrc": "1159:32:4",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:4",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:4"
																					},
																					"nativeSrc": "1146:46:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:4"
																				},
																				"nativeSrc": "1146:46:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 334,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 369,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 347,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 376,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:4"
																},
																{
																	"expression": {
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 377,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "1227:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 380,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "1260:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 385,
																	"nodeType": "IfStatement",
																	"src": "1256:21:4",
																	"trueBody": {
																		"id": 384,
																		"nodeType": "Break",
																		"src": "1272:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 387,
														"nodeType": "WhileStatement",
														"src": "1010:282:4"
													},
													{
														"expression": {
															"id": 388,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1312:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 351,
														"id": 389,
														"nodeType": "Return",
														"src": "1305:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:4"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "693:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:4"
									},
									"scope": 579,
									"src": "637:698:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "1511:92:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 403,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "1542:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:4",
															"trueExpression": {
																"hexValue": "2d",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "1588:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 410,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "1573:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1750_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:4",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1749,
																		"src": "1573:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 409,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1564:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 400,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:4",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 416,
												"nodeType": "Return",
												"src": "1521:75:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:4",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1459:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 394,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1496:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:4"
									},
									"scope": 579,
									"src": "1435:168:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1782:100:4",
										"statements": [
											{
												"id": 436,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "1835:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 430,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 421,
																				"src": "1854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 428,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1645,
																				"src": "1842:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1645_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1587,
																			"src": "1842:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 426,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	438,
																	521,
																	541
																],
																"referencedDeclaration": 521,
																"src": "1823:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 425,
														"id": 435,
														"nodeType": "Return",
														"src": "1816:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1729:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1767:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:4"
									},
									"scope": 579,
									"src": "1708:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "2095:435:4",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "2105:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 448,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 451,
												"initialValue": {
													"id": 450,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "2126:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:4"
											},
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "2141:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 452,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 457,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "2177:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 454,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:4"
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 463,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2198:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 465,
														"indexExpression": {
															"hexValue": "30",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:4"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 469,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2223:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 471,
														"indexExpression": {
															"hexValue": "31",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:4"
											},
											{
												"body": {
													"id": 503,
													"nodeType": "Block",
													"src": "2293:95:4",
													"statements": [
														{
															"expression": {
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 489,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "2307:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 491,
																	"indexExpression": {
																		"id": 490,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "2314:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 492,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2319:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 496,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 493,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "2330:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 498,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:4"
														},
														{
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 499,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "2361:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 483,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2281:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"initializationExpression": {
													"assignments": [
														476
													],
													"declarations": [
														{
															"constant": false,
															"id": 476,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 504,
															"src": "2253:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 475,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 482,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 478,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2269:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:4"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:4",
														"subExpression": {
															"id": 486,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2290:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 488,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 505,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2401:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 514,
												"nodeType": "IfStatement",
												"src": "2397:96:4",
												"trueBody": {
													"id": 513,
													"nodeType": "Block",
													"src": "2418:75:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 509,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "2468:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 510,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "2475:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 508,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "2439:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 512,
															"nodeType": "RevertStatement",
															"src": "2432:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2516:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 515,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 447,
												"id": 519,
												"nodeType": "Return",
												"src": "2502:21:4"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2080:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:4"
									},
									"scope": 579,
									"src": "2005:525:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "2762:75:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 534,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "2807:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 532,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 537,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "2815:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 529,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															438,
															521,
															541
														],
														"referencedDeclaration": 521,
														"src": "2779:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 539,
												"nodeType": "Return",
												"src": "2772:58:4"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2710:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:4"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2747:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:4"
									},
									"scope": 579,
									"src": "2689:148:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "2992:104:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 553,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "3015:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 551,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 558,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "3034:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 556,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 565,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "3063:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 563,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 562,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 571,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "3086:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 569,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 568,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 550,
												"id": 576,
												"nodeType": "Return",
												"src": "3002:87:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:4",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2929:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2946:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2986:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:4"
									},
									"scope": 579,
									"src": "2914:182:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 580,
							"src": "251:2847:4",
							"usedErrors": [
								344
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 582,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 591,
							"linearizedBaseContracts": [
								591
							],
							"name": "IERC165",
							"nameLocation": "431:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "817:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 584,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 591,
									"src": "790:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 592,
							"src": "421:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1645
						]
					},
					"id": 1646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 594,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1645,
							"linearizedBaseContracts": [
								1645
							],
							"name": "Math",
							"nameLocation": "211:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:6",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 597,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:6"
									},
									"src": "277:29:6"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 602,
									"members": [
										{
											"id": 598,
											"name": "Floor",
											"nameLocation": "336:5:6",
											"nodeType": "EnumValue",
											"src": "336:5:6"
										},
										{
											"id": 599,
											"name": "Ceil",
											"nameLocation": "379:4:6",
											"nodeType": "EnumValue",
											"src": "379:4:6"
										},
										{
											"id": 600,
											"name": "Trunc",
											"nameLocation": "421:5:6",
											"nodeType": "EnumValue",
											"src": "421:5:6"
										},
										{
											"id": 601,
											"name": "Expand",
											"nameLocation": "451:6:6",
											"nodeType": "EnumValue",
											"src": "451:6:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:6",
									"nodeType": "EnumDefinition",
									"src": "312:169:6"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "661:140:6",
										"statements": [
											{
												"id": 632,
												"nodeType": "UncheckedBlock",
												"src": "671:124:6",
												"statements": [
													{
														"assignments": [
															615
														],
														"declarations": [
															{
																"constant": false,
																"id": 615,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 632,
																"src": "695:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 614,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 619,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "707:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "711:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 621,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 627,
														"nodeType": "IfStatement",
														"src": "726:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 613,
															"id": 626,
															"nodeType": "Return",
															"src": "737:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 629,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "782:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 630,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 613,
														"id": 631,
														"nodeType": "Return",
														"src": "768:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "646:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:6"
									},
									"scope": 1645,
									"src": "585:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "984:113:6",
										"statements": [
											{
												"id": 660,
												"nodeType": "UncheckedBlock",
												"src": "994:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "1022:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 647,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "1026:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 653,
														"nodeType": "IfStatement",
														"src": "1018:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 645,
															"id": 652,
															"nodeType": "Return",
															"src": "1029:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 655,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "1074:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 656,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "1078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 658,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 645,
														"id": 659,
														"nodeType": "Return",
														"src": "1060:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "924:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:6"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "969:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "975:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:6"
									},
									"scope": 1645,
									"src": "908:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "1283:417:6",
										"statements": [
											{
												"id": 702,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "1551:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 681,
														"nodeType": "IfStatement",
														"src": "1547:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 679,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 673,
															"id": 680,
															"nodeType": "Return",
															"src": "1559:16:6"
														}
													},
													{
														"assignments": [
															683
														],
														"declarations": [
															{
																"constant": false,
																"id": 683,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 702,
																"src": "1589:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 682,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 687,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 684,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "1601:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 685,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 688,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "1624:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 689,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1628:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 691,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 697,
														"nodeType": "IfStatement",
														"src": "1620:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 673,
															"id": 696,
															"nodeType": "Return",
															"src": "1636:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 699,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "1681:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 673,
														"id": 701,
														"nodeType": "Return",
														"src": "1667:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1223:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1234:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:6"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:6"
									},
									"scope": 1645,
									"src": "1207:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "1887:114:6",
										"statements": [
											{
												"id": 730,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "1925:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 723,
														"nodeType": "IfStatement",
														"src": "1921:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 721,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 715,
															"id": 722,
															"nodeType": "Return",
															"src": "1933:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 725,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "1978:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 726,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "1982:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 728,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 715,
														"id": 729,
														"nodeType": "Return",
														"src": "1964:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1827:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:6"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1872:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1878:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:6"
									},
									"scope": 1645,
									"src": "1811:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "2198:114:6",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2236:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 751,
														"nodeType": "IfStatement",
														"src": "2232:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 743,
															"id": 750,
															"nodeType": "Return",
															"src": "2244:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 753,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "2289:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 754,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 737,
																		"src": "2293:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 756,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 743,
														"id": 757,
														"nodeType": "Return",
														"src": "2275:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2138:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2149:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:6"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2183:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2189:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:6"
									},
									"scope": 1645,
									"src": "2122:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2449:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 770,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "2466:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 771,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "2470:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2478:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:6",
													"trueExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "2474:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 769,
												"id": 776,
												"nodeType": "Return",
												"src": "2459:20:6"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:6"
									},
									"scope": 1645,
									"src": "2382:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "2624:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "2641:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 789,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2645:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 792,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2653:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:6",
													"trueExpression": {
														"id": 791,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "2649:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 787,
												"id": 794,
												"nodeType": "Return",
												"src": "2634:20:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2570:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2581:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2615:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:6"
									},
									"scope": 1645,
									"src": "2557:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "2845:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 806,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "2900:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 807,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "2904:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 809,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2910:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 811,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "2914:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 813,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 805,
												"id": 817,
												"nodeType": "Return",
												"src": "2892:28:6"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2802:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:6"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2836:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:6"
									},
									"scope": 1645,
									"src": "2774:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "3219:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "3233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "3229:127:6",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "3241:115:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 832,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "3340:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 833,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "3344:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 828,
															"id": 835,
															"nodeType": "Return",
															"src": "3333:12:6"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 838,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "3444:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 842,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "3458:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 845,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 846,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "3467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 828,
												"id": 851,
												"nodeType": "Return",
												"src": "3437:35:6"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3165:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3176:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3210:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:6"
									},
									"scope": 1645,
									"src": "3148:331:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "3901:4018:6",
										"statements": [
											{
												"id": 977,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:6",
												"statements": [
													{
														"assignments": [
															866
														],
														"declarations": [
															{
																"constant": false,
																"id": 866,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 977,
																"src": "4232:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 865,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 870,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "4248:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 868,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4252:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:6"
													},
													{
														"assignments": [
															872
														],
														"declarations": [
															{
																"constant": false,
																"id": 872,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 977,
																"src": "4312:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 871,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:6"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:6",
															"nodeType": "YulBlock",
															"src": "4392:122:6",
															"statements": [
																{
																	"nativeSrc": "4410:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:6"
																				},
																				"nativeSrc": "4433:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:6"
																		},
																		"nativeSrc": "4420:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:6",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:6",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:6"
																				},
																				"nativeSrc": "4470:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:6"
																				},
																				"nativeSrc": "4486:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:6"
																		},
																		"nativeSrc": "4466:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:6",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:6",
																"valueSize": 1
															},
															{
																"declaration": 872,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:6",
																"valueSize": 1
															},
															{
																"declaration": 856,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:6",
																"valueSize": 1
															},
															{
																"declaration": 858,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:6",
																"valueSize": 1
															}
														],
														"id": 874,
														"nodeType": "InlineAssembly",
														"src": "4383:131:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 875,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "4595:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 883,
														"nodeType": "IfStatement",
														"src": "4591:368:6",
														"trueBody": {
															"id": 882,
															"nodeType": "Block",
															"src": "4607:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 878,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "4925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 879,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "4933:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 864,
																	"id": 881,
																	"nodeType": "Return",
																	"src": "4918:26:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "5065:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 885,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "5080:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 891,
														"nodeType": "IfStatement",
														"src": "5061:88:6",
														"trueBody": {
															"id": 890,
															"nodeType": "Block",
															"src": "5087:62:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 887,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "5112:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 889,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:6"
																}
															]
														}
													},
													{
														"assignments": [
															893
														],
														"declarations": [
															{
																"constant": false,
																"id": 893,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 977,
																"src": "5404:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 892,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 894,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:6"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:6",
															"nodeType": "YulBlock",
															"src": "5444:291:6",
															"statements": [
																{
																	"nativeSrc": "5513:38:6",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:6"
																		},
																		"nativeSrc": "5526:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:6",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:6"
																				},
																				"nativeSrc": "5653:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:6"
																		},
																		"nativeSrc": "5642:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:6",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:6"
																		},
																		"nativeSrc": "5700:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 860,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:6",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:6",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:6",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:6",
																"valueSize": 1
															},
															{
																"declaration": 872,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:6",
																"valueSize": 1
															},
															{
																"declaration": 872,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:6",
																"valueSize": 1
															},
															{
																"declaration": 893,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 893,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:6",
																"valueSize": 1
															},
															{
																"declaration": 893,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:6",
																"valueSize": 1
															},
															{
																"declaration": 856,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:6",
																"valueSize": 1
															},
															{
																"declaration": 858,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:6",
																"valueSize": 1
															}
														],
														"id": 895,
														"nodeType": "InlineAssembly",
														"src": "5435:300:6"
													},
													{
														"assignments": [
															897
														],
														"declarations": [
															{
																"constant": false,
																"id": 897,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 977,
																"src": "5939:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 896,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 904,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 898,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "5954:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 900,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "5973:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:6"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:6",
															"nodeType": "YulBlock",
															"src": "6008:362:6",
															"statements": [
																{
																	"nativeSrc": "6073:37:6",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:6"
																		},
																		"nativeSrc": "6088:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:6",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:6"
																		},
																		"nativeSrc": "6186:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:6",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:6"
																						},
																						"nativeSrc": "6333:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:6"
																				},
																				"nativeSrc": "6329:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:6"
																		},
																		"nativeSrc": "6325:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 860,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:6",
																"valueSize": 1
															},
															{
																"declaration": 860,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:6",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:6",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:6",
																"valueSize": 1
															},
															{
																"declaration": 897,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:6",
																"valueSize": 1
															},
															{
																"declaration": 897,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:6",
																"valueSize": 1
															},
															{
																"declaration": 897,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:6",
																"valueSize": 1
															},
															{
																"declaration": 897,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:6",
																"valueSize": 1
															},
															{
																"declaration": 897,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:6",
																"valueSize": 1
															}
														],
														"id": 905,
														"nodeType": "InlineAssembly",
														"src": "5999:371:6"
													},
													{
														"expression": {
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 906,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "6436:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 907,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "6445:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 908,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "6453:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 911,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:6"
													},
													{
														"assignments": [
															913
														],
														"declarations": [
															{
																"constant": false,
																"id": 913,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 977,
																"src": "6775:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 912,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 920,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 915,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "6798:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 917,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:6"
													},
													{
														"expression": {
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 921,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7031:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 923,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "7046:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 924,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "7060:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 928,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:6"
													},
													{
														"expression": {
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 929,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7100:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 931,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "7115:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 932,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "7129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 936,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:6"
													},
													{
														"expression": {
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 937,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 939,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "7185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 940,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "7199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 944,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:6"
													},
													{
														"expression": {
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 945,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 947,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "7255:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 948,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "7269:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 952,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:6"
													},
													{
														"expression": {
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 953,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7310:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 955,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "7325:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 956,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "7339:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 960,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:6"
													},
													{
														"expression": {
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 961,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7381:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 963,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "7396:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 964,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "7410:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 968,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:6"
													},
													{
														"expression": {
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 969,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "7851:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 970,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "7860:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 971,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7868:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:6"
													},
													{
														"expression": {
															"id": 975,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "7896:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 864,
														"id": 976,
														"nodeType": "Return",
														"src": "7889:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3830:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3841:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:6"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3885:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:6"
									},
									"scope": 1645,
									"src": "3803:4116:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "8161:192:6",
										"statements": [
											{
												"assignments": [
													995
												],
												"declarations": [
													{
														"constant": false,
														"id": 995,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "8171:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"id": 997,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "8195:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 998,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "8198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 999,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "8201:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															979,
															1022
														],
														"referencedDeclaration": 979,
														"src": "8188:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1003,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "8244:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$602",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$602",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1002,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "8227:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$602_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1006,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "8264:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1007,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "8267:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1008,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "8270:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1005,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "8223:101:6",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "8288:36:6",
													"statements": [
														{
															"expression": {
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1013,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "8302:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1019,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "8340:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 1020,
												"nodeType": "Return",
												"src": "8333:13:6"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "8067:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "8078:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "8089:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "8110:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$602",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 602,
														"src": "8110:8:6"
													},
													"referencedDeclaration": 602,
													"src": "8110:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$602",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "8152:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:6"
									},
									"scope": 1645,
									"src": "8051:302:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "8644:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "8658:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "8654:45:6",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "8666:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1029,
															"id": 1034,
															"nodeType": "Return",
															"src": "8680:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1038
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "9378:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1037,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1041,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "9406:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1040,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1301,
																			1336
																		],
																		"referencedDeclaration": 1301,
																		"src": "9401:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1045,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:6"
											},
											{
												"id": 1132,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:6",
												"statements": [
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1048,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "9839:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1049,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "9849:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1050,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "9858:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1051,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "9862:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1054,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:6"
													},
													{
														"expression": {
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1059,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "9888:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1060,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "9898:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1061,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "9907:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1062,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "9911:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1065,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:6"
													},
													{
														"expression": {
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1070,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "9937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1071,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "9947:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1072,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "9956:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1073,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "9960:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1076,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1080,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:6"
													},
													{
														"expression": {
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1081,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "9986:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1082,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "9996:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1083,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "10005:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1084,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "10009:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1087,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1091,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:6"
													},
													{
														"expression": {
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1092,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "10035:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1093,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "10045:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1094,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "10054:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1095,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "10058:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1102,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:6"
													},
													{
														"expression": {
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1103,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "10084:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1104,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "10094:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1105,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "10103:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1106,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "10107:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1109,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1113,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:6"
													},
													{
														"expression": {
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1114,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "10133:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1115,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "10143:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1116,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "10152:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1117,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "10156:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1120,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1124,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1126,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "10193:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1127,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "10201:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1128,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "10205:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1125,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "10189:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1029,
														"id": 1131,
														"nodeType": "Return",
														"src": "10182:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "8601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "8635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:6"
									},
									"scope": 1645,
									"src": "8587:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "10405:164:6",
										"statements": [
											{
												"id": 1167,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:6",
												"statements": [
													{
														"assignments": [
															1146
														],
														"declarations": [
															{
																"constant": false,
																"id": 1146,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1167,
																"src": "10439:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1150,
														"initialValue": {
															"arguments": [
																{
																	"id": 1148,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "10461:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1147,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1134,
																	1169
																],
																"referencedDeclaration": 1134,
																"src": "10456:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1151,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "10484:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1153,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "10511:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1152,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "10494:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$602_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1155,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1146,
																						"src": "10524:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1156,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1146,
																						"src": "10533:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1158,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "10542:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1144,
														"id": 1166,
														"nodeType": "Return",
														"src": "10477:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "10343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "10354:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$602",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1138,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 602,
														"src": "10354:8:6"
													},
													"referencedDeclaration": 602,
													"src": "10354:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$602",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:6"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "10396:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:6"
									},
									"scope": 1645,
									"src": "10329:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "10760:922:6",
										"statements": [
											{
												"assignments": [
													1178
												],
												"declarations": [
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "10770:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"hexValue": "30",
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:6"
											},
											{
												"id": 1297,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1181,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "10826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1195,
														"nodeType": "IfStatement",
														"src": "10822:99:6",
														"trueBody": {
															"id": 1194,
															"nodeType": "Block",
															"src": "10844:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "10862:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1189,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:6"
																},
																{
																	"expression": {
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1190,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "10893:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1193,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1196,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "10938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1210,
														"nodeType": "IfStatement",
														"src": "10934:96:6",
														"trueBody": {
															"id": 1209,
															"nodeType": "Block",
															"src": "10955:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1201,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "10973:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1204,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:6"
																},
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1205,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11003:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1211,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "11047:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1225,
														"nodeType": "IfStatement",
														"src": "11043:96:6",
														"trueBody": {
															"id": 1224,
															"nodeType": "Block",
															"src": "11064:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1216,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "11082:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1219,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:6"
																},
																{
																	"expression": {
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1220,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11112:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1223,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1226,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "11156:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1240,
														"nodeType": "IfStatement",
														"src": "11152:96:6",
														"trueBody": {
															"id": 1239,
															"nodeType": "Block",
															"src": "11173:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1231,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "11191:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1234,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:6"
																},
																{
																	"expression": {
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1235,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11221:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1238,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "11265:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "11261:93:6",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "11281:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1246,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "11299:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:6"
																},
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11328:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1256,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "11371:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1270,
														"nodeType": "IfStatement",
														"src": "11367:93:6",
														"trueBody": {
															"id": 1269,
															"nodeType": "Block",
															"src": "11387:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "11405:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1264,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:6"
																},
																{
																	"expression": {
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1265,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11434:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1268,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1271,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "11477:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1285,
														"nodeType": "IfStatement",
														"src": "11473:93:6",
														"trueBody": {
															"id": 1284,
															"nodeType": "Block",
															"src": "11493:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1276,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "11511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1279,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:6"
																},
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1280,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11540:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1286,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "11583:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1296,
														"nodeType": "IfStatement",
														"src": "11579:64:6",
														"trueBody": {
															"id": 1295,
															"nodeType": "Block",
															"src": "11599:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1291,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "11617:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1294,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1298,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1178,
													"src": "11669:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1299,
												"nodeType": "Return",
												"src": "11662:13:6"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:6",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "10713:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:6"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "10751:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:6"
									},
									"scope": 1645,
									"src": "10699:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "11915:168:6",
										"statements": [
											{
												"id": 1334,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:6",
												"statements": [
													{
														"assignments": [
															1313
														],
														"declarations": [
															{
																"constant": false,
																"id": 1313,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1334,
																"src": "11949:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1312,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1317,
														"initialValue": {
															"arguments": [
																{
																	"id": 1315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "11971:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1314,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1301,
																	1336
																],
																"referencedDeclaration": 1301,
																"src": "11966:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "11998:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1320,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "12025:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1319,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "12008:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$602_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1324,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1323,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1313,
																						"src": "12043:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1325,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1304,
																					"src": "12052:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1311,
														"id": 1333,
														"nodeType": "Return",
														"src": "11991:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "11849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "11864:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$602",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1306,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1305,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 602,
														"src": "11864:8:6"
													},
													"referencedDeclaration": 602,
													"src": "11864:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$602",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:6"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "11906:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:6"
									},
									"scope": 1645,
									"src": "11835:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "12276:854:6",
										"statements": [
											{
												"assignments": [
													1345
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "12286:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1347,
												"initialValue": {
													"hexValue": "30",
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:6"
											},
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1348,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "12342:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1364,
														"nodeType": "IfStatement",
														"src": "12338:103:6",
														"trueBody": {
															"id": 1363,
															"nodeType": "Block",
															"src": "12361:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "12379:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1358,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:6"
																},
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1359,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "12414:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "12458:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1381,
														"nodeType": "IfStatement",
														"src": "12454:103:6",
														"trueBody": {
															"id": 1380,
															"nodeType": "Block",
															"src": "12477:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "12495:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1375,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:6"
																},
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "12530:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1382,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "12574:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1398,
														"nodeType": "IfStatement",
														"src": "12570:103:6",
														"trueBody": {
															"id": 1397,
															"nodeType": "Block",
															"src": "12593:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "12611:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1392,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:6"
																},
																{
																	"expression": {
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1393,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "12646:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1396,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1399,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "12690:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1415,
														"nodeType": "IfStatement",
														"src": "12686:100:6",
														"trueBody": {
															"id": 1414,
															"nodeType": "Block",
															"src": "12708:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "12726:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1409,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:6"
																},
																{
																	"expression": {
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1410,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "12760:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1413,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1416,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "12803:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1432,
														"nodeType": "IfStatement",
														"src": "12799:100:6",
														"trueBody": {
															"id": 1431,
															"nodeType": "Block",
															"src": "12821:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "12839:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1426,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:6"
																},
																{
																	"expression": {
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1427,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "12873:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1430,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1433,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "12916:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1449,
														"nodeType": "IfStatement",
														"src": "12912:100:6",
														"trueBody": {
															"id": 1448,
															"nodeType": "Block",
															"src": "12934:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1438,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "12952:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1443,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:6"
																},
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "12986:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "13029:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1460,
														"nodeType": "IfStatement",
														"src": "13025:66:6",
														"trueBody": {
															"id": 1459,
															"nodeType": "Block",
															"src": "13047:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1455,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "13065:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1458,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1462,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1345,
													"src": "13117:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1463,
												"nodeType": "Return",
												"src": "13110:13:6"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:6",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "12229:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:6"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "12267:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:6"
									},
									"scope": 1645,
									"src": "12214:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "13365:170:6",
										"statements": [
											{
												"id": 1498,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:6",
												"statements": [
													{
														"assignments": [
															1477
														],
														"declarations": [
															{
																"constant": false,
																"id": 1477,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1498,
																"src": "13399:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1476,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1481,
														"initialValue": {
															"arguments": [
																{
																	"id": 1479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "13422:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1478,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1465,
																	1500
																],
																"referencedDeclaration": 1465,
																"src": "13416:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1482,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "13449:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1484,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1471,
																						"src": "13476:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1483,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "13459:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$602_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1488,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1486,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1487,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "13495:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1489,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "13504:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1475,
														"id": 1497,
														"nodeType": "Return",
														"src": "13442:76:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "13299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "13314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$602",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 602,
														"src": "13314:8:6"
													},
													"referencedDeclaration": 602,
													"src": "13314:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$602",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:6"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "13356:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:6"
									},
									"scope": 1645,
									"src": "13284:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "13855:600:6",
										"statements": [
											{
												"assignments": [
													1509
												],
												"declarations": [
													{
														"constant": false,
														"id": 1509,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "13865:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"hexValue": "30",
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:6"
											},
											{
												"id": 1583,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1512,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "13921:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1526,
														"nodeType": "IfStatement",
														"src": "13917:98:6",
														"trueBody": {
															"id": 1525,
															"nodeType": "Block",
															"src": "13939:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1517,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "13957:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1520,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:6"
																},
																{
																	"expression": {
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "13988:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1524,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "14032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1541,
														"nodeType": "IfStatement",
														"src": "14028:95:6",
														"trueBody": {
															"id": 1540,
															"nodeType": "Block",
															"src": "14049:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1532,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "14067:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1535,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:6"
																},
																{
																	"expression": {
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1536,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "14097:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1539,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1542,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "14140:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1556,
														"nodeType": "IfStatement",
														"src": "14136:95:6",
														"trueBody": {
															"id": 1555,
															"nodeType": "Block",
															"src": "14157:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "14175:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1550,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:6"
																},
																{
																	"expression": {
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1551,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "14205:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1554,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "14248:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1571,
														"nodeType": "IfStatement",
														"src": "14244:95:6",
														"trueBody": {
															"id": 1570,
															"nodeType": "Block",
															"src": "14265:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1562,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "14283:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1565,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:6"
																},
																{
																	"expression": {
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1566,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "14313:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1569,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1572,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "14356:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1582,
														"nodeType": "IfStatement",
														"src": "14352:64:6",
														"trueBody": {
															"id": 1581,
															"nodeType": "Block",
															"src": "14372:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1577,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "14390:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1580,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1584,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1509,
													"src": "14442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1585,
												"nodeType": "Return",
												"src": "14435:13:6"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:6",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "13808:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:6"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "13846:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:6"
									},
									"scope": 1645,
									"src": "13792:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "14692:177:6",
										"statements": [
											{
												"id": 1623,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:6",
												"statements": [
													{
														"assignments": [
															1599
														],
														"declarations": [
															{
																"constant": false,
																"id": 1599,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1623,
																"src": "14726:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1598,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1603,
														"initialValue": {
															"arguments": [
																{
																	"id": 1601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "14750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1600,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1587,
																	1625
																],
																"referencedDeclaration": 1587,
																"src": "14743:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "14777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1606,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1593,
																						"src": "14804:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$602",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1605,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "14787:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$602_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1613,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1608,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1611,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1609,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1599,
																									"src": "14823:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1610,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1612,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1614,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1590,
																					"src": "14838:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1597,
														"id": 1622,
														"nodeType": "Return",
														"src": "14770:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "14626:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "14641:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$602",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 602,
														"src": "14641:8:6"
													},
													"referencedDeclaration": 602,
													"src": "14641:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$602",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:6"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "14683:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:6"
									},
									"scope": 1645,
									"src": "14610:259:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "15067:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1636,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "15090:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$602",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$602",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1642,
												"nodeType": "Return",
												"src": "15077:31:6"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:6",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "15019:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$602",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1627,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 602,
														"src": "15019:8:6"
													},
													"referencedDeclaration": 602,
													"src": "15019:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$602",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:6"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "15061:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:6"
									},
									"scope": 1645,
									"src": "14993:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1646,
							"src": "203:14914:6",
							"usedErrors": [
								597
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1750
						]
					},
					"id": 1751,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1648,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:7",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1750,
							"linearizedBaseContracts": [
								1750
							],
							"name": "SignedMath",
							"nameLocation": "224:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "376:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1658,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "393:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1659,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "397:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1662,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "405:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:7",
													"trueExpression": {
														"id": 1661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "401:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1664,
												"nodeType": "Return",
												"src": "386:20:7"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:7",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "325:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1650,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "335:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:7"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "368:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1655,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:7"
									},
									"scope": 1750,
									"src": "312:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "555:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1676,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1677,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "576:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1680,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "584:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:7",
													"trueExpression": {
														"id": 1679,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "580:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1682,
												"nodeType": "Return",
												"src": "565:20:7"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:7",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "504:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1668,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "514:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1670,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:7"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "547:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1673,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:7"
									},
									"scope": 1750,
									"src": "491:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "797:162:7",
										"statements": [
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 1727,
														"src": "859:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1694,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1696,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "871:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1697,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "875:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1699,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1700,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1687,
																				"src": "882:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1701,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1689,
																				"src": "886:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1703,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1709,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "911:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1714,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1695,
																						"src": "931:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1713,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1712,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1710,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1719,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1687,
																				"src": "945:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1720,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1689,
																				"src": "949:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1722,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1724,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1726,
												"nodeType": "Return",
												"src": "904:48:7"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:7",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "746:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1686,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "756:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:7"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "789:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1691,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:7"
									},
									"scope": 1750,
									"src": "729:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "1103:158:7",
										"statements": [
											{
												"id": 1747,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1738,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "1228:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:7",
																		"subExpression": {
																			"id": 1742,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "1242:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:7",
																	"trueExpression": {
																		"id": 1741,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "1237:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1736,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1735,
														"id": 1746,
														"nodeType": "Return",
														"src": "1213:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:7",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "1061:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1730,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:7"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "1094:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:7"
									},
									"scope": 1750,
									"src": "1048:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1751,
							"src": "216:1047:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/structs/EnumerableMap.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
					"exportedSymbols": {
						"EnumerableMap": [
							2865
						],
						"EnumerableSet": [
							3478
						]
					},
					"id": 2866,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1752,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "./EnumerableSet.sol",
							"id": 1754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2866,
							"sourceUnit": 3479,
							"src": "231:50:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1753,
										"name": "EnumerableSet",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3478,
										"src": "239:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableMap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1755,
								"nodeType": "StructuredDocumentation",
								"src": "283:1367:8",
								"text": " @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableMap.\n ===="
							},
							"fullyImplemented": true,
							"id": 2865,
							"linearizedBaseContracts": [
								2865
							],
							"name": "EnumerableMap",
							"nameLocation": "1659:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1759,
									"libraryName": {
										"id": 1756,
										"name": "EnumerableSet",
										"nameLocations": [
											"1685:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3478,
										"src": "1685:13:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1679:49:8",
									"typeName": {
										"id": 1758,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1757,
											"name": "EnumerableSet.Bytes32Set",
											"nameLocations": [
												"1703:13:8",
												"1717:10:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3070,
											"src": "1703:24:8"
										},
										"referencedDeclaration": 3070,
										"src": "1703:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
											"typeString": "struct EnumerableSet.Bytes32Set"
										}
									}
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "2161:56:8",
										"text": " @dev Query for a nonexistent map key."
									},
									"errorSelector": "02b56686",
									"id": 1764,
									"name": "EnumerableMapNonexistentKey",
									"nameLocation": "2228:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2264:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2256:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:13:8"
									},
									"src": "2222:47:8"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToBytes32Map",
									"id": 1772,
									"members": [
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "_keys",
											"nameLocation": "2364:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "2339:30:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
												"typeString": "struct EnumerableSet.Bytes32Set"
											},
											"typeName": {
												"id": 1766,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1765,
													"name": "EnumerableSet.Bytes32Set",
													"nameLocations": [
														"2339:13:8",
														"2353:10:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3070,
													"src": "2339:24:8"
												},
												"referencedDeclaration": 3070,
												"src": "2339:24:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1771,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "2411:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "2379:39:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
												"typeString": "mapping(bytes32 => bytes32)"
											},
											"typeName": {
												"id": 1770,
												"keyName": "key",
												"keyNameLocation": "2395:3:8",
												"keyType": {
													"id": 1768,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2379:31:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
													"typeString": "mapping(bytes32 => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1769,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToBytes32Map",
									"nameLocation": "2282:19:8",
									"nodeType": "StructDefinition",
									"scope": 2865,
									"src": "2275:150:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "2750:76:8",
										"statements": [
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1785,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "2760:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2764:7:8",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1771,
															"src": "2760:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1789,
														"indexExpression": {
															"id": 1787,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "2772:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2760:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1790,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "2779:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2760:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "2760:24:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1796,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "2815:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1793,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "2801:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2805:5:8",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "2801:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2811:3:8",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3088,
														"src": "2801:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3070_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3070_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2801:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1798,
												"nodeType": "Return",
												"src": "2794:25:8"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "2431:216:8",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "2661:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2693:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "2665:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1774,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"2665:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "2665:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "2665:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2706:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "2698:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2719:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "2711:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1779,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:61:8"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "2744:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2744:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:6:8"
									},
									"scope": 2865,
									"src": "2652:174:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "3080:78:8",
										"statements": [
											{
												"expression": {
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3090:23:8",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1811,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "3097:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3101:7:8",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1771,
															"src": "3097:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1814,
														"indexExpression": {
															"id": 1813,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "3109:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3097:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "3090:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1820,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "3147:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1817,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "3130:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3134:5:8",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "3130:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3140:6:8",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3106,
														"src": "3130:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3070_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3070_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1810,
												"id": 1822,
												"nodeType": "Return",
												"src": "3123:28:8"
											}
										]
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "2832:157:8",
										"text": " @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "3003:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3038:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3010:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1803,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1802,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3010:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "3010:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "3010:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3051:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3043:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:46:8"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3074:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:6:8"
									},
									"scope": 2865,
									"src": "2994:164:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "3330:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1838,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "3366:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1835,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "3347:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3351:5:8",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "3347:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3357:8:8",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3124,
														"src": "3347:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3070_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3070_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3347:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1840,
												"nodeType": "Return",
												"src": "3340:30:8"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "3164:68:8",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "3246:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3283:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3255:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1826,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3255:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "3255:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "3255:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3296:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3288:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:46:8"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3324:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3324:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:6:8"
									},
									"scope": 2865,
									"src": "3237:140:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "3548:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 1851,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "3565:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3569:5:8",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "3565:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3575:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3139,
														"src": "3565:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3070_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$3070_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3565:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1850,
												"id": 1855,
												"nodeType": "Return",
												"src": "3558:25:8"
											}
										]
									},
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "3383:79:8",
										"text": " @dev Returns the number of key-value pairs in the map. O(1)."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "3476:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3511:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "3483:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1844,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3483:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "3483:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "3483:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:33:8"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "3539:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:8"
									},
									"scope": 2865,
									"src": "3467:123:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "4044:90:8",
										"statements": [
											{
												"assignments": [
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1871,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "4062:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1885,
														"src": "4054:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1870,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4054:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1877,
												"initialValue": {
													"arguments": [
														{
															"id": 1875,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "4081:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1872,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "4068:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4072:5:8",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "4068:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:2:8",
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3157,
														"src": "4068:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3070_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$3070_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4054:33:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1878,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "4105:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"id": 1879,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "4110:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4114:7:8",
																"memberName": "_values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1771,
																"src": "4110:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 1882,
															"indexExpression": {
																"id": 1881,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "4122:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4110:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1883,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4104:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1884,
												"nodeType": "Return",
												"src": "4097:30:8"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "3596:342:8",
										"text": " @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "3952:2:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3983:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3955:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1859,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3955:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "3955:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "3955:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3996:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3988:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3954:48:8"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "4026:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "4035:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1867,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:18:8"
									},
									"scope": 2865,
									"src": "3943:191:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "4375:198:8",
										"statements": [
											{
												"assignments": [
													1900
												],
												"declarations": [
													{
														"constant": false,
														"id": 1900,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4393:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "4385:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1899,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4385:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1901,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "4401:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4405:7:8",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1771,
														"src": "4401:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1904,
													"indexExpression": {
														"id": 1903,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "4413:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4401:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4385:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1906,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "4431:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4448:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4440:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1907,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4440:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4440:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4431:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1927,
													"nodeType": "Block",
													"src": "4522:45:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4544:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"id": 1924,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1900,
																		"src": "4550:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4543:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1898,
															"id": 1926,
															"nodeType": "Return",
															"src": "4536:20:8"
														}
													]
												},
												"id": 1928,
												"nodeType": "IfStatement",
												"src": "4427:140:8",
												"trueBody": {
													"id": 1922,
													"nodeType": "Block",
													"src": "4452:64:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1913,
																				"name": "map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1890,
																				"src": "4483:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				}
																			},
																			{
																				"id": 1914,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "4488:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1912,
																			"name": "contains",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1842,
																				2055,
																				2271,
																				2517,
																				2736
																			],
																			"referencedDeclaration": 1842,
																			"src": "4474:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																				"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																			}
																		},
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4474:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4502:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4494:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1916,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4494:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4494:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4473:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1898,
															"id": 1921,
															"nodeType": "Return",
															"src": "4466:39:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "4140:130:8",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "4284:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4319:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "4291:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1888,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4291:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "4291:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "4291:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4332:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "4324:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4290:46:8"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "4360:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4360:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "4366:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:15:8"
									},
									"scope": 2865,
									"src": "4275:298:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "4815:183:8",
										"statements": [
											{
												"assignments": [
													1942
												],
												"declarations": [
													{
														"constant": false,
														"id": 1942,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4833:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "4825:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1941,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4825:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1947,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1943,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "4841:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4845:7:8",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1771,
														"src": "4841:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1946,
													"indexExpression": {
														"id": 1945,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "4853:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4841:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4825:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1948,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "4871:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4880:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4871:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4885:19:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1952,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "4895:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																{
																	"id": 1953,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "4900:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1951,
																"name": "contains",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1842,
																	2055,
																	2271,
																	2517,
																	2736
																],
																"referencedDeclaration": 1842,
																"src": "4886:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4886:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4871:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "4867:103:8",
												"trueBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "4906:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1958,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1936,
																		"src": "4955:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1957,
																	"name": "EnumerableMapNonexistentKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "4927:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32) pure"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4927:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1960,
															"nodeType": "RevertStatement",
															"src": "4920:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1963,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1942,
													"src": "4986:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1964,
												"nodeType": "Return",
												"src": "4979:12:8"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "4579:140:8",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "4733:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4765:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "4737:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1932,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4737:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "4737:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "4737:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4778:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "4770:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4736:46:8"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "4806:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:9:8"
									},
									"scope": 2865,
									"src": "4724:274:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "5636:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 1976,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "5653:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5657:5:8",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "5653:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5663:6:8",
														"memberName": "values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3187,
														"src": "5653:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3070_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$3070_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5653:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1975,
												"id": 1980,
												"nodeType": "Return",
												"src": "5646:25:8"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "5004:539:8",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "5557:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5590:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "5562:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1968,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"5562:19:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1772,
														"src": "5562:19:8"
													},
													"referencedDeclaration": 1772,
													"src": "5562:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5561:33:8"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "5618:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1972,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5618:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1973,
													"nodeType": "ArrayTypeName",
													"src": "5618:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:8"
									},
									"scope": 2865,
									"src": "5548:130:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToUintMap",
									"id": 1986,
									"members": [
										{
											"constant": false,
											"id": 1985,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5757:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1986,
											"src": "5737:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 1984,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1983,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"5737:19:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1772,
													"src": "5737:19:8"
												},
												"referencedDeclaration": 1772,
												"src": "5737:19:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToUintMap",
									"nameLocation": "5713:13:8",
									"nodeType": "StructDefinition",
									"scope": 2865,
									"src": "5706:64:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "6089:69:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2000,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "6110:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6114:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "6110:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2004,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "6130:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6122:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2002,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6122:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6122:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "6144:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6136:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2006,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6136:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6136:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1999,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1800,
															2013,
															2229,
															2463,
															2700
														],
														"referencedDeclaration": 1800,
														"src": "6106:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6106:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1998,
												"id": 2011,
												"nodeType": "Return",
												"src": "6099:52:8"
											}
										]
									},
									"documentation": {
										"id": 1987,
										"nodeType": "StructuredDocumentation",
										"src": "5776:216:8",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "6006:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6032:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6010:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1988,
														"name": "UintToUintMap",
														"nameLocations": [
															"6010:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "6010:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "6010:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6045:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6037:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6058:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6050:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:55:8"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6083:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6083:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:6:8"
									},
									"scope": 2865,
									"src": "5997:161:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "6397:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2025,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "6421:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6425:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "6421:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2029,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "6441:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6433:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2027,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6433:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6433:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2024,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1824,
															2034,
															2250,
															2490,
															2718
														],
														"referencedDeclaration": 1824,
														"src": "6414:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6414:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2032,
												"nodeType": "Return",
												"src": "6407:39:8"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "6164:148:8",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6326:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6355:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "6333:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2015,
														"name": "UintToUintMap",
														"nameLocations": [
															"6333:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "6333:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "6333:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6368:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "6360:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6360:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6332:40:8"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "6391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6390:6:8"
									},
									"scope": 2865,
									"src": "6317:136:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "6619:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2046,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "6645:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6649:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "6645:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2050,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "6665:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6657:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2048,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6657:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6657:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2045,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1842,
															2055,
															2271,
															2517,
															2736
														],
														"referencedDeclaration": 1842,
														"src": "6636:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6636:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2044,
												"id": 2053,
												"nodeType": "Return",
												"src": "6629:41:8"
											}
										]
									},
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "6459:68:8",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6541:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6572:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "6550:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2036,
														"name": "UintToUintMap",
														"nameLocations": [
															"6550:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "6550:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "6550:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6585:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "6577:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6549:40:8"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "6613:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6613:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6612:6:8"
									},
									"scope": 2865,
									"src": "6532:145:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "6835:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2065,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "6859:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6863:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "6859:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2064,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1857,
															2070,
															2286,
															2532,
															2751
														],
														"referencedDeclaration": 1857,
														"src": "6852:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6852:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2068,
												"nodeType": "Return",
												"src": "6845:25:8"
											}
										]
									},
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "6683:72:8",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6769:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6798:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "6776:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2057,
														"name": "UintToUintMap",
														"nameLocations": [
															"6776:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "6776:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "6776:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:27:8"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "6826:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6826:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:9:8"
									},
									"scope": 2865,
									"src": "6760:117:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "7309:116:8",
										"statements": [
											{
												"assignments": [
													2084,
													2086
												],
												"declarations": [
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "7328:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 2103,
														"src": "7320:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2083,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7320:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2086,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7341:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2103,
														"src": "7333:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2085,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7333:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2092,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2088,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "7353:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7357:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "7353:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2090,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "7365:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2087,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2104,
															2326,
															2572,
															2782
														],
														"referencedDeclaration": 1886,
														"src": "7350:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7350:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7319:52:8"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2095,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "7397:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7389:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2093,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7389:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2086,
																	"src": "7411:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7403:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2097,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7403:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7403:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2101,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7388:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2102,
												"nodeType": "Return",
												"src": "7381:37:8"
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "6883:326:8",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7223:2:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7248:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "7226:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2072,
														"name": "UintToUintMap",
														"nameLocations": [
															"7226:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "7226:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "7226:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7261:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "7253:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7253:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:42:8"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "7291:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7291:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "7300:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7300:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7290:18:8"
									},
									"scope": 2865,
									"src": "7214:211:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "7660:123:8",
										"statements": [
											{
												"assignments": [
													2118,
													2120
												],
												"declarations": [
													{
														"constant": false,
														"id": 2118,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7676:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "7671:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2117,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7671:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2120,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7693:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "7685:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2119,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7685:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2122,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "7709:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7713:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "7709:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2126,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "7729:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7721:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2124,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7721:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7721:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2121,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1930,
															2138,
															2366,
															2612,
															2813
														],
														"referencedDeclaration": 1930,
														"src": "7702:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7702:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7670:64:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2130,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "7752:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2133,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "7769:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7761:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7761:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7761:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2135,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7751:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2136,
												"nodeType": "Return",
												"src": "7744:32:8"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "7431:130:8",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "7575:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7604:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "7582:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2106,
														"name": "UintToUintMap",
														"nameLocations": [
															"7582:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "7582:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "7582:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7617:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "7609:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7609:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7581:40:8"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "7645:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7645:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "7651:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7651:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:15:8"
									},
									"scope": 2865,
									"src": "7566:217:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "8019:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2152,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "8048:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8052:6:8",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1985,
																	"src": "8048:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2156,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "8068:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8060:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2154,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8060:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8060:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2151,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1966,
																	2162,
																	2396,
																	2642,
																	2834
																],
																"referencedDeclaration": 1966,
																"src": "8044:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8044:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8036:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8036:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8036:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2148,
												"id": 2160,
												"nodeType": "Return",
												"src": "8029:45:8"
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "7789:140:8",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "7943:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7969:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "7947:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2140,
														"name": "UintToUintMap",
														"nameLocations": [
															"7947:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "7947:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "7947:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7982:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "7974:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7974:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7946:40:8"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "8010:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8010:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8009:9:8"
									},
									"scope": 2865,
									"src": "7934:147:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "8713:216:8",
										"statements": [
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "8740:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2191,
														"src": "8723:22:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2174,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "8723:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2175,
															"nodeType": "ArrayTypeName",
															"src": "8723:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2181,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2178,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "8753:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8757:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1985,
															"src": "8753:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2177,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1982,
															2192,
															2426,
															2672,
															2864
														],
														"referencedDeclaration": 1982,
														"src": "8748:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8723:41:8"
											},
											{
												"assignments": [
													2186
												],
												"declarations": [
													{
														"constant": false,
														"id": 2186,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8791:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2191,
														"src": "8774:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2184,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8774:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2185,
															"nodeType": "ArrayTypeName",
															"src": "8774:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"nodeType": "VariableDeclarationStatement",
												"src": "8774:23:8"
											},
											{
												"AST": {
													"nativeSrc": "8860:39:8",
													"nodeType": "YulBlock",
													"src": "8860:39:8",
													"statements": [
														{
															"nativeSrc": "8874:15:8",
															"nodeType": "YulAssignment",
															"src": "8874:15:8",
															"value": {
																"name": "store",
																"nativeSrc": "8884:5:8",
																"nodeType": "YulIdentifier",
																"src": "8884:5:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8874:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2186,
														"isOffset": false,
														"isSlot": false,
														"src": "8874:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2176,
														"isOffset": false,
														"isSlot": false,
														"src": "8884:5:8",
														"valueSize": 1
													}
												],
												"id": 2188,
												"nodeType": "InlineAssembly",
												"src": "8851:48:8"
											},
											{
												"expression": {
													"id": 2189,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2186,
													"src": "8916:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2171,
												"id": 2190,
												"nodeType": "Return",
												"src": "8909:13:8"
											}
										]
									},
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "8087:539:8",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "8640:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8667:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "8645:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2164,
														"name": "UintToUintMap",
														"nameLocations": [
															"8645:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1986,
														"src": "8645:13:8"
													},
													"referencedDeclaration": 1986,
													"src": "8645:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:27:8"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "8695:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2168,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8695:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2169,
													"nodeType": "ArrayTypeName",
													"src": "8695:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8694:18:8"
									},
									"scope": 2865,
									"src": "8631:298:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToAddressMap",
									"id": 2196,
									"members": [
										{
											"constant": false,
											"id": 2195,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "9014:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2196,
											"src": "8994:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2194,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2193,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"8994:19:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1772,
													"src": "8994:19:8"
												},
												"referencedDeclaration": 1772,
												"src": "8994:19:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToAddressMap",
									"nameLocation": "8967:16:8",
									"nodeType": "StructDefinition",
									"scope": 2865,
									"src": "8960:67:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "9349:87:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2210,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9370:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9374:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "9370:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2214,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "9390:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9382:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2212,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9382:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2222,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2204,
																					"src": "9420:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9412:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2220,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9412:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9412:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9404:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2218,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9404:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9404:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9396:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2216,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9396:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9396:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2209,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1800,
															2013,
															2229,
															2463,
															2700
														],
														"referencedDeclaration": 1800,
														"src": "9366:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9366:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2208,
												"id": 2227,
												"nodeType": "Return",
												"src": "9359:70:8"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "9033:216:8",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "9263:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9292:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "9267:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2198,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9267:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "9267:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "9267:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9305:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "9297:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9297:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9318:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "9310:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9310:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9266:58:8"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "9343:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9343:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9342:6:8"
									},
									"scope": 2865,
									"src": "9254:182:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "9678:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2241,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2233,
																"src": "9702:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9706:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "9702:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2245,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "9722:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9714:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2243,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9714:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9714:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2240,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1824,
															2034,
															2250,
															2490,
															2718
														],
														"referencedDeclaration": 1824,
														"src": "9695:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9695:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2239,
												"id": 2248,
												"nodeType": "Return",
												"src": "9688:39:8"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "9442:148:8",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "9604:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9636:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "9611:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2231,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9611:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "9611:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "9611:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9649:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "9641:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:43:8"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "9672:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9672:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9671:6:8"
									},
									"scope": 2865,
									"src": "9595:139:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "9903:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2262,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2254,
																"src": "9929:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9933:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "9929:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2266,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "9949:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9941:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2264,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9941:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9941:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2261,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1842,
															2055,
															2271,
															2517,
															2736
														],
														"referencedDeclaration": 1842,
														"src": "9920:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2260,
												"id": 2269,
												"nodeType": "Return",
												"src": "9913:41:8"
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "9740:68:8",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "9822:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9856:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "9831:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2252,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9831:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "9831:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "9831:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9869:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "9861:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9830:43:8"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "9897:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9897:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9896:6:8"
									},
									"scope": 2865,
									"src": "9813:148:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "10122:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2281,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "10146:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10150:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "10146:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2280,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1857,
															2070,
															2286,
															2532,
															2751
														],
														"referencedDeclaration": 1857,
														"src": "10139:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10139:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2279,
												"id": 2284,
												"nodeType": "Return",
												"src": "10132:25:8"
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "9967:72:8",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "10053:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10085:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "10060:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2273,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10060:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "10060:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "10060:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10059:30:8"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "10113:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10113:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10112:9:8"
									},
									"scope": 2865,
									"src": "10044:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "10599:134:8",
										"statements": [
											{
												"assignments": [
													2300,
													2302
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "10618:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "10610:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2299,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2302,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10631:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "10623:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2301,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10623:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2304,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "10643:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10647:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "10643:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2306,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "10655:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2303,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2104,
															2326,
															2572,
															2782
														],
														"referencedDeclaration": 1886,
														"src": "10640:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10640:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10609:52:8"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2311,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "10687:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10679:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2309,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10679:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10679:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2319,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2302,
																					"src": "10717:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10709:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2317,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10709:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10709:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10701:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2315,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10701:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10701:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10693:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10693:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10693:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2323,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10678:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 2298,
												"id": 2324,
												"nodeType": "Return",
												"src": "10671:55:8"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "10170:326:8",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "10510:2:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10538:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "10513:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2288,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10513:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "10513:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "10513:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10551:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "10543:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10543:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10512:45:8"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "10581:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "10590:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10590:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10580:18:8"
									},
									"scope": 2865,
									"src": "10501:232:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "10971:141:8",
										"statements": [
											{
												"assignments": [
													2340,
													2342
												],
												"declarations": [
													{
														"constant": false,
														"id": 2340,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10987:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2365,
														"src": "10982:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2339,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10982:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "11004:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2365,
														"src": "10996:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2341,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10996:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2351,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2344,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "11020:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11024:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "11020:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2348,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "11040:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11032:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2346,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11032:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11032:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2343,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1930,
															2138,
															2366,
															2612,
															2813
														],
														"referencedDeclaration": 1930,
														"src": "11013:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10981:64:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2352,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "11063:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2359,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "11096:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11088:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2357,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11088:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11088:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11080:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2355,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "11080:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11080:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11072:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11072:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11072:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2363,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11062:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 2338,
												"id": 2364,
												"nodeType": "Return",
												"src": "11055:50:8"
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "10739:130:8",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "10883:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10915:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "10890:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2328,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10890:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "10890:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "10890:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10928:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "10920:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10920:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10889:43:8"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "10956:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10956:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "10962:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10955:15:8"
									},
									"scope": 2865,
									"src": "10874:238:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "11351:80:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2384,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2370,
																						"src": "11396:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2385,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11400:6:8",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2195,
																					"src": "11396:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2388,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2372,
																							"src": "11416:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2387,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11408:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2386,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "11408:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11408:12:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2383,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1966,
																					2162,
																					2396,
																					2642,
																					2834
																				],
																				"referencedDeclaration": 1966,
																				"src": "11392:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																				}
																			},
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11392:29:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11384:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2381,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11384:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11384:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11376:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2379,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11376:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11376:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11368:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11368:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11368:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2394,
												"nodeType": "Return",
												"src": "11361:63:8"
											}
										]
									},
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "11118:140:8",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "11272:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11301:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "11276:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2368,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11276:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "11276:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "11276:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11314:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "11306:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11306:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11275:43:8"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "11342:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11342:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11341:9:8"
									},
									"scope": 2865,
									"src": "11263:168:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "12066:216:8",
										"statements": [
											{
												"assignments": [
													2410
												],
												"declarations": [
													{
														"constant": false,
														"id": 2410,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12093:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2425,
														"src": "12076:22:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2408,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12076:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2409,
															"nodeType": "ArrayTypeName",
															"src": "12076:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2415,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2412,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "12106:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2413,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12110:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2195,
															"src": "12106:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2411,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1982,
															2192,
															2426,
															2672,
															2864
														],
														"referencedDeclaration": 1982,
														"src": "12101:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12101:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12076:41:8"
											},
											{
												"assignments": [
													2420
												],
												"declarations": [
													{
														"constant": false,
														"id": 2420,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12144:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2425,
														"src": "12127:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2418,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12127:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2419,
															"nodeType": "ArrayTypeName",
															"src": "12127:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2421,
												"nodeType": "VariableDeclarationStatement",
												"src": "12127:23:8"
											},
											{
												"AST": {
													"nativeSrc": "12213:39:8",
													"nodeType": "YulBlock",
													"src": "12213:39:8",
													"statements": [
														{
															"nativeSrc": "12227:15:8",
															"nodeType": "YulAssignment",
															"src": "12227:15:8",
															"value": {
																"name": "store",
																"nativeSrc": "12237:5:8",
																"nodeType": "YulIdentifier",
																"src": "12237:5:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12227:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2420,
														"isOffset": false,
														"isSlot": false,
														"src": "12227:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2410,
														"isOffset": false,
														"isSlot": false,
														"src": "12237:5:8",
														"valueSize": 1
													}
												],
												"id": 2422,
												"nodeType": "InlineAssembly",
												"src": "12204:48:8"
											},
											{
												"expression": {
													"id": 2423,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2420,
													"src": "12269:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2405,
												"id": 2424,
												"nodeType": "Return",
												"src": "12262:13:8"
											}
										]
									},
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "11437:539:8",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "11990:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12020:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "11995:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2398,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11995:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "11995:16:8"
													},
													"referencedDeclaration": 2196,
													"src": "11995:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2196_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11994:30:8"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "12048:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12048:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2403,
													"nodeType": "ArrayTypeName",
													"src": "12048:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12047:18:8"
									},
									"scope": 2865,
									"src": "11981:301:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.AddressToUintMap",
									"id": 2430,
									"members": [
										{
											"constant": false,
											"id": 2429,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "12367:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2430,
											"src": "12347:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2428,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2427,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"12347:19:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1772,
													"src": "12347:19:8"
												},
												"referencedDeclaration": 1772,
												"src": "12347:19:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressToUintMap",
									"nameLocation": "12320:16:8",
									"nodeType": "StructDefinition",
									"scope": 2865,
									"src": "12313:67:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "12702:87:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2444,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2434,
																"src": "12723:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12727:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "12723:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2452,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2436,
																					"src": "12759:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12751:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2450,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12751:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12751:12:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12743:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2448,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12743:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12743:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12735:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2446,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12735:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12735:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2458,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2438,
																	"src": "12775:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12767:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2456,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12767:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12767:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2443,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1800,
															2013,
															2229,
															2463,
															2700
														],
														"referencedDeclaration": 1800,
														"src": "12719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12719:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2442,
												"id": 2461,
												"nodeType": "Return",
												"src": "12712:70:8"
											}
										]
									},
									"documentation": {
										"id": 2431,
										"nodeType": "StructuredDocumentation",
										"src": "12386:216:8",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "12616:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12645:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "12620:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2433,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2432,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12620:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "12620:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "12620:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12658:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "12650:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12650:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12671:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "12663:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12619:58:8"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "12696:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12696:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12695:6:8"
									},
									"scope": 2865,
									"src": "12607:182:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "13031:74:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2475,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "13055:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13059:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "13055:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2483,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2469,
																					"src": "13091:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13083:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2481,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "13083:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13083:12:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13075:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2479,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13075:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13075:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13067:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2477,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13067:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13067:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2474,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1824,
															2034,
															2250,
															2490,
															2718
														],
														"referencedDeclaration": 1824,
														"src": "13048:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2473,
												"id": 2488,
												"nodeType": "Return",
												"src": "13041:57:8"
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "12795:148:8",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "12957:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12989:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "12964:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2465,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12964:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "12964:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "12964:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13002:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "12994:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12994:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12963:43:8"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "13025:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13025:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13024:6:8"
									},
									"scope": 2865,
									"src": "12948:157:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "13274:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2502,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "13300:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13304:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "13300:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2510,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2496,
																					"src": "13336:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13328:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2508,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "13328:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13328:12:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13320:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2506,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13320:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13320:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13312:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2504,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13312:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13312:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2501,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1842,
															2055,
															2271,
															2517,
															2736
														],
														"referencedDeclaration": 1842,
														"src": "13291:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13291:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2515,
												"nodeType": "Return",
												"src": "13284:59:8"
											}
										]
									},
									"documentation": {
										"id": 2491,
										"nodeType": "StructuredDocumentation",
										"src": "13111:68:8",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "13193:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13227:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "13202:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2492,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13202:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "13202:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "13202:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13240:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "13232:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13232:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13201:43:8"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "13268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13267:6:8"
									},
									"scope": 2865,
									"src": "13184:166:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "13511:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2527,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "13535:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13539:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "13535:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2526,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1857,
															2070,
															2286,
															2532,
															2751
														],
														"referencedDeclaration": 1857,
														"src": "13528:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13528:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2530,
												"nodeType": "Return",
												"src": "13521:25:8"
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "13356:72:8",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "13442:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13474:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "13449:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2520,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2519,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13449:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "13449:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "13449:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13448:30:8"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "13502:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13502:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13501:9:8"
									},
									"scope": 2865,
									"src": "13433:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2571,
										"nodeType": "Block",
										"src": "13988:134:8",
										"statements": [
											{
												"assignments": [
													2546,
													2548
												],
												"declarations": [
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "14007:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "13999:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2545,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13999:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2548,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "14020:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "14012:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2547,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14012:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2554,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2550,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "14032:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14036:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "14032:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2552,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "14044:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2549,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2104,
															2326,
															2572,
															2782
														],
														"referencedDeclaration": 1886,
														"src": "14029:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14029:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13998:52:8"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2561,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2546,
																					"src": "14092:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14084:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2559,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14084:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14084:12:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14076:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2557,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "14076:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14076:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14068:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14068:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14068:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2548,
																	"src": "14108:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14100:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2565,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14100:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14100:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2569,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14067:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 2544,
												"id": 2570,
												"nodeType": "Return",
												"src": "14060:55:8"
											}
										]
									},
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "13559:326:8",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "13899:2:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13927:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13902:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2535,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2534,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13902:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "13902:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "13902:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13940:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13932:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13932:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13901:45:8"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13970:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13979:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:18:8"
									},
									"scope": 2865,
									"src": "13890:232:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "14360:141:8",
										"statements": [
											{
												"assignments": [
													2586,
													2588
												],
												"declarations": [
													{
														"constant": false,
														"id": 2586,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14376:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "14371:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2585,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14371:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2588,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "14393:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "14385:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2587,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14385:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2603,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2590,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2576,
																"src": "14409:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2591,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14413:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "14409:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2598,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2578,
																					"src": "14445:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14437:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2596,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "14437:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14437:12:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14429:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2594,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14429:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14429:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14421:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2592,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "14421:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14421:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2589,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1930,
															2138,
															2366,
															2612,
															2813
														],
														"referencedDeclaration": 1930,
														"src": "14402:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14402:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14370:82:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2604,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "14470:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2607,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "14487:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14479:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14479:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14479:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2609,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14469:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2584,
												"id": 2610,
												"nodeType": "Return",
												"src": "14462:32:8"
											}
										]
									},
									"documentation": {
										"id": 2573,
										"nodeType": "StructuredDocumentation",
										"src": "14128:130:8",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "14272:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14304:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "14279:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2574,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14279:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "14279:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "14279:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14317:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "14309:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14309:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14278:43:8"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "14345:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2580,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14345:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "14351:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14351:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14344:15:8"
									},
									"scope": 2865,
									"src": "14263:238:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2641,
										"nodeType": "Block",
										"src": "14740:80:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2626,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2616,
																		"src": "14769:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14773:6:8",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2429,
																	"src": "14769:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2634,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2618,
																							"src": "14805:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14797:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2632,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14797:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14797:12:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14789:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2630,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14789:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14789:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14781:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2628,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "14781:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14781:30:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2625,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1966,
																	2162,
																	2396,
																	2642,
																	2834
																],
																"referencedDeclaration": 1966,
																"src": "14765:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14765:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14757:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2623,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14757:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14757:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2622,
												"id": 2640,
												"nodeType": "Return",
												"src": "14750:63:8"
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "14507:140:8",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "14661:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14690:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "14665:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2614,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14665:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "14665:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "14665:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14703:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "14695:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14664:43:8"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "14731:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14731:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14730:9:8"
									},
									"scope": 2865,
									"src": "14652:168:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "15455:216:8",
										"statements": [
											{
												"assignments": [
													2656
												],
												"declarations": [
													{
														"constant": false,
														"id": 2656,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "15482:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "15465:22:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2654,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "15465:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2655,
															"nodeType": "ArrayTypeName",
															"src": "15465:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2661,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2658,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2646,
																"src": "15495:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15499:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "15495:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2657,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1982,
															2192,
															2426,
															2672,
															2864
														],
														"referencedDeclaration": 1982,
														"src": "15490:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15490:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15465:41:8"
											},
											{
												"assignments": [
													2666
												],
												"declarations": [
													{
														"constant": false,
														"id": 2666,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "15533:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "15516:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2664,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15516:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2665,
															"nodeType": "ArrayTypeName",
															"src": "15516:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2667,
												"nodeType": "VariableDeclarationStatement",
												"src": "15516:23:8"
											},
											{
												"AST": {
													"nativeSrc": "15602:39:8",
													"nodeType": "YulBlock",
													"src": "15602:39:8",
													"statements": [
														{
															"nativeSrc": "15616:15:8",
															"nodeType": "YulAssignment",
															"src": "15616:15:8",
															"value": {
																"name": "store",
																"nativeSrc": "15626:5:8",
																"nodeType": "YulIdentifier",
																"src": "15626:5:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15616:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2666,
														"isOffset": false,
														"isSlot": false,
														"src": "15616:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2656,
														"isOffset": false,
														"isSlot": false,
														"src": "15626:5:8",
														"valueSize": 1
													}
												],
												"id": 2668,
												"nodeType": "InlineAssembly",
												"src": "15593:48:8"
											},
											{
												"expression": {
													"id": 2669,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2666,
													"src": "15658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2651,
												"id": 2670,
												"nodeType": "Return",
												"src": "15651:13:8"
											}
										]
									},
									"documentation": {
										"id": 2643,
										"nodeType": "StructuredDocumentation",
										"src": "14826:539:8",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "15379:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15409:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "15384:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2645,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2644,
														"name": "AddressToUintMap",
														"nameLocations": [
															"15384:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2430,
														"src": "15384:16:8"
													},
													"referencedDeclaration": 2430,
													"src": "15384:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2430_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15383:30:8"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "15437:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2648,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15437:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2649,
													"nodeType": "ArrayTypeName",
													"src": "15437:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15436:18:8"
									},
									"scope": 2865,
									"src": "15370:301:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToUintMap",
									"id": 2676,
									"members": [
										{
											"constant": false,
											"id": 2675,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "15756:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2676,
											"src": "15736:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2674,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2673,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"15736:19:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1772,
													"src": "15736:19:8"
												},
												"referencedDeclaration": 1772,
												"src": "15736:19:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToUintMap",
									"nameLocation": "15709:16:8",
									"nodeType": "StructDefinition",
									"scope": 2865,
									"src": "15702:67:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2699,
										"nodeType": "Block",
										"src": "16091:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2690,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "16112:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2691,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16116:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "16112:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2692,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "16124:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2695,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2684,
																	"src": "16137:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16129:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2693,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "16129:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16129:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2689,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1800,
															2013,
															2229,
															2463,
															2700
														],
														"referencedDeclaration": 1800,
														"src": "16108:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16108:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2688,
												"id": 2698,
												"nodeType": "Return",
												"src": "16101:43:8"
											}
										]
									},
									"documentation": {
										"id": 2677,
										"nodeType": "StructuredDocumentation",
										"src": "15775:216:8",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "16005:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16034:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "16009:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2679,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2678,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16009:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "16009:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "16009:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16047:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "16039:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16060:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "16052:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16008:58:8"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "16085:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16084:6:8"
									},
									"scope": 2865,
									"src": "15996:155:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "16393:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2712,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "16417:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16421:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "16417:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2714,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2706,
															"src": "16429:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2711,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1824,
															2034,
															2250,
															2490,
															2718
														],
														"referencedDeclaration": 1824,
														"src": "16410:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16410:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2710,
												"id": 2716,
												"nodeType": "Return",
												"src": "16403:30:8"
											}
										]
									},
									"documentation": {
										"id": 2701,
										"nodeType": "StructuredDocumentation",
										"src": "16157:148:8",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "16319:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16351:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "16326:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2702,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16326:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "16326:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "16326:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16364:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "16356:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16325:43:8"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "16387:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16387:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16386:6:8"
									},
									"scope": 2865,
									"src": "16310:130:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "16609:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2730,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2722,
																"src": "16635:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16639:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "16635:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2732,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "16647:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2729,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1842,
															2055,
															2271,
															2517,
															2736
														],
														"referencedDeclaration": 1842,
														"src": "16626:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16626:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2728,
												"id": 2734,
												"nodeType": "Return",
												"src": "16619:32:8"
											}
										]
									},
									"documentation": {
										"id": 2719,
										"nodeType": "StructuredDocumentation",
										"src": "16446:68:8",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "16528:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16562:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "16537:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2720,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16537:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "16537:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "16537:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16575:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "16567:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2723,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16536:43:8"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "16603:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2726,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16603:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16602:6:8"
									},
									"scope": 2865,
									"src": "16519:139:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "16819:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2746,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2740,
																"src": "16843:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16847:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "16843:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2745,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1857,
															2070,
															2286,
															2532,
															2751
														],
														"referencedDeclaration": 1857,
														"src": "16836:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16836:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2744,
												"id": 2749,
												"nodeType": "Return",
												"src": "16829:25:8"
											}
										]
									},
									"documentation": {
										"id": 2737,
										"nodeType": "StructuredDocumentation",
										"src": "16664:72:8",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "16750:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16782:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "16757:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2738,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16757:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "16757:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "16757:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16756:30:8"
									},
									"returnParameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "16810:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16809:9:8"
									},
									"scope": 2865,
									"src": "16741:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "17296:107:8",
										"statements": [
											{
												"assignments": [
													2765,
													2767
												],
												"declarations": [
													{
														"constant": false,
														"id": 2765,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "17315:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 2781,
														"src": "17307:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2764,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17307:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2767,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "17328:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2781,
														"src": "17320:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2766,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17320:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2773,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2769,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "17340:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17344:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "17340:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2771,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "17352:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2768,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2104,
															2326,
															2572,
															2782
														],
														"referencedDeclaration": 1886,
														"src": "17337:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17337:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17306:52:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2774,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "17376:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2767,
																	"src": "17389:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17381:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2775,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17381:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17381:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2779,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17375:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 2763,
												"id": 2780,
												"nodeType": "Return",
												"src": "17368:28:8"
											}
										]
									},
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "16867:326:8",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "17207:2:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17235:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "17210:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2753,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17210:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "17210:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "17210:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "17248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "17240:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17240:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17209:45:8"
									},
									"returnParameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "17278:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2759,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17278:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "17287:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17287:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17277:18:8"
									},
									"scope": 2865,
									"src": "17198:205:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "17641:114:8",
										"statements": [
											{
												"assignments": [
													2796,
													2798
												],
												"declarations": [
													{
														"constant": false,
														"id": 2796,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17657:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "17652:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2795,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17652:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2798,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "17674:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "17666:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2797,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17666:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2804,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2800,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2786,
																"src": "17690:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17694:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "17690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2802,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2788,
															"src": "17702:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2799,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1930,
															2138,
															2366,
															2612,
															2813
														],
														"referencedDeclaration": 1930,
														"src": "17683:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17683:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17651:55:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2805,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "17724:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2808,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "17741:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17733:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2806,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17733:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17733:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2810,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17723:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2794,
												"id": 2811,
												"nodeType": "Return",
												"src": "17716:32:8"
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "17409:130:8",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "17553:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17585:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17560:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2784,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17560:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "17560:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "17560:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17598:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17590:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17559:43:8"
									},
									"returnParameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17626:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17626:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17632:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17625:15:8"
									},
									"scope": 2865,
									"src": "17544:211:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2833,
										"nodeType": "Block",
										"src": "17994:53:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2827,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "18023:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18027:6:8",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2675,
																	"src": "18023:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2829,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "18035:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2826,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1966,
																	2162,
																	2396,
																	2642,
																	2834
																],
																"referencedDeclaration": 1966,
																"src": "18019:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18019:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "18011:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2824,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18011:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18011:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2823,
												"id": 2832,
												"nodeType": "Return",
												"src": "18004:36:8"
											}
										]
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "17761:140:8",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "17915:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17944:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "17919:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2815,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17919:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "17919:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "17919:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17957:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "17949:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2818,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17949:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17918:43:8"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "17985:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17985:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17984:9:8"
									},
									"scope": 2865,
									"src": "17906:141:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2863,
										"nodeType": "Block",
										"src": "18682:216:8",
										"statements": [
											{
												"assignments": [
													2848
												],
												"declarations": [
													{
														"constant": false,
														"id": 2848,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "18709:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2863,
														"src": "18692:22:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2846,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "18692:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2847,
															"nodeType": "ArrayTypeName",
															"src": "18692:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2853,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2850,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "18722:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18726:6:8",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2675,
															"src": "18722:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1772_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2849,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1982,
															2192,
															2426,
															2672,
															2864
														],
														"referencedDeclaration": 1982,
														"src": "18717:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1772_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18717:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18692:41:8"
											},
											{
												"assignments": [
													2858
												],
												"declarations": [
													{
														"constant": false,
														"id": 2858,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18760:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2863,
														"src": "18743:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2856,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "18743:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2857,
															"nodeType": "ArrayTypeName",
															"src": "18743:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2859,
												"nodeType": "VariableDeclarationStatement",
												"src": "18743:23:8"
											},
											{
												"AST": {
													"nativeSrc": "18829:39:8",
													"nodeType": "YulBlock",
													"src": "18829:39:8",
													"statements": [
														{
															"nativeSrc": "18843:15:8",
															"nodeType": "YulAssignment",
															"src": "18843:15:8",
															"value": {
																"name": "store",
																"nativeSrc": "18853:5:8",
																"nodeType": "YulIdentifier",
																"src": "18853:5:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18843:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18843:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2858,
														"isOffset": false,
														"isSlot": false,
														"src": "18843:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2848,
														"isOffset": false,
														"isSlot": false,
														"src": "18853:5:8",
														"valueSize": 1
													}
												],
												"id": 2860,
												"nodeType": "InlineAssembly",
												"src": "18820:48:8"
											},
											{
												"expression": {
													"id": 2861,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2858,
													"src": "18885:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2862,
												"nodeType": "Return",
												"src": "18878:13:8"
											}
										]
									},
									"documentation": {
										"id": 2835,
										"nodeType": "StructuredDocumentation",
										"src": "18053:539:8",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "18606:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "18636:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "18611:28:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2836,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"18611:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2676,
														"src": "18611:16:8"
													},
													"referencedDeclaration": 2676,
													"src": "18611:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2676_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18610:30:8"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "18664:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2840,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "18664:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2841,
													"nodeType": "ArrayTypeName",
													"src": "18664:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18663:18:8"
									},
									"scope": 2865,
									"src": "18597:301:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2866,
							"src": "1651:17249:8",
							"usedErrors": [
								1764
							],
							"usedEvents": []
						}
					],
					"src": "205:18696:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							3478
						]
					},
					"id": 3479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2867,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2868,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:9",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 3478,
							"linearizedBaseContracts": [
								3478
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2876,
									"members": [
										{
											"constant": false,
											"id": 2871,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 2876,
											"src": "1852:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2869,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2870,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2875,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2876,
											"src": "2020:44:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2874,
												"keyName": "value",
												"keyNameLocation": "2036:5:9",
												"keyType": {
													"id": 2872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:9",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:9",
									"nodeType": "StructDefinition",
									"scope": 3478,
									"src": "1798:273:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "2310:337:9",
										"statements": [
											{
												"condition": {
													"id": 2891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:9",
													"subExpression": {
														"arguments": [
															{
																"id": 2888,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2880,
																"src": "2335:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 2889,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2882,
																"src": "2340:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2887,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3021,
															"src": "2325:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2915,
													"nodeType": "Block",
													"src": "2604:37:9",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2886,
															"id": 2914,
															"nodeType": "Return",
															"src": "2618:12:9"
														}
													]
												},
												"id": 2916,
												"nodeType": "IfStatement",
												"src": "2320:321:9",
												"trueBody": {
													"id": 2912,
													"nodeType": "Block",
													"src": "2348:250:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2897,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2882,
																		"src": "2379:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2892,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "2362:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:9",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2871,
																		"src": "2362:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2899,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:9"
														},
														{
															"expression": {
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 2900,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "2520:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:9",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2875,
																		"src": "2520:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2904,
																	"indexExpression": {
																		"id": 2902,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2882,
																		"src": "2535:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 2905,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "2544:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:9",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2871,
																		"src": "2544:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2909,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:9"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2886,
															"id": 2911,
															"nodeType": "Return",
															"src": "2576:11:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2877,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:9",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "2255:15:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2878,
														"name": "Set",
														"nameLocations": [
															"2255:3:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2876,
														"src": "2255:3:9"
													},
													"referencedDeclaration": 2876,
													"src": "2255:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "2272:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:9"
									},
									"returnParameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "2304:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:9"
									},
									"scope": 3478,
									"src": "2241:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "2887:1296:9",
										"statements": [
											{
												"assignments": [
													2930
												],
												"declarations": [
													{
														"constant": false,
														"id": 2930,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 3001,
														"src": "2991:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2935,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2931,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "3010:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2932,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:9",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2875,
														"src": "3010:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2934,
													"indexExpression": {
														"id": 2933,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "3025:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2936,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2930,
														"src": "3046:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2999,
													"nodeType": "Block",
													"src": "4140:37:9",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2928,
															"id": 2998,
															"nodeType": "Return",
															"src": "4154:12:9"
														}
													]
												},
												"id": 3000,
												"nodeType": "IfStatement",
												"src": "3042:1135:9",
												"trueBody": {
													"id": 2996,
													"nodeType": "Block",
													"src": "3061:1073:9",
													"statements": [
														{
															"assignments": [
																2940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2940,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2996,
																	"src": "3413:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2939,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2944,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2941,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2930,
																	"src": "3434:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:9"
														},
														{
															"assignments": [
																2946
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2946,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2996,
																	"src": "3460:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2945,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2952,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 2947,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2922,
																			"src": "3480:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:9",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2871,
																		"src": "3480:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2953,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2940,
																	"src": "3521:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2954,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2946,
																	"src": "3535:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2980,
															"nodeType": "IfStatement",
															"src": "3517:378:9",
															"trueBody": {
																"id": 2979,
																"nodeType": "Block",
																"src": "3546:349:9",
																"statements": [
																	{
																		"assignments": [
																			2957
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2957,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2979,
																				"src": "3564:17:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2956,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2962,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 2958,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2922,
																					"src": "3584:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 2959,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:9",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2871,
																				"src": "3584:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 2961,
																			"indexExpression": {
																				"id": 2960,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2946,
																				"src": "3596:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:9"
																	},
																	{
																		"expression": {
																			"id": 2969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2963,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2922,
																						"src": "3705:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2966,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:9",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2871,
																					"src": "3705:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 2967,
																				"indexExpression": {
																					"id": 2965,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "3717:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2968,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2957,
																				"src": "3731:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2970,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:9"
																	},
																	{
																		"expression": {
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2971,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2922,
																						"src": "3844:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2974,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:9",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2875,
																					"src": "3844:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 2975,
																				"indexExpression": {
																					"id": 2973,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2957,
																					"src": "3859:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2976,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2930,
																				"src": "3872:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2978,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:9"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2981,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2922,
																			"src": "3973:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:9",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2871,
																		"src": "3973:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:9",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 2986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2987,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:9"
														},
														{
															"expression": {
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:9",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2988,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2922,
																			"src": "4076:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:9",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2875,
																		"src": "4076:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2991,
																	"indexExpression": {
																		"id": 2990,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2924,
																		"src": "4091:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2993,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:9"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2928,
															"id": 2995,
															"nodeType": "Return",
															"src": "4112:11:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:9",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "2832:15:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2920,
														"name": "Set",
														"nameLocations": [
															"2832:3:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2876,
														"src": "2832:3:9"
													},
													"referencedDeclaration": 2876,
													"src": "2832:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "2849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:9"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "2881:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:9"
									},
									"scope": 3478,
									"src": "2815:1368:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3020,
										"nodeType": "Block",
										"src": "4343:50:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 3013,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3006,
																"src": "4360:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 3014,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:9",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2875,
															"src": "4360:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 3016,
														"indexExpression": {
															"id": 3015,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "4375:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3012,
												"id": 3019,
												"nodeType": "Return",
												"src": "4353:33:9"
											}
										]
									},
									"documentation": {
										"id": 3003,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:9",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "4283:15:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3005,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3004,
														"name": "Set",
														"nameLocations": [
															"4283:3:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2876,
														"src": "4283:3:9"
													},
													"referencedDeclaration": 2876,
													"src": "4283:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "4300:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3007,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:9"
									},
									"returnParameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "4337:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3010,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:9"
									},
									"scope": 3478,
									"src": "4264:129:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3034,
										"nodeType": "Block",
										"src": "4539:42:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 3030,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3025,
															"src": "4556:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 3031,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:9",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2871,
														"src": "4556:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3033,
												"nodeType": "Return",
												"src": "4549:25:9"
											}
										]
									},
									"documentation": {
										"id": 3022,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:9",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 3035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "4491:15:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3023,
														"name": "Set",
														"nameLocations": [
															"4491:3:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2876,
														"src": "4491:3:9"
													},
													"referencedDeclaration": 2876,
													"src": "4491:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:9"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "4530:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:9"
									},
									"scope": 3478,
									"src": "4474:107:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "4999:42:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 3046,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3039,
															"src": "5016:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 3047,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:9",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2871,
														"src": "5016:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 3049,
													"indexExpression": {
														"id": 3048,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "5028:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3045,
												"id": 3050,
												"nodeType": "Return",
												"src": "5009:25:9"
											}
										]
									},
									"documentation": {
										"id": 3036,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:9",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "4936:15:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3038,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3037,
														"name": "Set",
														"nameLocations": [
															"4936:3:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2876,
														"src": "4936:3:9"
													},
													"referencedDeclaration": 2876,
													"src": "4936:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "4953:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:9"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "4990:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3043,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:9"
									},
									"scope": 3478,
									"src": "4923:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "5655:35:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3062,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "5672:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:9",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2871,
													"src": "5672:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 3061,
												"id": 3064,
												"nodeType": "Return",
												"src": "5665:18:9"
											}
										]
									},
									"documentation": {
										"id": 3053,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:9",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "5598:15:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3054,
														"name": "Set",
														"nameLocations": [
															"5598:3:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2876,
														"src": "5598:3:9"
													},
													"referencedDeclaration": 2876,
													"src": "5598:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:9"
									},
									"returnParameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "5637:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3058,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3059,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:9"
									},
									"scope": 3478,
									"src": "5581:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 3070,
									"members": [
										{
											"constant": false,
											"id": 3069,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 3070,
											"src": "5743:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3068,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3067,
													"name": "Set",
													"nameLocations": [
														"5743:3:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2876,
													"src": "5743:3:9"
												},
												"referencedDeclaration": 2876,
												"src": "5743:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:9",
									"nodeType": "StructDefinition",
									"scope": 3478,
									"src": "5715:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3087,
										"nodeType": "Block",
										"src": "6006:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3082,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3074,
																"src": "6028:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3069,
															"src": "6028:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3084,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3076,
															"src": "6040:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3081,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "6023:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3080,
												"id": 3086,
												"nodeType": "Return",
												"src": "6016:30:9"
											}
										]
									},
									"documentation": {
										"id": 3071,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:9",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "5943:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3072,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3070,
														"src": "5943:10:9"
													},
													"referencedDeclaration": 3070,
													"src": "5943:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "5967:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:9"
									},
									"returnParameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "6000:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:9"
									},
									"scope": 3478,
									"src": "5930:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3105,
										"nodeType": "Block",
										"src": "6300:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3100,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3092,
																"src": "6325:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3101,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3069,
															"src": "6325:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3094,
															"src": "6337:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3099,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "6317:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3098,
												"id": 3104,
												"nodeType": "Return",
												"src": "6310:33:9"
											}
										]
									},
									"documentation": {
										"id": 3089,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:9",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "6237:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3091,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3090,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3070,
														"src": "6237:10:9"
													},
													"referencedDeclaration": 3070,
													"src": "6237:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "6261:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3093,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:9"
									},
									"returnParameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "6294:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:9"
									},
									"scope": 3478,
									"src": "6221:129:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3123,
										"nodeType": "Block",
										"src": "6517:52:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3118,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3110,
																"src": "6544:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3119,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3069,
															"src": "6544:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3120,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3112,
															"src": "6556:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3117,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3021,
														"src": "6534:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3116,
												"id": 3122,
												"nodeType": "Return",
												"src": "6527:35:9"
											}
										]
									},
									"documentation": {
										"id": 3107,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:9",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "6449:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3108,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3070,
														"src": "6449:10:9"
													},
													"referencedDeclaration": 3070,
													"src": "6449:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "6473:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:9"
									},
									"returnParameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "6511:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:9"
									},
									"scope": 3478,
									"src": "6431:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3138,
										"nodeType": "Block",
										"src": "6722:43:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3134,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3128,
																"src": "6747:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3069,
															"src": "6747:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3133,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "6739:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3132,
												"id": 3137,
												"nodeType": "Return",
												"src": "6732:26:9"
											}
										]
									},
									"documentation": {
										"id": 3125,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:9",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "6666:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3126,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3070,
														"src": "6666:10:9"
													},
													"referencedDeclaration": 3070,
													"src": "6666:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:9"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "6713:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:9"
									},
									"scope": 3478,
									"src": "6650:115:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3156,
										"nodeType": "Block",
										"src": "7190:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3151,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3143,
																"src": "7211:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3152,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3069,
															"src": "7211:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3153,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "7223:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3150,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3052,
														"src": "7207:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 3154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3149,
												"id": 3155,
												"nodeType": "Return",
												"src": "7200:29:9"
											}
										]
									},
									"documentation": {
										"id": 3140,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:9",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "7119:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3141,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3070,
														"src": "7119:10:9"
													},
													"referencedDeclaration": 3070,
													"src": "7119:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "7143:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:9"
									},
									"returnParameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "7181:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:9"
									},
									"scope": 3478,
									"src": "7107:129:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3186,
										"nodeType": "Block",
										"src": "7857:219:9",
										"statements": [
											{
												"assignments": [
													3171
												],
												"declarations": [
													{
														"constant": false,
														"id": 3171,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 3186,
														"src": "7867:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3169,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3170,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3176,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3173,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3161,
																"src": "7900:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3069,
															"src": "7900:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3172,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "7892:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:9"
											},
											{
												"assignments": [
													3181
												],
												"declarations": [
													{
														"constant": false,
														"id": 3181,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 3186,
														"src": "7921:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3179,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3180,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3182,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:9"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:9",
													"nodeType": "YulBlock",
													"src": "8007:39:9",
													"statements": [
														{
															"nativeSrc": "8021:15:9",
															"nodeType": "YulAssignment",
															"src": "8021:15:9",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:9",
																"nodeType": "YulIdentifier",
																"src": "8031:5:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3181,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:9",
														"valueSize": 1
													},
													{
														"declaration": 3171,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:9",
														"valueSize": 1
													}
												],
												"id": 3183,
												"nodeType": "InlineAssembly",
												"src": "7998:48:9"
											},
											{
												"expression": {
													"id": 3184,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3181,
													"src": "8063:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 3166,
												"id": 3185,
												"nodeType": "Return",
												"src": "8056:13:9"
											}
										]
									},
									"documentation": {
										"id": 3158,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:9",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3187,
												"src": "7792:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3160,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3159,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3070,
														"src": "7792:10:9"
													},
													"referencedDeclaration": 3070,
													"src": "7792:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3070_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:9"
									},
									"returnParameters": {
										"id": 3166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3187,
												"src": "7839:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3163,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3164,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:9"
									},
									"scope": 3478,
									"src": "7776:300:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 3191,
									"members": [
										{
											"constant": false,
											"id": 3190,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 3191,
											"src": "8129:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3189,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3188,
													"name": "Set",
													"nameLocations": [
														"8129:3:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2876,
													"src": "8129:3:9"
												},
												"referencedDeclaration": 2876,
												"src": "8129:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:9",
									"nodeType": "StructDefinition",
									"scope": 3478,
									"src": "8101:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "8392:74:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3203,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3195,
																"src": "8414:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "8414:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3211,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3197,
																					"src": "8450:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3209,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3207,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3205,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3202,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "8409:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3201,
												"id": 3216,
												"nodeType": "Return",
												"src": "8402:57:9"
											}
										]
									},
									"documentation": {
										"id": 3192,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:9",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "8329:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3193,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3191,
														"src": "8329:10:9"
													},
													"referencedDeclaration": 3191,
													"src": "8329:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "8353:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:9"
									},
									"returnParameters": {
										"id": 3201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "8386:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:9"
									},
									"scope": 3478,
									"src": "8316:150:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3244,
										"nodeType": "Block",
										"src": "8713:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3230,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3222,
																"src": "8738:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3231,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "8738:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3238,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3224,
																					"src": "8774:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3236,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3234,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3232,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3229,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "8730:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3228,
												"id": 3243,
												"nodeType": "Return",
												"src": "8723:60:9"
											}
										]
									},
									"documentation": {
										"id": 3219,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:9",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "8650:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3220,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3191,
														"src": "8650:10:9"
													},
													"referencedDeclaration": 3191,
													"src": "8650:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "8674:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:9"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "8707:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:9"
									},
									"scope": 3478,
									"src": "8634:156:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3271,
										"nodeType": "Block",
										"src": "8957:79:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3257,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3249,
																"src": "8984:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3258,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "8984:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3265,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3251,
																					"src": "9020:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3263,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3261,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3259,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3256,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3021,
														"src": "8974:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3255,
												"id": 3270,
												"nodeType": "Return",
												"src": "8967:62:9"
											}
										]
									},
									"documentation": {
										"id": 3246,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:9",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3249,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3272,
												"src": "8889:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3247,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3191,
														"src": "8889:10:9"
													},
													"referencedDeclaration": 3191,
													"src": "8889:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3272,
												"src": "8913:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:9"
									},
									"returnParameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3272,
												"src": "8951:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:9"
									},
									"scope": 3478,
									"src": "8871:165:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3286,
										"nodeType": "Block",
										"src": "9189:43:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3282,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3276,
																"src": "9214:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "9214:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3281,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "9206:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3280,
												"id": 3285,
												"nodeType": "Return",
												"src": "9199:26:9"
											}
										]
									},
									"documentation": {
										"id": 3273,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:9",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "9133:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3274,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3191,
														"src": "9133:10:9"
													},
													"referencedDeclaration": 3191,
													"src": "9133:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:9"
									},
									"returnParameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "9180:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:9"
									},
									"scope": 3478,
									"src": "9117:115:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3313,
										"nodeType": "Block",
										"src": "9657:73:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3305,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3291,
																						"src": "9702:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 3306,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:9",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3190,
																					"src": "9702:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2876_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 3307,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3293,
																					"src": "9714:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$2876_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3304,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3052,
																				"src": "9698:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 3308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 3303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3302,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 3300,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 3299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3298,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3297,
												"id": 3312,
												"nodeType": "Return",
												"src": "9667:56:9"
											}
										]
									},
									"documentation": {
										"id": 3288,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:9",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "9586:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3289,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3191,
														"src": "9586:10:9"
													},
													"referencedDeclaration": 3191,
													"src": "9586:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "9610:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:9"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "9648:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:9"
									},
									"scope": 3478,
									"src": "9574:156:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3343,
										"nodeType": "Block",
										"src": "10351:219:9",
										"statements": [
											{
												"assignments": [
													3328
												],
												"declarations": [
													{
														"constant": false,
														"id": 3328,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 3343,
														"src": "10361:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3326,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3327,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3333,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3330,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3318,
																"src": "10394:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3331,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "10394:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3329,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "10386:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:9"
											},
											{
												"assignments": [
													3338
												],
												"declarations": [
													{
														"constant": false,
														"id": 3338,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 3343,
														"src": "10415:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3336,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3337,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3339,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:9"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:9",
													"nodeType": "YulBlock",
													"src": "10501:39:9",
													"statements": [
														{
															"nativeSrc": "10515:15:9",
															"nodeType": "YulAssignment",
															"src": "10515:15:9",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:9",
																"nodeType": "YulIdentifier",
																"src": "10525:5:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3338,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:9",
														"valueSize": 1
													},
													{
														"declaration": 3328,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:9",
														"valueSize": 1
													}
												],
												"id": 3340,
												"nodeType": "InlineAssembly",
												"src": "10492:48:9"
											},
											{
												"expression": {
													"id": 3341,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3338,
													"src": "10557:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 3323,
												"id": 3342,
												"nodeType": "Return",
												"src": "10550:13:9"
											}
										]
									},
									"documentation": {
										"id": 3315,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:9",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3318,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "10286:22:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3317,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3316,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3191,
														"src": "10286:10:9"
													},
													"referencedDeclaration": 3191,
													"src": "10286:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3191_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:9"
									},
									"returnParameters": {
										"id": 3323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "10333:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3321,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:9"
									},
									"scope": 3478,
									"src": "10270:300:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 3348,
									"members": [
										{
											"constant": false,
											"id": 3347,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 3348,
											"src": "10617:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3346,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3345,
													"name": "Set",
													"nameLocations": [
														"10617:3:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2876,
													"src": "10617:3:9"
												},
												"referencedDeclaration": 2876,
												"src": "10617:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2876_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:9",
									"nodeType": "StructDefinition",
									"scope": 3478,
									"src": "10592:42:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3368,
										"nodeType": "Block",
										"src": "10877:56:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3360,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3352,
																"src": "10899:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3361,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3347,
															"src": "10899:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3364,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3354,
																	"src": "10919:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3362,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3359,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "10894:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3358,
												"id": 3367,
												"nodeType": "Return",
												"src": "10887:39:9"
											}
										]
									},
									"documentation": {
										"id": 3349,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:9",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "10817:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3350,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3348,
														"src": "10817:7:9"
													},
													"referencedDeclaration": 3348,
													"src": "10817:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "10838:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:9"
									},
									"returnParameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "10871:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:9"
									},
									"scope": 3478,
									"src": "10804:129:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3389,
										"nodeType": "Block",
										"src": "11177:59:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3381,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3373,
																"src": "11202:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3382,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3347,
															"src": "11202:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3375,
																	"src": "11222:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3383,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3380,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "11194:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3379,
												"id": 3388,
												"nodeType": "Return",
												"src": "11187:42:9"
											}
										]
									},
									"documentation": {
										"id": 3370,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:9",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "11117:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3371,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3348,
														"src": "11117:7:9"
													},
													"referencedDeclaration": 3348,
													"src": "11117:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "11138:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:9"
									},
									"returnParameters": {
										"id": 3379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "11171:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:9"
									},
									"scope": 3478,
									"src": "11101:135:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3410,
										"nodeType": "Block",
										"src": "11400:61:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3402,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3394,
																"src": "11427:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3403,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3347,
															"src": "11427:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3406,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3396,
																	"src": "11447:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3404,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3401,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3021,
														"src": "11417:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3400,
												"id": 3409,
												"nodeType": "Return",
												"src": "11410:44:9"
											}
										]
									},
									"documentation": {
										"id": 3391,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:9",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3394,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "11335:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3392,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3348,
														"src": "11335:7:9"
													},
													"referencedDeclaration": 3348,
													"src": "11335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "11356:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:9"
									},
									"returnParameters": {
										"id": 3400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "11394:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:9"
									},
									"scope": 3478,
									"src": "11317:144:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3425,
										"nodeType": "Block",
										"src": "11611:43:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3421,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3415,
																"src": "11636:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3422,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3347,
															"src": "11636:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3420,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "11628:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3419,
												"id": 3424,
												"nodeType": "Return",
												"src": "11621:26:9"
											}
										]
									},
									"documentation": {
										"id": 3412,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:9",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3415,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "11558:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3413,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3348,
														"src": "11558:7:9"
													},
													"referencedDeclaration": 3348,
													"src": "11558:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:9"
									},
									"returnParameters": {
										"id": 3419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "11602:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:9"
									},
									"scope": 3478,
									"src": "11542:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "12076:55:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3440,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3430,
																		"src": "12105:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 3441,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:9",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3347,
																	"src": "12105:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2876_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 3442,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3432,
																	"src": "12117:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2876_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3439,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3052,
																"src": "12101:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 3443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3436,
												"id": 3445,
												"nodeType": "Return",
												"src": "12086:38:9"
											}
										]
									},
									"documentation": {
										"id": 3427,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:9",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3430,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "12008:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3428,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3348,
														"src": "12008:7:9"
													},
													"referencedDeclaration": 3348,
													"src": "12008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "12029:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:9"
									},
									"returnParameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "12067:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:9"
									},
									"scope": 3478,
									"src": "11996:135:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3476,
										"nodeType": "Block",
										"src": "12749:219:9",
										"statements": [
											{
												"assignments": [
													3461
												],
												"declarations": [
													{
														"constant": false,
														"id": 3461,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 3476,
														"src": "12759:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3459,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3460,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3466,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3463,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3451,
																"src": "12792:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3464,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:9",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3347,
															"src": "12792:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2876_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3462,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "12784:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2876_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:9"
											},
											{
												"assignments": [
													3471
												],
												"declarations": [
													{
														"constant": false,
														"id": 3471,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 3476,
														"src": "12813:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3469,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3470,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3472,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:9"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:9",
													"nodeType": "YulBlock",
													"src": "12899:39:9",
													"statements": [
														{
															"nativeSrc": "12913:15:9",
															"nodeType": "YulAssignment",
															"src": "12913:15:9",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:9",
																"nodeType": "YulIdentifier",
																"src": "12923:5:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3471,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:9",
														"valueSize": 1
													},
													{
														"declaration": 3461,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:9",
														"valueSize": 1
													}
												],
												"id": 3473,
												"nodeType": "InlineAssembly",
												"src": "12890:48:9"
											},
											{
												"expression": {
													"id": 3474,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3471,
													"src": "12955:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3456,
												"id": 3475,
												"nodeType": "Return",
												"src": "12948:13:9"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:9",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3451,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "12687:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3449,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3348,
														"src": "12687:7:9"
													},
													"referencedDeclaration": 3348,
													"src": "12687:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3348_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:9"
									},
									"returnParameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "12731:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3453,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3454,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:9"
									},
									"scope": 3478,
									"src": "12671:297:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3479,
							"src": "1330:11640:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:9"
				},
				"id": 9
			},
			"@solvprotocol/erc-3525/IERC3525.sol": {
				"ast": {
					"absolutePath": "@solvprotocol/erc-3525/IERC3525.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						],
						"IERC3525": [
							3579
						],
						"IERC721": [
							3695
						]
					},
					"id": 3580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 3481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3580,
							"sourceUnit": 592,
							"src": "58:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 3482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3580,
							"sourceUnit": 3696,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3484,
										"name": "IERC165",
										"nameLocations": [
											"345:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 591,
										"src": "345:7:10"
									},
									"id": 3485,
									"nodeType": "InheritanceSpecifier",
									"src": "345:7:10"
								},
								{
									"baseName": {
										"id": 3486,
										"name": "IERC721",
										"nameLocations": [
											"354:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3695,
										"src": "354:7:10"
									},
									"id": 3487,
									"nodeType": "InheritanceSpecifier",
									"src": "354:7:10"
								}
							],
							"canonicalName": "IERC3525",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3483,
								"nodeType": "StructuredDocumentation",
								"src": "149:173:10",
								"text": " @title ERC-3525 Semi-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xd5358140."
							},
							"fullyImplemented": false,
							"id": 3579,
							"linearizedBaseContracts": [
								3579,
								3695,
								591
							],
							"name": "IERC3525",
							"nameLocation": "333:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3488,
										"nodeType": "StructuredDocumentation",
										"src": "368:434:10",
										"text": " @dev MUST emit when value of a token is transferred to another token with the same slot,\n  including zero value transfers (_value == 0) as well as transfers when tokens are created\n  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n @param _fromTokenId The token id to transfer value from\n @param _toTokenId The token id to transfer value to\n @param _value The transferred value"
									},
									"eventSelector": "0b2aac84f3ec956911fd78eae5311062972ff949f38412e8da39069d9f068cc6",
									"id": 3496,
									"name": "TransferValue",
									"nameLocation": "813:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3490,
												"indexed": true,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "843:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3496,
												"src": "827:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3492,
												"indexed": true,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "873:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3496,
												"src": "857:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3494,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 3496,
												"src": "885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:74:10"
									},
									"src": "807:94:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3497,
										"nodeType": "StructuredDocumentation",
										"src": "907:261:10",
										"text": " @dev MUST emits when the approval value of a token is set or changed.\n @param _tokenId The token to approve\n @param _operator The operator to approve for\n @param _value The maximum value that `_operator` is allowed to manage"
									},
									"eventSelector": "621b050de0ad08b51d19b48b3e6df75348c4de6bdd93e81b252ca62e28265b1b",
									"id": 3505,
									"name": "ApprovalValue",
									"nameLocation": "1179:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3499,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1209:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3505,
												"src": "1193:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3501,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1235:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 3505,
												"src": "1219:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3503,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1254:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 3505,
												"src": "1246:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:69:10"
									},
									"src": "1173:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3506,
										"nodeType": "StructuredDocumentation",
										"src": "1268:249:10",
										"text": " @dev MUST emit when the slot of a token is set or changed.\n @param _tokenId The token of which slot is set or changed\n @param _oldSlot The previous slot of the token\n @param _newSlot The updated slot of the token"
									},
									"eventSelector": "e4f48c240d3b994948aa54f3e2f5fca59263dfe1d52b6e4cf39a5d249b5ccb65",
									"id": 3514,
									"name": "SlotChanged",
									"nameLocation": "1529:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3508,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1557:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3514,
												"src": "1541:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3510,
												"indexed": true,
												"mutability": "mutable",
												"name": "_oldSlot",
												"nameLocation": "1583:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3514,
												"src": "1567:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3512,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newSlot",
												"nameLocation": "1609:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3514,
												"src": "1593:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:78:10"
									},
									"src": "1523:96:10"
								},
								{
									"documentation": {
										"id": 3515,
										"nodeType": "StructuredDocumentation",
										"src": "1625:424:10",
										"text": " @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n  representation of the value of a token can be calculated by dividing it by 1,000,000.\n  Considering the compatibility with third-party wallets, this function is defined as\n  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n @return The number of decimals for value"
									},
									"functionSelector": "3e7e8669",
									"id": 3520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valueDecimals",
									"nameLocation": "2063:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:2:10"
									},
									"returnParameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3520,
												"src": "2102:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3517,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2102:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:7:10"
									},
									"scope": 3579,
									"src": "2054:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3521,
										"nodeType": "StructuredDocumentation",
										"src": "2115:155:10",
										"text": " @notice Get the value of a token.\n @param _tokenId The token for which to query the balance\n @return The value of `_tokenId`"
									},
									"functionSelector": "9cc7f708",
									"id": 3528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2284:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3523,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2302:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3528,
												"src": "2294:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:18:10"
									},
									"returnParameters": {
										"id": 3527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3528,
												"src": "2335:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:9:10"
									},
									"scope": 3579,
									"src": "2275:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3529,
										"nodeType": "StructuredDocumentation",
										"src": "2350:138:10",
										"text": " @notice Get the slot of a token.\n @param _tokenId The identifier for a token\n @return The slot of the token"
									},
									"functionSelector": "263f3e7e",
									"id": 3536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotOf",
									"nameLocation": "2502:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3531,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3536,
												"src": "2509:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:18:10"
									},
									"returnParameters": {
										"id": 3535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3536,
												"src": "2550:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:9:10"
									},
									"scope": 3579,
									"src": "2493:66:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3537,
										"nodeType": "StructuredDocumentation",
										"src": "2565:463:10",
										"text": " @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n  address for `_tokenId`.\n  MUST emit ApprovalValue event.\n @param _tokenId The token to approve\n @param _operator The operator to be approved\n @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage"
									},
									"functionSelector": "8cb0a511",
									"id": 3546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3042:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3539,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3067:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "3059:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3541,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3093:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "3085:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3543,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3120:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "3112:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:83:10"
									},
									"returnParameters": {
										"id": 3545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3149:0:10"
									},
									"scope": 3579,
									"src": "3033:117:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3547,
										"nodeType": "StructuredDocumentation",
										"src": "3156:309:10",
										"text": " @notice Get the maximum value of a token that an operator is allowed to manage.\n @param _tokenId The token for which to query the allowance\n @param _operator The address of an operator\n @return The current approval value of `_tokenId` that `_operator` is allowed to manage"
									},
									"functionSelector": "e345e0bc",
									"id": 3556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3479:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3549,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3497:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3556,
												"src": "3489:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3551,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3515:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 3556,
												"src": "3507:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:37:10"
									},
									"returnParameters": {
										"id": 3555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3556,
												"src": "3549:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:9:10"
									},
									"scope": 3579,
									"src": "3470:88:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3557,
										"nodeType": "StructuredDocumentation",
										"src": "3564:745:10",
										"text": " @notice Transfer value from a specified token to another specified token with the same slot.\n @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n  approved the whole `_fromTokenId` or part of it.\n  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `TransferValue` event.\n @param _fromTokenId The token to transfer value from\n @param _toTokenId The token to transfer value to\n @param _value The transferred value"
									},
									"functionSelector": "310ed7f0",
									"id": 3566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4323:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3559,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "4353:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "4345:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4345:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "4383:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "4375:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3563,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "4411:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "4403:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4335:88:10"
									},
									"returnParameters": {
										"id": 3565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:10"
									},
									"scope": 3579,
									"src": "4314:127:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3567,
										"nodeType": "StructuredDocumentation",
										"src": "4447:826:10",
										"text": " @notice Transfer value from a specified token to an address. The caller should confirm that\n  `_to` is capable of receiving ERC3525 tokens.\n @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n  the transferred value.\n  MUST revert if `_fromTokenId` is zero token id or does not exist.\n  MUST revert if `_to` is zero address.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `Transfer` and `TransferValue` events.\n @param _fromTokenId The token to transfer value from\n @param _to The address to transfer value to\n @param _value The transferred value\n @return ID of the new token created for `_to` which receives the transferred value"
									},
									"functionSelector": "0f485c02",
									"id": 3578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5287:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3569,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "5317:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5309:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3571,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5347:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5339:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5339:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5368:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5360:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:81:10"
									},
									"returnParameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5407:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5406:9:10"
									},
									"scope": 3579,
									"src": "5278:138:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3580,
							"src": "323:5095:10",
							"usedErrors": [],
							"usedEvents": [
								3496,
								3505,
								3514,
								3594,
								3603,
								3612
							]
						}
					],
					"src": "33:5386:10"
				},
				"id": 10
			},
			"@solvprotocol/erc-3525/IERC721.sol": {
				"ast": {
					"absolutePath": "@solvprotocol/erc-3525/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						],
						"IERC721": [
							3695
						]
					},
					"id": 3696,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 3582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3696,
							"sourceUnit": 592,
							"src": "58:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3584,
										"name": "IERC165",
										"nameLocations": [
											"319:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 591,
										"src": "319:7:11"
									},
									"id": 3585,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:11"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3583,
								"nodeType": "StructuredDocumentation",
								"src": "125:172:11",
								"text": " @title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x80ac58cd."
							},
							"fullyImplemented": false,
							"id": 3695,
							"linearizedBaseContracts": [
								3695,
								591
							],
							"name": "IERC721",
							"nameLocation": "308:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3586,
										"nodeType": "StructuredDocumentation",
										"src": "333:400:11",
										"text": " @dev This emits when ownership of any NFT changes by any mechanism.\n  This event emits when NFTs are created (`from` == 0) and destroyed\n  (`to` == 0). Exception: during contract creation, any number of NFTs\n  may be created and assigned without emitting Transfer. At the time of\n  any transfer, the approved address for that NFT (if any) is reset to none."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 3594,
									"name": "Transfer",
									"nameLocation": "744:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "769:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "753:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3590,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "792:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "776:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3592,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "813:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "797:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:70:11"
									},
									"src": "738:85:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3595,
										"nodeType": "StructuredDocumentation",
										"src": "829:293:11",
										"text": " @dev This emits when the approved address for an NFT is changed or\n  reaffirmed. The zero address indicates there is no approved address.\n  When a Transfer event emits, this also indicates that the approved\n  address for that NFT (if any) is reset to none."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 3603,
									"name": "Approval",
									"nameLocation": "1133:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3597,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1158:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3603,
												"src": "1142:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3599,
												"indexed": true,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1182:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3603,
												"src": "1166:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3601,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1209:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3603,
												"src": "1193:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:77:11"
									},
									"src": "1127:92:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3604,
										"nodeType": "StructuredDocumentation",
										"src": "1225:143:11",
										"text": " @dev This emits when an operator is enabled or disabled for an owner.\n  The operator can manage all NFTs of the owner."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 3612,
									"name": "ApprovalForAll",
									"nameLocation": "1379:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3606,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1410:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "1394:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3608,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1434:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "1418:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3610,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1450:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "1445:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1445:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:67:11"
									},
									"src": "1373:88:11"
								},
								{
									"documentation": {
										"id": 3613,
										"nodeType": "StructuredDocumentation",
										"src": "1467:330:11",
										"text": " @notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 3620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1811:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3615,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1829:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3620,
												"src": "1821:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:16:11"
									},
									"returnParameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3620,
												"src": "1860:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:9:11"
									},
									"scope": 3695,
									"src": "1802:67:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3621,
										"nodeType": "StructuredDocumentation",
										"src": "1875:258:11",
										"text": " @notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
									},
									"functionSelector": "6352211e",
									"id": 3628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2147:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3623,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2163:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "2155:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:18:11"
									},
									"returnParameters": {
										"id": 3627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "2196:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:9:11"
									},
									"scope": 3695,
									"src": "2138:67:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3629,
										"nodeType": "StructuredDocumentation",
										"src": "2211:844:11",
										"text": " @notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"functionSelector": "b88d4fde",
									"id": 3640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3069:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3094:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "3086:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3633,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3109:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "3101:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3101:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3635,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3122:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "3114:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3637,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3147:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "3132:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3132:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:67:11"
									},
									"returnParameters": {
										"id": 3639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:0:11"
									},
									"scope": 3695,
									"src": "3060:110:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3641,
										"nodeType": "StructuredDocumentation",
										"src": "3176:358:11",
										"text": " @notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "42842e0e",
									"id": 3650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3548:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3573:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "3565:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3645,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3588:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "3580:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3647,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3601:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "3593:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3593:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3564:46:11"
									},
									"returnParameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3627:0:11"
									},
									"scope": 3695,
									"src": "3539:89:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3651,
										"nodeType": "StructuredDocumentation",
										"src": "3634:581:11",
										"text": " @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "23b872dd",
									"id": 3660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4229:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4250:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3660,
												"src": "4242:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3655,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4265:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3660,
												"src": "4257:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4257:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3657,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4278:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3660,
												"src": "4270:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:46:11"
									},
									"returnParameters": {
										"id": 3659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4304:0:11"
									},
									"scope": 3695,
									"src": "4220:85:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3661,
										"nodeType": "StructuredDocumentation",
										"src": "4311:361:11",
										"text": " @notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
									},
									"functionSelector": "095ea7b3",
									"id": 3668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4686:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4702:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3668,
												"src": "4694:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3665,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4721:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3668,
												"src": "4713:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:37:11"
									},
									"returnParameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4747:0:11"
									},
									"scope": 3695,
									"src": "4677:71:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3669,
										"nodeType": "StructuredDocumentation",
										"src": "4754:394:11",
										"text": " @notice Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n  multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
									},
									"functionSelector": "a22cb465",
									"id": 3676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5162:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3671,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5188:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3676,
												"src": "5180:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5204:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3676,
												"src": "5199:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5199:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:35:11"
									},
									"returnParameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5223:0:11"
									},
									"scope": 3695,
									"src": "5153:71:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3677,
										"nodeType": "StructuredDocumentation",
										"src": "5230:272:11",
										"text": " @notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
									},
									"functionSelector": "081812fc",
									"id": 3684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5516:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3679,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5536:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3684,
												"src": "5528:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5528:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5527:18:11"
									},
									"returnParameters": {
										"id": 3683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3684,
												"src": "5569:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5569:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5568:9:11"
									},
									"scope": 3695,
									"src": "5507:71:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3685,
										"nodeType": "StructuredDocumentation",
										"src": "5584:302:11",
										"text": " @notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
									},
									"functionSelector": "e985e9c5",
									"id": 3694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5900:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3687,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5925:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3694,
												"src": "5917:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3689,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5941:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3694,
												"src": "5933:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5933:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:35:11"
									},
									"returnParameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3694,
												"src": "5975:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5975:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5974:6:11"
									},
									"scope": 3695,
									"src": "5891:90:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3696,
							"src": "298:5685:11",
							"usedErrors": [],
							"usedEvents": [
								3594,
								3603,
								3612
							]
						}
					],
					"src": "33:5951:11"
				},
				"id": 11
			},
			"@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol": {
				"ast": {
					"absolutePath": "@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						],
						"IERC3525": [
							3579
						],
						"IERC3525SlotApprovable": [
							3737
						],
						"IERC721": [
							3695
						]
					},
					"id": 3738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/IERC3525.sol",
							"file": "../IERC3525.sol",
							"id": 3698,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3738,
							"sourceUnit": 3580,
							"src": "58:25:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3700,
										"name": "IERC3525",
										"nameLocations": [
											"492:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3579,
										"src": "492:8:12"
									},
									"id": 3701,
									"nodeType": "InheritanceSpecifier",
									"src": "492:8:12"
								}
							],
							"canonicalName": "IERC3525SlotApprovable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3699,
								"nodeType": "StructuredDocumentation",
								"src": "85:370:12",
								"text": " @title ERC-3525 Semi-Fungible Token Standard, optional extension for approval of slot level\n @dev Interfaces for any contract that wants to support approval of slot level, which allows an\n  operator to manage one's tokens with the same slot.\n  See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xb688be58."
							},
							"fullyImplemented": false,
							"id": 3737,
							"linearizedBaseContracts": [
								3737,
								3579,
								3695,
								591
							],
							"name": "IERC3525SlotApprovable",
							"nameLocation": "466:22:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3702,
										"nodeType": "StructuredDocumentation",
										"src": "507:436:12",
										"text": " @dev MUST emits when an operator is approved or disapproved to manage all of `_owner`'s\n  tokens with the same slot.\n @param _owner The address whose tokens are approved\n @param _slot The slot to approve, all of `_owner`'s tokens with this slot are approved\n @param _operator The operator being approved or disapproved\n @param _approved Identify if `_operator` is approved or disapproved"
									},
									"eventSelector": "7bdf71e6625aa496095bf08b60c677cf81c963f402cf258981e3bd7507d3480c",
									"id": 3712,
									"name": "ApprovalForSlot",
									"nameLocation": "954:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3704,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "986:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "970:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3706,
												"indexed": true,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "1010:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "994:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3708,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1033:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "1017:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3710,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1049:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "1044:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:90:12"
									},
									"src": "948:112:12"
								},
								{
									"documentation": {
										"id": 3713,
										"nodeType": "StructuredDocumentation",
										"src": "1066:551:12",
										"text": " @notice Approve or disapprove an operator to manage all of `_owner`'s tokens with the\n  specified slot.\n @dev Caller SHOULD be `_owner` or an operator who has been authorized through\n  `setApprovalForAll`.\n  MUST emit ApprovalSlot event.\n @param _owner The address that owns the ERC3525 tokens\n @param _slot The slot of tokens being queried approval of\n @param _operator The address for whom to query approval\n @param _approved Identify if `_operator` would be approved or disapproved"
									},
									"functionSelector": "55cd4e06",
									"id": 3724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForSlot",
									"nameLocation": "1631:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3715,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1667:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3724,
												"src": "1659:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "1691:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3724,
												"src": "1683:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3719,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1714:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3724,
												"src": "1706:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3721,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1738:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3724,
												"src": "1733:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1733:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:104:12"
									},
									"returnParameters": {
										"id": 3723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:0:12"
									},
									"scope": 3737,
									"src": "1622:149:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3725,
										"nodeType": "StructuredDocumentation",
										"src": "1777:442:12",
										"text": " @notice Query if `_operator` is authorized to manage all of `_owner`'s tokens with the\n  specified slot.\n @param _owner The address that owns the ERC3525 tokens\n @param _slot The slot of tokens being queried approval of\n @param _operator The address for whom to query approval\n @return True if `_operator` is authorized to manage all of `_owner`'s tokens with `_slot`,\n  false otherwise."
									},
									"functionSelector": "e345f05e",
									"id": 3736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForSlot",
									"nameLocation": "2233:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3727,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2268:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "2260:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3729,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "2292:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "2284:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3731,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "2315:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "2307:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:80:12"
									},
									"returnParameters": {
										"id": 3735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "2354:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2354:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:6:12"
									},
									"scope": 3737,
									"src": "2224:136:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3738,
							"src": "456:1906:12",
							"usedErrors": [],
							"usedEvents": [
								3496,
								3505,
								3514,
								3594,
								3603,
								3612,
								3712
							]
						}
					],
					"src": "33:2330:12"
				},
				"id": 12
			},
			"@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol": {
				"ast": {
					"absolutePath": "@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						],
						"IERC3525": [
							3579
						],
						"IERC3525SlotEnumerable": [
							3779
						],
						"IERC721": [
							3695
						],
						"IERC721Enumerable": [
							3810
						]
					},
					"id": 3780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3739,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/IERC3525.sol",
							"file": "../IERC3525.sol",
							"id": 3740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3780,
							"sourceUnit": 3580,
							"src": "58:25:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 3741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3780,
							"sourceUnit": 3811,
							"src": "84:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3743,
										"name": "IERC3525",
										"nameLocations": [
											"487:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3579,
										"src": "487:8:13"
									},
									"id": 3744,
									"nodeType": "InheritanceSpecifier",
									"src": "487:8:13"
								},
								{
									"baseName": {
										"id": 3745,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"497:17:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3810,
										"src": "497:17:13"
									},
									"id": 3746,
									"nodeType": "InheritanceSpecifier",
									"src": "497:17:13"
								}
							],
							"canonicalName": "IERC3525SlotEnumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3742,
								"nodeType": "StructuredDocumentation",
								"src": "118:332:13",
								"text": " @title ERC-3525 Semi-Fungible Token Standard, optional extension for slot enumeration\n @dev Interfaces for any contract that wants to support enumeration of slots as well as tokens \n  with the same slot.\n  See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0x3b741b9e."
							},
							"fullyImplemented": false,
							"id": 3779,
							"linearizedBaseContracts": [
								3779,
								3810,
								3579,
								3695,
								591
							],
							"name": "IERC3525SlotEnumerable",
							"nameLocation": "461:22:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3747,
										"nodeType": "StructuredDocumentation",
										"src": "522:121:13",
										"text": " @notice Get the total amount of slots stored by the contract.\n @return The total amount of slots"
									},
									"functionSelector": "ed08fa80",
									"id": 3752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotCount",
									"nameLocation": "657:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:2:13"
									},
									"returnParameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3752,
												"src": "692:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:9:13"
									},
									"scope": 3779,
									"src": "648:53:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3753,
										"nodeType": "StructuredDocumentation",
										"src": "707:196:13",
										"text": " @notice Get the slot at the specified index of all slots stored by the contract.\n @param _index The index in the slot list\n @return The slot at `index` of all slots."
									},
									"functionSelector": "993bef8d",
									"id": 3760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotByIndex",
									"nameLocation": "917:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3755,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "937:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3760,
												"src": "929:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:16:13"
									},
									"returnParameters": {
										"id": 3759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3760,
												"src": "968:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:9:13"
									},
									"scope": 3779,
									"src": "908:69:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3761,
										"nodeType": "StructuredDocumentation",
										"src": "983:201:13",
										"text": " @notice Get the total amount of tokens with the same slot.\n @param _slot The slot to query token supply for\n @return The total amount of tokens with the specified `_slot`"
									},
									"functionSelector": "4f8a0f83",
									"id": 3768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenSupplyInSlot",
									"nameLocation": "1198:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3763,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "1224:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "1216:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:15:13"
									},
									"returnParameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "1254:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:9:13"
									},
									"scope": 3779,
									"src": "1189:74:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3769,
										"nodeType": "StructuredDocumentation",
										"src": "1269:275:13",
										"text": " @notice Get the token at the specified index of all tokens with the same slot.\n @param _slot The slot to query tokens with\n @param _index The index in the token list of the slot\n @return The token ID at `_index` of all tokens with `_slot`"
									},
									"functionSelector": "00cd0110",
									"id": 3778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenInSlotByIndex",
									"nameLocation": "1558:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3771,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "1585:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3778,
												"src": "1577:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "1600:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3778,
												"src": "1592:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:31:13"
									},
									"returnParameters": {
										"id": 3777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3778,
												"src": "1631:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:9:13"
									},
									"scope": 3779,
									"src": "1549:91:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3780,
							"src": "451:1191:13",
							"usedErrors": [],
							"usedEvents": [
								3496,
								3505,
								3514,
								3594,
								3603,
								3612
							]
						}
					],
					"src": "33:1610:13"
				},
				"id": 13
			},
			"@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@solvprotocol/erc-3525/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						],
						"IERC721": [
							3695
						],
						"IERC721Enumerable": [
							3810
						]
					},
					"id": 3811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 3782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3811,
							"sourceUnit": 3696,
							"src": "58:24:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3784,
										"name": "IERC721",
										"nameLocations": [
											"319:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3695,
										"src": "319:7:14"
									},
									"id": 3785,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:14"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3783,
								"nodeType": "StructuredDocumentation",
								"src": "84:203:14",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x780e9d63."
							},
							"fullyImplemented": false,
							"id": 3810,
							"linearizedBaseContracts": [
								3810,
								3695,
								591
							],
							"name": "IERC721Enumerable",
							"nameLocation": "298:17:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3786,
										"nodeType": "StructuredDocumentation",
										"src": "333:223:14",
										"text": " @notice Count NFTs tracked by this contract\n @return A count of valid NFTs tracked by this contract, where each one of\n  them has an assigned and queryable owner not equal to the zero address"
									},
									"functionSelector": "18160ddd",
									"id": 3791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "570:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:2:14"
									},
									"returnParameters": {
										"id": 3790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "607:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:14"
									},
									"scope": 3810,
									"src": "561:55:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3792,
										"nodeType": "StructuredDocumentation",
										"src": "622:251:14",
										"text": " @notice Enumerate valid NFTs\n @dev Throws if `_index` >= `totalSupply()`.\n @param _index A counter less than `totalSupply()`\n @return The token identifier for the `_index`th NFT,\n  (sort order not specified)"
									},
									"functionSelector": "4f6ccce7",
									"id": 3799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "887:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3794,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "908:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "900:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:16:14"
									},
									"returnParameters": {
										"id": 3798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "939:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:14"
									},
									"scope": 3810,
									"src": "878:70:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3800,
										"nodeType": "StructuredDocumentation",
										"src": "954:443:14",
										"text": " @notice Enumerate NFTs assigned to an owner\n @dev Throws if `_index` >= `balanceOf(_owner)` or if\n  `_owner` is the zero address, representing invalid NFTs.\n @param _owner An address where we are interested in NFTs owned by them\n @param _index A counter less than `balanceOf(_owner)`\n @return The token identifier for the `_index`th NFT assigned to `_owner`,\n  (sort order not specified)"
									},
									"functionSelector": "2f745c59",
									"id": 3809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1411:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1439:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3809,
												"src": "1431:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3804,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "1455:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3809,
												"src": "1447:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:32:14"
									},
									"returnParameters": {
										"id": 3808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3809,
												"src": "1486:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:9:14"
									},
									"scope": 3810,
									"src": "1402:93:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3811,
							"src": "288:1209:14",
							"usedErrors": [],
							"usedEvents": [
								3594,
								3603,
								3612
							]
						}
					],
					"src": "33:1465:14"
				},
				"id": 14
			},
			"contracts/ISFT.sol": {
				"ast": {
					"absolutePath": "contracts/ISFT.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						],
						"IERC3525": [
							3579
						],
						"IERC3525SlotApprovable": [
							3737
						],
						"IERC3525SlotEnumerable": [
							3779
						],
						"IERC721": [
							3695
						],
						"IERC721Enumerable": [
							3810
						],
						"ISFT": [
							3855
						]
					},
					"id": 3856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
							"file": "@solvprotocol/erc-3525/extensions/IERC3525SlotApprovable.sol",
							"id": 3813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3856,
							"sourceUnit": 3738,
							"src": "61:70:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
							"file": "@solvprotocol/erc-3525/extensions/IERC3525SlotEnumerable.sol",
							"id": 3814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3856,
							"sourceUnit": 3780,
							"src": "133:70:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3815,
										"name": "IERC3525SlotApprovable",
										"nameLocations": [
											"225:22:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3737,
										"src": "225:22:15"
									},
									"id": 3816,
									"nodeType": "InheritanceSpecifier",
									"src": "225:22:15"
								},
								{
									"baseName": {
										"id": 3817,
										"name": "IERC3525SlotEnumerable",
										"nameLocations": [
											"249:22:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3779,
										"src": "249:22:15"
									},
									"id": 3818,
									"nodeType": "InheritanceSpecifier",
									"src": "249:22:15"
								}
							],
							"canonicalName": "ISFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3855,
							"linearizedBaseContracts": [
								3855,
								3779,
								3810,
								3737,
								3579,
								3695,
								591
							],
							"name": "ISFT",
							"nameLocation": "217:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 3827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "288:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3820,
												"mutability": "mutable",
												"name": "mintTo_",
												"nameLocation": "301:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3827,
												"src": "293:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3822,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "318:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3827,
												"src": "310:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3824,
												"mutability": "mutable",
												"name": "value_",
												"nameLocation": "333:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3827,
												"src": "325:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:48:15"
									},
									"returnParameters": {
										"id": 3826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:15"
									},
									"scope": 3855,
									"src": "279:71:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0e88e7f",
									"id": 3834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintValue",
									"nameLocation": "365:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3829,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "383:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3834,
												"src": "375:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3831,
												"mutability": "mutable",
												"name": "value_",
												"nameLocation": "401:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3834,
												"src": "393:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:34:15"
									},
									"returnParameters": {
										"id": 3833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:0:15"
									},
									"scope": 3855,
									"src": "356:62:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd3fc0ab",
									"id": 3839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_offchainReferenceID",
									"nameLocation": "433:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:15"
									},
									"returnParameters": {
										"id": 3838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3839,
												"src": "479:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:9:15"
									},
									"scope": 3855,
									"src": "424:64:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a786c18b",
									"id": 3844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerAddress",
									"nameLocation": "503:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:2:15"
									},
									"returnParameters": {
										"id": 3843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3844,
												"src": "542:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:9:15"
									},
									"scope": 3855,
									"src": "494:57:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e6ec2cb",
									"id": 3849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_queryPrice",
									"nameLocation": "566:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:2:15"
									},
									"returnParameters": {
										"id": 3848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3849,
												"src": "603:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:9:15"
									},
									"scope": 3855,
									"src": "557:55:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 3854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "627:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:2:15"
									},
									"returnParameters": {
										"id": 3853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3854,
												"src": "659:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:9:15"
									},
									"scope": 3855,
									"src": "618:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3856,
							"src": "207:464:15",
							"usedErrors": [],
							"usedEvents": [
								3496,
								3505,
								3514,
								3594,
								3603,
								3612,
								3712
							]
						}
					],
					"src": "33:640:15"
				},
				"id": 15
			},
			"contracts/KipProtocol.sol": {
				"ast": {
					"absolutePath": "contracts/KipProtocol.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"EnumerableMap": [
							2865
						],
						"EnumerableSet": [
							3478
						],
						"IERC165": [
							591
						],
						"IERC20": [
							225
						],
						"IERC3525": [
							3579
						],
						"IERC3525SlotApprovable": [
							3737
						],
						"IERC3525SlotEnumerable": [
							3779
						],
						"IERC721": [
							3695
						],
						"IERC721Enumerable": [
							3810
						],
						"ISFT": [
							3855
						],
						"KipProtocol": [
							4316
						],
						"Math": [
							1645
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							324
						],
						"SignedMath": [
							1750
						],
						"Strings": [
							579
						]
					},
					"id": 4317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 3858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4317,
							"sourceUnit": 580,
							"src": "58:51:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4317,
							"sourceUnit": 148,
							"src": "110:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3860,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4317,
							"sourceUnit": 226,
							"src": "163:56:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
							"id": 3861,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4317,
							"sourceUnit": 2866,
							"src": "220:65:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 3862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4317,
							"sourceUnit": 325,
							"src": "286:59:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ISFT.sol",
							"file": "./ISFT.sol",
							"id": 3863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4317,
							"sourceUnit": 3856,
							"src": "346:20:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3864,
										"name": "Ownable",
										"nameLocations": [
											"392:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "392:7:16"
									},
									"id": 3865,
									"nodeType": "InheritanceSpecifier",
									"src": "392:7:16"
								},
								{
									"baseName": {
										"id": 3866,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"401:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "401:15:16"
									},
									"id": 3867,
									"nodeType": "InheritanceSpecifier",
									"src": "401:15:16"
								}
							],
							"canonicalName": "KipProtocol",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4316,
							"linearizedBaseContracts": [
								4316,
								324,
								147,
								255
							],
							"name": "KipProtocol",
							"nameLocation": "377:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3870,
									"libraryName": {
										"id": 3868,
										"name": "Strings",
										"nameLocations": [
											"429:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "429:7:16"
									},
									"nodeType": "UsingForDirective",
									"src": "423:26:16",
									"typeName": {
										"id": 3869,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 3873,
									"libraryName": {
										"id": 3871,
										"name": "Strings",
										"nameLocations": [
											"460:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "460:7:16"
									},
									"nodeType": "UsingForDirective",
									"src": "454:26:16",
									"typeName": {
										"id": 3872,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 3877,
									"libraryName": {
										"id": 3874,
										"name": "EnumerableMap",
										"nameLocations": [
											"491:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2865,
										"src": "491:13:16"
									},
									"nodeType": "UsingForDirective",
									"src": "485:52:16",
									"typeName": {
										"id": 3876,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3875,
											"name": "EnumerableMap.UintToUintMap",
											"nameLocations": [
												"509:13:16",
												"523:13:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1986,
											"src": "509:27:16"
										},
										"referencedDeclaration": 1986,
										"src": "509:27:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
											"typeString": "struct EnumerableMap.UintToUintMap"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2ff6fe76",
									"id": 3879,
									"mutability": "mutable",
									"name": "priceToken",
									"nameLocation": "562:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "547:25:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3878,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ea1d6f8",
									"id": 3881,
									"mutability": "mutable",
									"name": "commissionRate",
									"nameLocation": "639:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "624:29:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3880,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48818bde",
									"id": 3883,
									"mutability": "mutable",
									"name": "lastConsumeID",
									"nameLocation": "690:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "675:28:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3882,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb771cb5",
									"id": 3885,
									"mutability": "mutable",
									"name": "sftSlot",
									"nameLocation": "724:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "709:22:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3884,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "709:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0e0a569",
									"id": 3889,
									"mutability": "mutable",
									"name": "sft_assets",
									"nameLocation": "773:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "738:45:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 3888,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3886,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "746:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "738:27:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3887,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "757:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a335a003",
									"id": 3893,
									"mutability": "mutable",
									"name": "consumer_balance",
									"nameLocation": "825:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "790:51:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3892,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3890,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "798:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "790:27:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3891,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "809:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cae5ec04",
									"id": 3897,
									"mutability": "mutable",
									"name": "service_provider",
									"nameLocation": "879:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "847:48:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3896,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3894,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "855:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "847:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3895,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "866:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3902,
									"mutability": "mutable",
									"name": "sft_token_profit",
									"nameLocation": "957:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 4316,
									"src": "901:72:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintToUintMap_$1986_storage_$",
										"typeString": "mapping(address => struct EnumerableMap.UintToUintMap)"
									},
									"typeName": {
										"id": 3901,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3898,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "909:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "901:47:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintToUintMap_$1986_storage_$",
											"typeString": "mapping(address => struct EnumerableMap.UintToUintMap)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3900,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3899,
												"name": "EnumerableMap.UintToUintMap",
												"nameLocations": [
													"920:13:16",
													"934:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1986,
												"src": "920:27:16"
											},
											"referencedDeclaration": 1986,
											"src": "920:27:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
												"typeString": "struct EnumerableMap.UintToUintMap"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "KipProtocol.receipt",
									"id": 3907,
									"members": [
										{
											"constant": false,
											"id": 3904,
											"mutability": "mutable",
											"name": "reference_id",
											"nameLocation": "1012:12:16",
											"nodeType": "VariableDeclaration",
											"scope": 3907,
											"src": "1004:20:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3903,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1004:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3906,
											"mutability": "mutable",
											"name": "profit_per_share",
											"nameLocation": "1042:16:16",
											"nodeType": "VariableDeclaration",
											"scope": 3907,
											"src": "1034:24:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3905,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "receipt",
									"nameLocation": "987:7:16",
									"nodeType": "StructDefinition",
									"scope": 4316,
									"src": "980:85:16",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7944cc49dc8637e3cacb75b6261e778f93a87026e0357ae7c3b0e434324afa35",
									"id": 3911,
									"name": "CommissionRateChanged",
									"nameLocation": "1077:21:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3909,
												"indexed": false,
												"mutability": "mutable",
												"name": "newfee_",
												"nameLocation": "1107:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3911,
												"src": "1099:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:17:16"
									},
									"src": "1071:45:16"
								},
								{
									"anonymous": false,
									"eventSelector": "3178e1e682d183b22b2c0a13af9e136c3e9a37b76bd71d47bf24a80710441e8f",
									"id": 3917,
									"name": "ServiceProviderChanged",
									"nameLocation": "1127:22:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3913,
												"indexed": false,
												"mutability": "mutable",
												"name": "_providerAddress",
												"nameLocation": "1158:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3917,
												"src": "1150:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3915,
												"indexed": false,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "1181:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3917,
												"src": "1176:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:41:16"
									},
									"src": "1121:70:16"
								},
								{
									"anonymous": false,
									"eventSelector": "b9a1bffb5ad7fcaeb79fe2262ee61bc2b44689df94bb558f7e70eac20cbd0a05",
									"id": 3923,
									"name": "ConsumerBalanceRecharged",
									"nameLocation": "1202:24:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3919,
												"indexed": false,
												"mutability": "mutable",
												"name": "_walletAddress",
												"nameLocation": "1235:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "1227:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3921,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "1259:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "1251:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:41:16"
									},
									"src": "1196:72:16"
								},
								{
									"anonymous": false,
									"eventSelector": "3deeffca3c86a528758b0ff95b46b531e03be332bf88cb7e2c7b0b8daa608c31",
									"id": 3933,
									"name": "TokenCreated",
									"nameLocation": "1279:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3925,
												"indexed": false,
												"mutability": "mutable",
												"name": "sft_address",
												"nameLocation": "1300:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "1292:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3927,
												"indexed": false,
												"mutability": "mutable",
												"name": "slot_value",
												"nameLocation": "1321:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "1313:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3929,
												"indexed": false,
												"mutability": "mutable",
												"name": "token_amount",
												"nameLocation": "1341:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "1333:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3931,
												"indexed": false,
												"mutability": "mutable",
												"name": "reference_id",
												"nameLocation": "1363:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "1355:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:85:16"
									},
									"src": "1273:104:16"
								},
								{
									"anonymous": false,
									"eventSelector": "9b44827111b30d796166e9f9515e9d6ee25234c008ed7157ec1128263e888728",
									"id": 3937,
									"name": "PriceTokenChanged",
									"nameLocation": "1388:17:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3935,
												"indexed": false,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "1414:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3937,
												"src": "1406:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:23:16"
									},
									"src": "1382:47:16"
								},
								{
									"anonymous": false,
									"eventSelector": "74abd6f2bb39b1eb84983e4e8df1378da42d32f24a5c984b6d1456bfd24f8cb9",
									"id": 3947,
									"name": "ConsumeLog",
									"nameLocation": "1440:10:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3939,
												"indexed": false,
												"mutability": "mutable",
												"name": "consume_id",
												"nameLocation": "1459:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3947,
												"src": "1451:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3941,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1479:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3947,
												"src": "1471:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3945,
												"indexed": false,
												"mutability": "mutable",
												"name": "_receipt",
												"nameLocation": "1498:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3947,
												"src": "1488:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct KipProtocol.receipt[]"
												},
												"typeName": {
													"baseType": {
														"id": 3943,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3942,
															"name": "receipt",
															"nameLocations": [
																"1488:7:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3907,
															"src": "1488:7:16"
														},
														"referencedDeclaration": 3907,
														"src": "1488:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_receipt_$3907_storage_ptr",
															"typeString": "struct KipProtocol.receipt"
														}
													},
													"id": 3944,
													"nodeType": "ArrayTypeName",
													"src": "1488:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_receipt_$3907_storage_$dyn_storage_ptr",
														"typeString": "struct KipProtocol.receipt[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1450:57:16"
									},
									"src": "1434:74:16"
								},
								{
									"body": {
										"id": 3975,
										"nodeType": "Block",
										"src": "1616:131:16",
										"statements": [
											{
												"expression": {
													"id": 3961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3959,
														"name": "priceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "1626:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3960,
														"name": "price_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3951,
														"src": "1639:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1626:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3962,
												"nodeType": "ExpressionStatement",
												"src": "1626:24:16"
											},
											{
												"expression": {
													"id": 3965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3963,
														"name": "commissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3881,
														"src": "1660:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3964,
														"name": "commission_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3953,
														"src": "1677:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1660:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3966,
												"nodeType": "ExpressionStatement",
												"src": "1660:32:16"
											},
											{
												"expression": {
													"id": 3969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3967,
														"name": "lastConsumeID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3883,
														"src": "1702:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1718:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1702:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3970,
												"nodeType": "ExpressionStatement",
												"src": "1702:17:16"
											},
											{
												"expression": {
													"id": 3973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3971,
														"name": "sftSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3885,
														"src": "1729:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1739:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1729:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3974,
												"nodeType": "ExpressionStatement",
												"src": "1729:11:16"
											}
										]
									},
									"id": 3976,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3956,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3949,
													"src": "1602:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3957,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3955,
												"name": "Ownable",
												"nameLocations": [
													"1594:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1594:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1594:21:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3949,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1534:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3976,
												"src": "1526:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3951,
												"mutability": "mutable",
												"name": "price_token",
												"nameLocation": "1556:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3976,
												"src": "1548:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3953,
												"mutability": "mutable",
												"name": "commission_rate",
												"nameLocation": "1577:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 3976,
												"src": "1569:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:68:16"
									},
									"returnParameters": {
										"id": 3958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:16"
									},
									"scope": 4316,
									"src": "1514:233:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4057,
										"nodeType": "Block",
										"src": "1844:525:16",
										"statements": [
											{
												"assignments": [
													3987
												],
												"declarations": [
													{
														"constant": false,
														"id": 3987,
														"mutability": "mutable",
														"name": "sft_entry",
														"nameLocation": "1859:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 4057,
														"src": "1854:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISFT_$3855",
															"typeString": "contract ISFT"
														},
														"typeName": {
															"id": 3986,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3985,
																"name": "ISFT",
																"nameLocations": [
																	"1854:4:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3855,
																"src": "1854:4:16"
															},
															"referencedDeclaration": 3855,
															"src": "1854:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISFT_$3855",
																"typeString": "contract ISFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3991,
												"initialValue": {
													"arguments": [
														{
															"id": 3989,
															"name": "sft_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3978,
															"src": "1876:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3988,
														"name": "ISFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3855,
														"src": "1871:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISFT_$3855_$",
															"typeString": "type(contract ISFT)"
														}
													},
													"id": 3990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:17:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISFT_$3855",
														"typeString": "contract ISFT"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1854:34:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3993,
																		"name": "sft_entry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3987,
																		"src": "1906:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISFT_$3855",
																			"typeString": "contract ISFT"
																		}
																	},
																	"id": 3994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1916:5:16",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3854,
																	"src": "1906:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 3995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1906:17:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3998,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1935:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_KipProtocol_$4316",
																			"typeString": "contract KipProtocol"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_KipProtocol_$4316",
																			"typeString": "contract KipProtocol"
																		}
																	],
																	"id": 3997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1927:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3996,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1927:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 3999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1927:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1906:34:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061206f776e6572",
															"id": 4001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1942:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4f661964a11f432e6b46ac120b6a86a772a05a42a54d1c4deae09f5f0134910",
																"typeString": "literal_string \"Not a owner\""
															},
															"value": "Not a owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4f661964a11f432e6b46ac120b6a86a772a05a42a54d1c4deae09f5f0134910",
																"typeString": "literal_string \"Not a owner\""
															}
														],
														"id": 3992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1898:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:58:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4003,
												"nodeType": "ExpressionStatement",
												"src": "1898:58:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 4005,
																	"name": "sft_assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3889,
																	"src": "1974:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 4009,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 4006,
																			"name": "sft_entry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3987,
																			"src": "1985:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISFT_$3855",
																				"typeString": "contract ISFT"
																			}
																		},
																		"id": 4007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1995:20:16",
																		"memberName": "_offchainReferenceID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3839,
																		"src": "1985:30:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 4008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1985:32:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1974:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2030:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2022:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4010,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2022:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 4013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2022:10:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1974:58:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792063726561746564",
															"id": 4015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2034:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f28f12a731de969b49519afdbb2a93e6efb5794c4edab1390cde2eb3409e2d78",
																"typeString": "literal_string \"Already created\""
															},
															"value": "Already created"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f28f12a731de969b49519afdbb2a93e6efb5794c4edab1390cde2eb3409e2d78",
																"typeString": "literal_string \"Already created\""
															}
														],
														"id": 4004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1966:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1966:86:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4017,
												"nodeType": "ExpressionStatement",
												"src": "1966:86:16"
											},
											{
												"body": {
													"id": 4038,
													"nodeType": "Block",
													"src": "2107:87:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 4031,
																				"name": "sft_entry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3987,
																				"src": "2136:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISFT_$3855",
																					"typeString": "contract ISFT"
																				}
																			},
																			"id": 4032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2146:13:16",
																			"memberName": "_ownerAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3844,
																			"src": "2136:23:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 4033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2136:25:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 4034,
																		"name": "sftSlot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3885,
																		"src": "2163:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4035,
																		"name": "slot_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3980,
																		"src": "2172:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 4028,
																		"name": "sft_entry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3987,
																		"src": "2121:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISFT_$3855",
																			"typeString": "contract ISFT"
																		}
																	},
																	"id": 4030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2131:4:16",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3827,
																	"src": "2121:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) external"
																	}
																},
																"id": 4036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2121:62:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4037,
															"nodeType": "ExpressionStatement",
															"src": "2121:62:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4022,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4019,
														"src": "2083:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 4023,
														"name": "token_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3982,
														"src": "2088:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2083:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4039,
												"initializationExpression": {
													"assignments": [
														4019
													],
													"declarations": [
														{
															"constant": false,
															"id": 4019,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2076:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 4039,
															"src": "2068:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4018,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2068:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4021,
													"initialValue": {
														"hexValue": "31",
														"id": 4020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2080:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2068:13:16"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2102:3:16",
														"subExpression": {
															"id": 4025,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4019,
															"src": "2102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4027,
													"nodeType": "ExpressionStatement",
													"src": "2102:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2063:131:16"
											},
											{
												"expression": {
													"id": 4046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4040,
															"name": "sft_assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3889,
															"src": "2203:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 4044,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4041,
																	"name": "sft_entry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3987,
																	"src": "2214:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISFT_$3855",
																		"typeString": "contract ISFT"
																	}
																},
																"id": 4042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2224:20:16",
																"memberName": "_offchainReferenceID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3839,
																"src": "2214:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 4043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2214:32:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2203:44:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4045,
														"name": "sft_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3978,
														"src": "2250:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2203:58:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4047,
												"nodeType": "ExpressionStatement",
												"src": "2203:58:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4049,
															"name": "sft_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3978,
															"src": "2290:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4050,
															"name": "slot_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3980,
															"src": "2303:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4051,
															"name": "token_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3982,
															"src": "2315:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4052,
																	"name": "sft_entry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3987,
																	"src": "2329:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISFT_$3855",
																		"typeString": "contract ISFT"
																	}
																},
																"id": 4053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2339:20:16",
																"memberName": "_offchainReferenceID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3839,
																"src": "2329:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 4054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2329:32:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4048,
														"name": "TokenCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3933,
														"src": "2277:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 4055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:85:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4056,
												"nodeType": "EmitStatement",
												"src": "2272:90:16"
											}
										]
									},
									"functionSelector": "dbdcebde",
									"id": 4058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createToken",
									"nameLocation": "1762:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3978,
												"mutability": "mutable",
												"name": "sft_address",
												"nameLocation": "1782:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 4058,
												"src": "1774:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3980,
												"mutability": "mutable",
												"name": "slot_value",
												"nameLocation": "1803:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 4058,
												"src": "1795:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3982,
												"mutability": "mutable",
												"name": "token_amount",
												"nameLocation": "1823:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 4058,
												"src": "1815:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:63:16"
									},
									"returnParameters": {
										"id": 3984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1844:0:16"
									},
									"scope": 4316,
									"src": "1753:616:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4215,
										"nodeType": "Block",
										"src": "2462:1321:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 4070,
																"name": "service_provider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3897,
																"src": "2480:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 4073,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4071,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "2497:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 4072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2497:12:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2480:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612070726f7669646572",
															"id": 4074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2512:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_184bad15784cb910f263e8e4ee02d49989e8afe6a24679e01122776f1c3e056e",
																"typeString": "literal_string \"Not a provider\""
															},
															"value": "Not a provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_184bad15784cb910f263e8e4ee02d49989e8afe6a24679e01122776f1c3e056e",
																"typeString": "literal_string \"Not a provider\""
															}
														],
														"id": 4069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2472:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:57:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4076,
												"nodeType": "ExpressionStatement",
												"src": "2472:57:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4078,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4062,
																"src": "2547:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 4079,
																	"name": "consumer_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3893,
																	"src": "2556:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 4081,
																"indexExpression": {
																	"id": 4080,
																	"name": "_consumer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4060,
																	"src": "2573:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2556:27:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2547:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206120656e6f756768206d6f6e6579",
															"id": 4083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854b34d0acc5cb8b3bc007af37909df0d1553bdec3cfe89e014c60eb1a0d98c1",
																"typeString": "literal_string \"Not a enough money\""
															},
															"value": "Not a enough money"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854b34d0acc5cb8b3bc007af37909df0d1553bdec3cfe89e014c60eb1a0d98c1",
																"typeString": "literal_string \"Not a enough money\""
															}
														],
														"id": 4077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2539:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2539:67:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4085,
												"nodeType": "ExpressionStatement",
												"src": "2539:67:16"
											},
											{
												"body": {
													"id": 4204,
													"nodeType": "Block",
													"src": "2663:1027:16",
													"statements": [
														{
															"assignments": [
																4098
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4098,
																	"mutability": "mutable",
																	"name": "_sft_address",
																	"nameLocation": "2686:12:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 4204,
																	"src": "2678:20:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 4097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2678:7:16",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4105,
															"initialValue": {
																"baseExpression": {
																	"id": 4099,
																	"name": "sft_assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3889,
																	"src": "2701:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 4104,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4100,
																			"name": "_receipt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4066,
																			"src": "2712:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct KipProtocol.receipt memory[] memory"
																			}
																		},
																		"id": 4102,
																		"indexExpression": {
																			"id": 4101,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4087,
																			"src": "2721:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2712:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_receipt_$3907_memory_ptr",
																			"typeString": "struct KipProtocol.receipt memory"
																		}
																	},
																	"id": 4103,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2724:12:16",
																	"memberName": "reference_id",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3904,
																	"src": "2712:24:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2701:36:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2678:59:16"
														},
														{
															"assignments": [
																4107
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4107,
																	"mutability": "mutable",
																	"name": "_profit_per_share",
																	"nameLocation": "2759:17:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 4204,
																	"src": "2751:25:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4106,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2751:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4112,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 4108,
																		"name": "_receipt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4066,
																		"src": "2779:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct KipProtocol.receipt memory[] memory"
																		}
																	},
																	"id": 4110,
																	"indexExpression": {
																		"id": 4109,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4087,
																		"src": "2788:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2779:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_receipt_$3907_memory_ptr",
																		"typeString": "struct KipProtocol.receipt memory"
																	}
																},
																"id": 4111,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2791:16:16",
																"memberName": "profit_per_share",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3906,
																"src": "2779:28:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2751:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 4119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4114,
																			"name": "_sft_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4098,
																			"src": "2830:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 4117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2854:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 4116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2846:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 4115,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2846:7:16",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2846:10:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2830:26:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5265666572656e6365494420646f6573206e6f74206578697374",
																		"id": 4120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2858:28:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d19debe52d26886adbe51c9a9f8f9d015ece4f00223c9099dd110a57b950ab37",
																			"typeString": "literal_string \"ReferenceID does not exist\""
																		},
																		"value": "ReferenceID does not exist"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d19debe52d26886adbe51c9a9f8f9d015ece4f00223c9099dd110a57b950ab37",
																			"typeString": "literal_string \"ReferenceID does not exist\""
																		}
																	],
																	"id": 4113,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2822:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2822:65:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4122,
															"nodeType": "ExpressionStatement",
															"src": "2822:65:16"
														},
														{
															"assignments": [
																4125
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4125,
																	"mutability": "mutable",
																	"name": "sft_entry",
																	"nameLocation": "2907:9:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 4204,
																	"src": "2902:14:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISFT_$3855",
																		"typeString": "contract ISFT"
																	},
																	"typeName": {
																		"id": 4124,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 4123,
																			"name": "ISFT",
																			"nameLocations": [
																				"2902:4:16"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 3855,
																			"src": "2902:4:16"
																		},
																		"referencedDeclaration": 3855,
																		"src": "2902:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISFT_$3855",
																			"typeString": "contract ISFT"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4129,
															"initialValue": {
																"arguments": [
																	{
																		"id": 4127,
																		"name": "_sft_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4098,
																		"src": "2924:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 4126,
																	"name": "ISFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "2919:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISFT_$3855_$",
																		"typeString": "type(contract ISFT)"
																	}
																},
																"id": 4128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2919:18:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISFT_$3855",
																	"typeString": "contract ISFT"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2902:35:16"
														},
														{
															"assignments": [
																4134
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4134,
																	"mutability": "mutable",
																	"name": "token_profit",
																	"nameLocation": "2988:12:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 4204,
																	"src": "2952:48:16",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																		"typeString": "struct EnumerableMap.UintToUintMap"
																	},
																	"typeName": {
																		"id": 4133,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 4132,
																			"name": "EnumerableMap.UintToUintMap",
																			"nameLocations": [
																				"2952:13:16",
																				"2966:13:16"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1986,
																			"src": "2952:27:16"
																		},
																		"referencedDeclaration": 1986,
																		"src": "2952:27:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4138,
															"initialValue": {
																"baseExpression": {
																	"id": 4135,
																	"name": "sft_token_profit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3902,
																	"src": "3003:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintToUintMap_$1986_storage_$",
																		"typeString": "mapping(address => struct EnumerableMap.UintToUintMap storage ref)"
																	}
																},
																"id": 4137,
																"indexExpression": {
																	"id": 4136,
																	"name": "_sft_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4098,
																	"src": "3020:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3003:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage",
																	"typeString": "struct EnumerableMap.UintToUintMap storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2952:81:16"
														},
														{
															"body": {
																"id": 4202,
																"nodeType": "Block",
																"src": "3115:552:16",
																"statements": [
																	{
																		"assignments": [
																			4153
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 4153,
																				"mutability": "mutable",
																				"name": "_sft_token_id",
																				"nameLocation": "3141:13:16",
																				"nodeType": "VariableDeclaration",
																				"scope": 4202,
																				"src": "3133:21:16",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 4152,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3133:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 4159,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 4156,
																					"name": "sftSlot",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3885,
																					"src": "3186:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 4157,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4140,
																					"src": "3194:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 4154,
																					"name": "sft_entry",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4125,
																					"src": "3157:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISFT_$3855",
																						"typeString": "contract ISFT"
																					}
																				},
																				"id": 4155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3167:18:16",
																				"memberName": "tokenInSlotByIndex",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3778,
																				"src": "3157:28:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view external returns (uint256)"
																				}
																			},
																			"id": 4158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3157:39:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3133:63:16"
																	},
																	{
																		"assignments": [
																			4161
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 4161,
																				"mutability": "mutable",
																				"name": "_slot_value",
																				"nameLocation": "3222:11:16",
																				"nodeType": "VariableDeclaration",
																				"scope": 4202,
																				"src": "3214:19:16",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 4160,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3214:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 4166,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 4164,
																					"name": "_sft_token_id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4153,
																					"src": "3256:13:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 4162,
																					"name": "sft_entry",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4125,
																					"src": "3236:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISFT_$3855",
																						"typeString": "contract ISFT"
																					}
																				},
																				"id": 4163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3246:9:16",
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3528,
																				"src": "3236:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) view external returns (uint256)"
																				}
																			},
																			"id": 4165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3236:34:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3214:56:16"
																	},
																	{
																		"assignments": [
																			4168,
																			4170
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 4168,
																				"mutability": "mutable",
																				"name": "tokenIsExist",
																				"nameLocation": "3294:12:16",
																				"nodeType": "VariableDeclaration",
																				"scope": 4202,
																				"src": "3289:17:16",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 4167,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "3289:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			{
																				"constant": false,
																				"id": 4170,
																				"mutability": "mutable",
																				"name": "beforeValue",
																				"nameLocation": "3316:11:16",
																				"nodeType": "VariableDeclaration",
																				"scope": 4202,
																				"src": "3308:19:16",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 4169,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3308:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 4175,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 4173,
																					"name": "_sft_token_id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4153,
																					"src": "3351:13:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 4171,
																					"name": "token_profit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4134,
																					"src": "3331:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																						"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																					}
																				},
																				"id": 4172,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3344:6:16",
																				"memberName": "tryGet",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2138,
																				"src": "3331:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_UintToUintMap_$1986_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_struct$_UintToUintMap_$1986_storage_ptr_$",
																					"typeString": "function (struct EnumerableMap.UintToUintMap storage pointer,uint256) view returns (bool,uint256)"
																				}
																			},
																			"id": 4174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3331:34:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3288:77:16"
																	},
																	{
																		"assignments": [
																			4177
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 4177,
																				"mutability": "mutable",
																				"name": "newValue",
																				"nameLocation": "3391:8:16",
																				"nodeType": "VariableDeclaration",
																				"scope": 4202,
																				"src": "3383:16:16",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 4176,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3383:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 4181,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4178,
																				"name": "_slot_value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4161,
																				"src": "3402:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 4179,
																				"name": "_profit_per_share",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4107,
																				"src": "3416:17:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3402:31:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3383:50:16"
																	},
																	{
																		"condition": {
																			"id": 4182,
																			"name": "tokenIsExist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4168,
																			"src": "3455:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 4200,
																			"nodeType": "Block",
																			"src": "3571:82:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 4196,
																								"name": "_sft_token_id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4153,
																								"src": "3610:13:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 4197,
																								"name": "newValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4177,
																								"src": "3625:8:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 4193,
																								"name": "token_profit",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4134,
																								"src": "3593:12:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																									"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																								}
																							},
																							"id": 4195,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3606:3:16",
																							"memberName": "set",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2013,
																							"src": "3593:16:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToUintMap_$1986_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintToUintMap_$1986_storage_ptr_$",
																								"typeString": "function (struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256) returns (bool)"
																							}
																						},
																						"id": 4198,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3593:41:16",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 4199,
																					"nodeType": "ExpressionStatement",
																					"src": "3593:41:16"
																				}
																			]
																		},
																		"id": 4201,
																		"nodeType": "IfStatement",
																		"src": "3451:202:16",
																		"trueBody": {
																			"id": 4192,
																			"nodeType": "Block",
																			"src": "3469:96:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 4186,
																								"name": "_sft_token_id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4153,
																								"src": "3508:13:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 4189,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 4187,
																									"name": "beforeValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4170,
																									"src": "3523:11:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 4188,
																									"name": "newValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4177,
																									"src": "3537:8:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3523:22:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 4183,
																								"name": "token_profit",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4134,
																								"src": "3491:12:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UintToUintMap_$1986_storage_ptr",
																									"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																								}
																							},
																							"id": 4185,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3504:3:16",
																							"memberName": "set",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2013,
																							"src": "3491:16:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToUintMap_$1986_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintToUintMap_$1986_storage_ptr_$",
																								"typeString": "function (struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256) returns (bool)"
																							}
																						},
																						"id": 4190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3491:55:16",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 4191,
																					"nodeType": "ExpressionStatement",
																					"src": "3491:55:16"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4143,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4140,
																	"src": "3068:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 4146,
																			"name": "sftSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3885,
																			"src": "3100:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 4144,
																			"name": "sft_entry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4125,
																			"src": "3072:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISFT_$3855",
																				"typeString": "contract ISFT"
																			}
																		},
																		"id": 4145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3082:17:16",
																		"memberName": "tokenSupplyInSlot",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3768,
																		"src": "3072:27:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256)"
																		}
																	},
																	"id": 4147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3072:36:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3068:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4203,
															"initializationExpression": {
																"assignments": [
																	4140
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 4140,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "3061:1:16",
																		"nodeType": "VariableDeclaration",
																		"scope": 4203,
																		"src": "3053:9:16",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 4139,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3053:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 4142,
																"initialValue": {
																	"hexValue": "30",
																	"id": 4141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3065:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3053:13:16"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 4150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3110:3:16",
																	"subExpression": {
																		"id": 4149,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4140,
																		"src": "3110:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 4151,
																"nodeType": "ExpressionStatement",
																"src": "3110:3:16"
															},
															"nodeType": "ForStatement",
															"src": "3048:619:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4090,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4087,
														"src": "2637:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 4091,
															"name": "_receipt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4066,
															"src": "2641:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct KipProtocol.receipt memory[] memory"
															}
														},
														"id": 4092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2650:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2641:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2637:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4205,
												"initializationExpression": {
													"assignments": [
														4087
													],
													"declarations": [
														{
															"constant": false,
															"id": 4087,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2630:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 4205,
															"src": "2622:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4086,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2622:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4089,
													"initialValue": {
														"hexValue": "30",
														"id": 4088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2634:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2622:13:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 4095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2658:3:16",
														"subExpression": {
															"id": 4094,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4087,
															"src": "2658:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4096,
													"nodeType": "ExpressionStatement",
													"src": "2658:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2617:1073:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4207,
															"name": "lastConsumeID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3883,
															"src": "3716:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4208,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4062,
															"src": "3731:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4209,
															"name": "_receipt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4066,
															"src": "3741:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct KipProtocol.receipt memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct KipProtocol.receipt memory[] memory"
															}
														],
														"id": 4206,
														"name": "ConsumeLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3947,
														"src": "3705:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,struct KipProtocol.receipt memory[] memory)"
														}
													},
													"id": 4210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3705:45:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4211,
												"nodeType": "EmitStatement",
												"src": "3700:50:16"
											},
											{
												"expression": {
													"id": 4213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3761:15:16",
													"subExpression": {
														"id": 4212,
														"name": "lastConsumeID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3883,
														"src": "3761:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4214,
												"nodeType": "ExpressionStatement",
												"src": "3761:15:16"
											}
										]
									},
									"functionSelector": "b85f4344",
									"id": 4216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consume",
									"nameLocation": "2384:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4060,
												"mutability": "mutable",
												"name": "_consumer",
												"nameLocation": "2400:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "2392:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4062,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2419:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "2411:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4066,
												"mutability": "mutable",
												"name": "_receipt",
												"nameLocation": "2445:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "2428:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_receipt_$3907_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct KipProtocol.receipt[]"
												},
												"typeName": {
													"baseType": {
														"id": 4064,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4063,
															"name": "receipt",
															"nameLocations": [
																"2428:7:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3907,
															"src": "2428:7:16"
														},
														"referencedDeclaration": 3907,
														"src": "2428:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_receipt_$3907_storage_ptr",
															"typeString": "struct KipProtocol.receipt"
														}
													},
													"id": 4065,
													"nodeType": "ArrayTypeName",
													"src": "2428:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_receipt_$3907_storage_$dyn_storage_ptr",
														"typeString": "struct KipProtocol.receipt[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:63:16"
									},
									"returnParameters": {
										"id": 4068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2462:0:16"
									},
									"scope": 4316,
									"src": "2375:1408:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4223,
										"nodeType": "Block",
										"src": "3845:37:16",
										"statements": [
											{
												"expression": {
													"id": 4221,
													"name": "lastConsumeID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3883,
													"src": "3862:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4220,
												"id": 4222,
												"nodeType": "Return",
												"src": "3855:20:16"
											}
										]
									},
									"functionSelector": "ec10342c",
									"id": 4224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lastConsumeID",
									"nameLocation": "3798:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3812:2:16"
									},
									"returnParameters": {
										"id": 4220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4224,
												"src": "3836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:9:16"
									},
									"scope": 4316,
									"src": "3789:93:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4261,
										"nodeType": "Block",
										"src": "3930:228:16",
										"statements": [
											{
												"assignments": [
													4231
												],
												"declarations": [
													{
														"constant": false,
														"id": 4231,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3947:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 4261,
														"src": "3940:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 4230,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4229,
																"name": "IERC20",
																"nameLocations": [
																	"3940:6:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 225,
																"src": "3940:6:16"
															},
															"referencedDeclaration": 225,
															"src": "3940:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4235,
												"initialValue": {
													"arguments": [
														{
															"id": 4233,
															"name": "priceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3879,
															"src": "3962:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4232,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "3955:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 4234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3955:18:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3940:33:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4239,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "4002:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4002:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4243,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4024:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipProtocol_$4316",
																		"typeString": "contract KipProtocol"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipProtocol_$4316",
																		"typeString": "contract KipProtocol"
																	}
																],
																"id": 4242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4016:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4241,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4016:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 4244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4016:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4245,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4226,
															"src": "4031:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4236,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4231,
															"src": "3983:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 4238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3989:12:16",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "3983:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 4246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3983:56:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4247,
												"nodeType": "ExpressionStatement",
												"src": "3983:56:16"
											},
											{
												"expression": {
													"id": 4253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4248,
															"name": "consumer_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3893,
															"src": "4049:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4251,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "4066:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4066:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4049:30:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4252,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4226,
														"src": "4083:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4049:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4254,
												"nodeType": "ExpressionStatement",
												"src": "4049:41:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4256,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "4130:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4130:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4258,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4226,
															"src": "4143:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4255,
														"name": "ConsumerBalanceRecharged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3923,
														"src": "4105:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4105:46:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4260,
												"nodeType": "EmitStatement",
												"src": "4100:51:16"
											}
										]
									},
									"functionSelector": "ef299b0b",
									"id": 4262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recharge",
									"nameLocation": "3897:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4226,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "3914:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 4262,
												"src": "3906:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:17:16"
									},
									"returnParameters": {
										"id": 4228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:16"
									},
									"scope": 4316,
									"src": "3888:270:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4277,
										"nodeType": "Block",
										"src": "4226:88:16",
										"statements": [
											{
												"expression": {
													"id": 4271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4269,
														"name": "commissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3881,
														"src": "4236:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4270,
														"name": "_newrate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4264,
														"src": "4253:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4236:25:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4272,
												"nodeType": "ExpressionStatement",
												"src": "4236:25:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4274,
															"name": "_newrate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4264,
															"src": "4298:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4273,
														"name": "CommissionRateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3911,
														"src": "4276:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4276,
												"nodeType": "EmitStatement",
												"src": "4271:36:16"
											}
										]
									},
									"functionSelector": "19fac8fd",
									"id": 4278,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4266,
												"name": "onlyOwner",
												"nameLocations": [
													"4216:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4216:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4216:9:16"
										}
									],
									"name": "setCommissionRate",
									"nameLocation": "4173:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4264,
												"mutability": "mutable",
												"name": "_newrate",
												"nameLocation": "4199:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4278,
												"src": "4191:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4190:18:16"
									},
									"returnParameters": {
										"id": 4268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4226:0:16"
									},
									"scope": 4316,
									"src": "4164:150:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4293,
										"nodeType": "Block",
										"src": "4378:80:16",
										"statements": [
											{
												"expression": {
													"id": 4287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4285,
														"name": "priceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "4388:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4286,
														"name": "newtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4280,
														"src": "4401:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4388:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4288,
												"nodeType": "ExpressionStatement",
												"src": "4388:21:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4290,
															"name": "newtoken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4280,
															"src": "4442:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4289,
														"name": "PriceTokenChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3937,
														"src": "4424:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 4291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4424:27:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4292,
												"nodeType": "EmitStatement",
												"src": "4419:32:16"
											}
										]
									},
									"functionSelector": "411092e3",
									"id": 4294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4282,
												"name": "onlyOwner",
												"nameLocations": [
													"4368:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4368:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4368:9:16"
										}
									],
									"name": "setPriceToken",
									"nameLocation": "4329:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4280,
												"mutability": "mutable",
												"name": "newtoken",
												"nameLocation": "4351:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4294,
												"src": "4343:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:18:16"
									},
									"returnParameters": {
										"id": 4284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4378:0:16"
									},
									"scope": 4316,
									"src": "4320:138:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4314,
										"nodeType": "Block",
										"src": "4542:111:16",
										"statements": [
											{
												"expression": {
													"id": 4307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4303,
															"name": "service_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3897,
															"src": "4552:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 4305,
														"indexExpression": {
															"id": 4304,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4296,
															"src": "4569:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4552:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4306,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4298,
														"src": "4581:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4552:37:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4308,
												"nodeType": "ExpressionStatement",
												"src": "4552:37:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4310,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4296,
															"src": "4627:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4311,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4298,
															"src": "4637:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4309,
														"name": "ServiceProviderChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3917,
														"src": "4604:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 4312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4604:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4313,
												"nodeType": "EmitStatement",
												"src": "4599:47:16"
											}
										]
									},
									"functionSelector": "017e4d1e",
									"id": 4315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4300,
												"name": "onlyOwner",
												"nameLocations": [
													"4532:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4532:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4532:9:16"
										}
									],
									"name": "setServiceProvider",
									"nameLocation": "4473:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4296,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4500:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "4492:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4492:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4298,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "4515:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "4510:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4510:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4491:33:16"
									},
									"returnParameters": {
										"id": 4302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4542:0:16"
									},
									"scope": 4316,
									"src": "4464:189:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4317,
							"src": "368:4287:16",
							"usedErrors": [
								13,
								18,
								269
							],
							"usedEvents": [
								24,
								3911,
								3917,
								3923,
								3933,
								3937,
								3947
							]
						}
					],
					"src": "32:4624:16"
				},
				"id": 16
			}
		}
	}
}